{"version":3,"file":"bundle.js","sources":["../../../../node_modules/svelte/internal/index.mjs","../../../../src/Letter.svelte","../../../../src/wordle.js","../../../../node_modules/bson/dist/bson.browser.esm.js","../../../../node_modules/realm-web/dist/bundle.dom.es.js","../../../../src/App.svelte","../../../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n\timport { createEventDispatcher } from 'svelte';\n  export let color, letter, frozen;\n\n  const dispatch = createEventDispatcher();\n\n  function setColor(theColor) {\n    color = theColor;\n    dispatch('colorchange', {color: theColor})\n  }\n</script>\n\n<div class=\"letter-wrapper\">\n  <div style=\"--letter-color: var(--color-{color})\" class=\"letter\">\n    {letter}\n  </div>\n  <div class=\"color-selector\">\n    <button class=\"absent\" on:click={()=>setColor('absent')} disabled={!!frozen}></button>\n    <button class=\"present\" on:click={()=>setColor('present')} disabled={!!frozen}></button>\n    <button class=\"correct\" on:click={()=>setColor('correct')} disabled={!!frozen}></button>\n  </div>\n</div>\n\n<style>\n  .letter-wrapper {\n    --color-absent: #3a3a3c;\n    --color-correct: #538d4e;\n    --color-present: #b59f3b;\n    --color-undefined: transparent;\n    display: inline-flex;\n    flex-direction: column;\n    margin: 0 8px;\n    align-items: center;\n  }\n  .letter {\n    width: 62px;\n    height: 62px;\n\t\tbackground-color: var(--letter-color);\n    border: 1px solid #3a3a3c;\n    color: #d7dadc;\n    font-size: 32px;\n    line-height: 32px;\n    font-weight: 700;\n    font-family: 'Clear Sans', 'Helvetica Neue', Arial, sans-serif;\n    display: inline-flex;\n    justify-content: center;\n    vertical-align: middle;\n    user-select: none;\n    box-sizing: border-box;\n    align-items: center;\n    margin-bottom: 5px;\n    text-transform: uppercase;\n\t}\n\n  .color-selector button {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    margin: 0;\n    padding: 0;\n    cursor: pointer;\n  }\n\n  .color-selector button:disabled {\n    opacity: 0.3;\n  }\n\n  .color-selector .absent{\n    background-color: var(--color-absent);\n  }\n\n  .color-selector .present{\n    background-color: var(--color-present);\n  }\n\n  .color-selector .correct{\n    background-color: var(--color-correct);\n  }\n</style>","export default class Wordle {\n  \n  static COLOR = {\n    absent: 0,\n    present: 1,\n    correct: 2,\n    undefined: -1\n  };\n\n  static AGG_WITH_REGEX = (regex) => [{\n    $search: {\n      index: 'wordle_dictionary',\n      regex: {\n        query: regex,\n        path: 'word',\n        allowAnalyzedField: true\n      }\n    }\n  }, {\n    $sample: {\n      size: 1\n    }\n  }];\n\n  static BASE_AGG = [{\n    $sample: {\n      size: 1\n    }\n  }];\n\n  constructor () {\n    this.schema = [];\n  }\n\n  agg () {\n    if (this.schema.length === 0) {\n      return Wordle.BASE_AGG;\n    }\n    const regexes = [{ in: '', out: '' }, { in: '', out: '' }, { in: '', out: '' }, { in: '', out: '' }, { in: '', out: '' }];\n    const and = [];\n    for (let col = 0; col < 5; col++) {\n      for (const row of this.schema) {\n        switch (row[col].color) {\n          case Wordle.COLOR.absent:\n            regexes.forEach(r => { r.out += row[col].letter; });\n            break;\n          case Wordle.COLOR.present:\n            regexes[col].out += row[col].letter;\n            and.push(row[col].letter);\n            break;\n          case Wordle.COLOR.correct:\n            regexes[col].in = row[col].letter;\n            break;\n        }\n      }\n    }\n    let regex = '';\n    if (and.length > 0) {\n      regex += and.map(a => `.*${a}.*`).join('&');\n      regex += '&';\n    }\n    regex += regexes.map(r => r.in ? r.in : `[^${r.out}]`).join('');\n    return Wordle.AGG_WITH_REGEX(regex);\n  }\n\n  pushRow (sequence) {\n    this.schema.push(sequence);\n  }\n}","function createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar byteLength_1 = byteLength;\nvar toByteArray_1 = toByteArray;\nvar fromByteArray_1 = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}\n\nvar base64Js = {\n  byteLength: byteLength_1,\n  toByteArray: toByteArray_1,\n  fromByteArray: fromByteArray_1\n};\n\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nvar read = function read(buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nvar write = function write(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\nvar ieee754 = {\n  read: read,\n  write: write\n};\n\nvar buffer$1 = createCommonjsModule(function (module, exports) {\n\n  var customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' ? // eslint-disable-line dot-notation\n  Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n  : null;\n  exports.Buffer = Buffer;\n  exports.SlowBuffer = SlowBuffer;\n  exports.INSPECT_MAX_BYTES = 50;\n  var K_MAX_LENGTH = 0x7fffffff;\n  exports.kMaxLength = K_MAX_LENGTH;\n  /**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n   *               implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * We report that the browser does not support typed arrays if the are not subclassable\n   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n   * for __proto__ and has a buggy typed array implementation.\n   */\n\n  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n  }\n\n  function typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n      var arr = new Uint8Array(1);\n      var proto = {\n        foo: function foo() {\n          return 42;\n        }\n      };\n      Object.setPrototypeOf(proto, Uint8Array.prototype);\n      Object.setPrototypeOf(arr, proto);\n      return arr.foo() === 42;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  Object.defineProperty(Buffer.prototype, 'parent', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.buffer;\n    }\n  });\n  Object.defineProperty(Buffer.prototype, 'offset', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.byteOffset;\n    }\n  });\n\n  function createBuffer(length) {\n    if (length > K_MAX_LENGTH) {\n      throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    } // Return an augmented `Uint8Array` instance\n\n\n    var buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n  /**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */\n\n\n  function Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === 'number') {\n      if (typeof encodingOrOffset === 'string') {\n        throw new TypeError('The \"string\" argument must be of type string. Received type number');\n      }\n\n      return allocUnsafe(arg);\n    }\n\n    return from(arg, encodingOrOffset, length);\n  }\n\n  Buffer.poolSize = 8192; // not used by this implementation\n\n  function from(value, encodingOrOffset, length) {\n    if (typeof value === 'string') {\n      return fromString(value, encodingOrOffset);\n    }\n\n    if (ArrayBuffer.isView(value)) {\n      return fromArrayView(value);\n    }\n\n    if (value == null) {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + babelHelpers[\"typeof\"](value));\n    }\n\n    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    }\n\n    var valueOf = value.valueOf && value.valueOf();\n\n    if (valueOf != null && valueOf !== value) {\n      return Buffer.from(valueOf, encodingOrOffset, length);\n    }\n\n    var b = fromObject(value);\n    if (b) return b;\n\n    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n      return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n    }\n\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + babelHelpers[\"typeof\"](value));\n  }\n  /**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/\n\n\n  Buffer.from = function (value, encodingOrOffset, length) {\n    return from(value, encodingOrOffset, length);\n  }; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n  // https://github.com/feross/buffer/pull/148\n\n\n  Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\n  Object.setPrototypeOf(Buffer, Uint8Array);\n\n  function assertSize(size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('\"size\" argument must be of type number');\n    } else if (size < 0) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n  }\n\n  function alloc(size, fill, encoding) {\n    assertSize(size);\n\n    if (size <= 0) {\n      return createBuffer(size);\n    }\n\n    if (fill !== undefined) {\n      // Only pay attention to encoding if it's a string. This\n      // prevents accidentally sending in a number that would\n      // be interpreted as a start offset.\n      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n    }\n\n    return createBuffer(size);\n  }\n  /**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/\n\n\n  Buffer.alloc = function (size, fill, encoding) {\n    return alloc(size, fill, encoding);\n  };\n\n  function allocUnsafe(size) {\n    assertSize(size);\n    return createBuffer(size < 0 ? 0 : checked(size) | 0);\n  }\n  /**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */\n\n\n  Buffer.allocUnsafe = function (size) {\n    return allocUnsafe(size);\n  };\n  /**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */\n\n\n  Buffer.allocUnsafeSlow = function (size) {\n    return allocUnsafe(size);\n  };\n\n  function fromString(string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n      encoding = 'utf8';\n    }\n\n    if (!Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n\n    var length = byteLength(string, encoding) | 0;\n    var buf = createBuffer(length);\n    var actual = buf.write(string, encoding);\n\n    if (actual !== length) {\n      // Writing a hex string, for example, that contains invalid characters will\n      // cause everything after the first invalid character to be ignored. (e.g.\n      // 'abxxcd' will be treated as 'ab')\n      buf = buf.slice(0, actual);\n    }\n\n    return buf;\n  }\n\n  function fromArrayLike(array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n    var buf = createBuffer(length);\n\n    for (var i = 0; i < length; i += 1) {\n      buf[i] = array[i] & 255;\n    }\n\n    return buf;\n  }\n\n  function fromArrayView(arrayView) {\n    if (isInstance(arrayView, Uint8Array)) {\n      var copy = new Uint8Array(arrayView);\n      return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n\n    return fromArrayLike(arrayView);\n  }\n\n  function fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n      throw new RangeError('\"offset\" is outside of buffer bounds');\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n      throw new RangeError('\"length\" is outside of buffer bounds');\n    }\n\n    var buf;\n\n    if (byteOffset === undefined && length === undefined) {\n      buf = new Uint8Array(array);\n    } else if (length === undefined) {\n      buf = new Uint8Array(array, byteOffset);\n    } else {\n      buf = new Uint8Array(array, byteOffset, length);\n    } // Return an augmented `Uint8Array` instance\n\n\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n\n  function fromObject(obj) {\n    if (Buffer.isBuffer(obj)) {\n      var len = checked(obj.length) | 0;\n      var buf = createBuffer(len);\n\n      if (buf.length === 0) {\n        return buf;\n      }\n\n      obj.copy(buf, 0, 0, len);\n      return buf;\n    }\n\n    if (obj.length !== undefined) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0);\n      }\n\n      return fromArrayLike(obj);\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data);\n    }\n  }\n\n  function checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n      throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n    }\n\n    return length | 0;\n  }\n\n  function SlowBuffer(length) {\n    if (+length != length) {\n      // eslint-disable-line eqeqeq\n      length = 0;\n    }\n\n    return Buffer.alloc(+length);\n  }\n\n  Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n  };\n\n  Buffer.compare = function compare(a, b) {\n    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n      throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    }\n\n    if (a === b) return 0;\n    var x = a.length;\n    var y = b.length;\n\n    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n      if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  };\n\n  Buffer.isEncoding = function isEncoding(encoding) {\n    switch (String(encoding).toLowerCase()) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    if (list.length === 0) {\n      return Buffer.alloc(0);\n    }\n\n    var i;\n\n    if (length === undefined) {\n      length = 0;\n\n      for (i = 0; i < list.length; ++i) {\n        length += list[i].length;\n      }\n    }\n\n    var buffer = Buffer.allocUnsafe(length);\n    var pos = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      var buf = list[i];\n\n      if (isInstance(buf, Uint8Array)) {\n        if (pos + buf.length > buffer.length) {\n          Buffer.from(buf).copy(buffer, pos);\n        } else {\n          Uint8Array.prototype.set.call(buffer, buf, pos);\n        }\n      } else if (!Buffer.isBuffer(buf)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      } else {\n        buf.copy(buffer, pos);\n      }\n\n      pos += buf.length;\n    }\n\n    return buffer;\n  };\n\n  function byteLength(string, encoding) {\n    if (Buffer.isBuffer(string)) {\n      return string.length;\n    }\n\n    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n      return string.byteLength;\n    }\n\n    if (typeof string !== 'string') {\n      throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + babelHelpers[\"typeof\"](string));\n    }\n\n    var len = string.length;\n    var mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return len;\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8ToBytes(string).length;\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return len * 2;\n\n        case 'hex':\n          return len >>> 1;\n\n        case 'base64':\n          return base64ToBytes(string).length;\n\n        default:\n          if (loweredCase) {\n            return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n          }\n\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n\n  Buffer.byteLength = byteLength;\n\n  function slowToString(encoding, start, end) {\n    var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n    if (start === undefined || start < 0) {\n      start = 0;\n    } // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n\n\n    if (start > this.length) {\n      return '';\n    }\n\n    if (end === undefined || end > this.length) {\n      end = this.length;\n    }\n\n    if (end <= 0) {\n      return '';\n    } // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n    end >>>= 0;\n    start >>>= 0;\n\n    if (end <= start) {\n      return '';\n    }\n\n    if (!encoding) encoding = 'utf8';\n\n    while (true) {\n      switch (encoding) {\n        case 'hex':\n          return hexSlice(this, start, end);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Slice(this, start, end);\n\n        case 'ascii':\n          return asciiSlice(this, start, end);\n\n        case 'latin1':\n        case 'binary':\n          return latin1Slice(this, start, end);\n\n        case 'base64':\n          return base64Slice(this, start, end);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return utf16leSlice(this, start, end);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = (encoding + '').toLowerCase();\n          loweredCase = true;\n      }\n    }\n  } // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n  // reliably in a browserify context because there could be multiple different\n  // copies of the 'buffer' package in use. This method works even for Buffer\n  // instances that were created from another copy of the `buffer` package.\n  // See: https://github.com/feross/buffer/issues/154\n\n\n  Buffer.prototype._isBuffer = true;\n\n  function swap(b, n, m) {\n    var i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n  }\n\n  Buffer.prototype.swap16 = function swap16() {\n    var len = this.length;\n\n    if (len % 2 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 16-bits');\n    }\n\n    for (var i = 0; i < len; i += 2) {\n      swap(this, i, i + 1);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap32 = function swap32() {\n    var len = this.length;\n\n    if (len % 4 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 32-bits');\n    }\n\n    for (var i = 0; i < len; i += 4) {\n      swap(this, i, i + 3);\n      swap(this, i + 1, i + 2);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap64 = function swap64() {\n    var len = this.length;\n\n    if (len % 8 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 64-bits');\n    }\n\n    for (var i = 0; i < len; i += 8) {\n      swap(this, i, i + 7);\n      swap(this, i + 1, i + 6);\n      swap(this, i + 2, i + 5);\n      swap(this, i + 3, i + 4);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.toString = function toString() {\n    var length = this.length;\n    if (length === 0) return '';\n    if (arguments.length === 0) return utf8Slice(this, 0, length);\n    return slowToString.apply(this, arguments);\n  };\n\n  Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n  Buffer.prototype.equals = function equals(b) {\n    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n    if (this === b) return true;\n    return Buffer.compare(this, b) === 0;\n  };\n\n  Buffer.prototype.inspect = function inspect() {\n    var str = '';\n    var max = exports.INSPECT_MAX_BYTES;\n    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n    if (this.length > max) str += ' ... ';\n    return '<Buffer ' + str + '>';\n  };\n\n  if (customInspectSymbol) {\n    Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n  }\n\n  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if (isInstance(target, Uint8Array)) {\n      target = Buffer.from(target, target.offset, target.byteLength);\n    }\n\n    if (!Buffer.isBuffer(target)) {\n      throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + babelHelpers[\"typeof\"](target));\n    }\n\n    if (start === undefined) {\n      start = 0;\n    }\n\n    if (end === undefined) {\n      end = target ? target.length : 0;\n    }\n\n    if (thisStart === undefined) {\n      thisStart = 0;\n    }\n\n    if (thisEnd === undefined) {\n      thisEnd = this.length;\n    }\n\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n      throw new RangeError('out of range index');\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n      return 0;\n    }\n\n    if (thisStart >= thisEnd) {\n      return -1;\n    }\n\n    if (start >= end) {\n      return 1;\n    }\n\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    var x = thisEnd - thisStart;\n    var y = end - start;\n    var len = Math.min(x, y);\n    var thisCopy = this.slice(thisStart, thisEnd);\n    var targetCopy = target.slice(start, end);\n\n    for (var i = 0; i < len; ++i) {\n      if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n  //\n  // Arguments:\n  // - buffer - a Buffer to search\n  // - val - a string, Buffer, or number\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\n  // - encoding - an optional encoding, relevant is val is a string\n  // - dir - true for indexOf, false for lastIndexOf\n\n\n  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1; // Normalize byteOffset\n\n    if (typeof byteOffset === 'string') {\n      encoding = byteOffset;\n      byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) {\n      byteOffset = 0x7fffffff;\n    } else if (byteOffset < -0x80000000) {\n      byteOffset = -0x80000000;\n    }\n\n    byteOffset = +byteOffset; // Coerce to Number.\n\n    if (numberIsNaN(byteOffset)) {\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n      byteOffset = dir ? 0 : buffer.length - 1;\n    } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n    if (byteOffset >= buffer.length) {\n      if (dir) return -1;else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n      if (dir) byteOffset = 0;else return -1;\n    } // Normalize val\n\n\n    if (typeof val === 'string') {\n      val = Buffer.from(val, encoding);\n    } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n    if (Buffer.isBuffer(val)) {\n      // Special case: looking for empty string/buffer always fails\n      if (val.length === 0) {\n        return -1;\n      }\n\n      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === 'number') {\n      val = val & 0xFF; // Search for a byte value [0-255]\n\n      if (typeof Uint8Array.prototype.indexOf === 'function') {\n        if (dir) {\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n        } else {\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n      }\n\n      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n    }\n\n    throw new TypeError('val must be string, number or Buffer');\n  }\n\n  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1;\n    var arrLength = arr.length;\n    var valLength = val.length;\n\n    if (encoding !== undefined) {\n      encoding = String(encoding).toLowerCase();\n\n      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n        if (arr.length < 2 || val.length < 2) {\n          return -1;\n        }\n\n        indexSize = 2;\n        arrLength /= 2;\n        valLength /= 2;\n        byteOffset /= 2;\n      }\n    }\n\n    function read(buf, i) {\n      if (indexSize === 1) {\n        return buf[i];\n      } else {\n        return buf.readUInt16BE(i * indexSize);\n      }\n    }\n\n    var i;\n\n    if (dir) {\n      var foundIndex = -1;\n\n      for (i = byteOffset; i < arrLength; i++) {\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n          if (foundIndex === -1) foundIndex = i;\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n          if (foundIndex !== -1) i -= i - foundIndex;\n          foundIndex = -1;\n        }\n      }\n    } else {\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n      for (i = byteOffset; i >= 0; i--) {\n        var found = true;\n\n        for (var j = 0; j < valLength; j++) {\n          if (read(arr, i + j) !== read(val, j)) {\n            found = false;\n            break;\n          }\n        }\n\n        if (found) return i;\n      }\n    }\n\n    return -1;\n  }\n\n  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n  };\n\n  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n  };\n\n  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n  };\n\n  function hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    var remaining = buf.length - offset;\n\n    if (!length) {\n      length = remaining;\n    } else {\n      length = Number(length);\n\n      if (length > remaining) {\n        length = remaining;\n      }\n    }\n\n    var strLen = string.length;\n\n    if (length > strLen / 2) {\n      length = strLen / 2;\n    }\n\n    for (var i = 0; i < length; ++i) {\n      var parsed = parseInt(string.substr(i * 2, 2), 16);\n      if (numberIsNaN(parsed)) return i;\n      buf[offset + i] = parsed;\n    }\n\n    return i;\n  }\n\n  function utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  function asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length);\n  }\n\n  function base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length);\n  }\n\n  function ucs2Write(buf, string, offset, length) {\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n      encoding = 'utf8';\n      length = this.length;\n      offset = 0; // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n      encoding = offset;\n      length = this.length;\n      offset = 0; // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n      offset = offset >>> 0;\n\n      if (isFinite(length)) {\n        length = length >>> 0;\n        if (encoding === undefined) encoding = 'utf8';\n      } else {\n        encoding = length;\n        length = undefined;\n      }\n    } else {\n      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n    }\n\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n      throw new RangeError('Attempt to write outside buffer bounds');\n    }\n\n    if (!encoding) encoding = 'utf8';\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'hex':\n          return hexWrite(this, string, offset, length);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Write(this, string, offset, length);\n\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return asciiWrite(this, string, offset, length);\n\n        case 'base64':\n          // Warning: maxLength not taken into account in base64Write\n          return base64Write(this, string, offset, length);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return ucs2Write(this, string, offset, length);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  };\n\n  Buffer.prototype.toJSON = function toJSON() {\n    return {\n      type: 'Buffer',\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n  };\n\n  function base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) {\n      return base64Js.fromByteArray(buf);\n    } else {\n      return base64Js.fromByteArray(buf.slice(start, end));\n    }\n  }\n\n  function utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    var res = [];\n    var i = start;\n\n    while (i < end) {\n      var firstByte = buf[i];\n      var codePoint = null;\n      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n      if (i + bytesPerSequence <= end) {\n        var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 0x80) {\n              codePoint = firstByte;\n            }\n\n            break;\n\n          case 2:\n            secondByte = buf[i + 1];\n\n            if ((secondByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n              if (tempCodePoint > 0x7F) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 3:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 4:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            fourthByte = buf[i + 3];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n        }\n      }\n\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xFFFD;\n        bytesPerSequence = 1;\n      } else if (codePoint > 0xFFFF) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000;\n        res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n        codePoint = 0xDC00 | codePoint & 0x3FF;\n      }\n\n      res.push(codePoint);\n      i += bytesPerSequence;\n    }\n\n    return decodeCodePointsArray(res);\n  } // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n\n\n  var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n  function decodeCodePointsArray(codePoints) {\n    var len = codePoints.length;\n\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n      return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n    } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n    var res = '';\n    var i = 0;\n\n    while (i < len) {\n      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n    }\n\n    return res;\n  }\n\n  function asciiSlice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i] & 0x7F);\n    }\n\n    return ret;\n  }\n\n  function latin1Slice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i]);\n    }\n\n    return ret;\n  }\n\n  function hexSlice(buf, start, end) {\n    var len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    var out = '';\n\n    for (var i = start; i < end; ++i) {\n      out += hexSliceLookupTable[buf[i]];\n    }\n\n    return out;\n  }\n\n  function utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end);\n    var res = ''; // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n\n    for (var i = 0; i < bytes.length - 1; i += 2) {\n      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    }\n\n    return res;\n  }\n\n  Buffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n\n    if (start < 0) {\n      start += len;\n      if (start < 0) start = 0;\n    } else if (start > len) {\n      start = len;\n    }\n\n    if (end < 0) {\n      end += len;\n      if (end < 0) end = 0;\n    } else if (end > len) {\n      end = len;\n    }\n\n    if (end < start) end = start;\n    var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n    Object.setPrototypeOf(newBuf, Buffer.prototype);\n    return newBuf;\n  };\n  /*\n   * Need to make sure that buffer isn't trying to write out of bounds.\n   */\n\n\n  function checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n  }\n\n  Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n\n    var val = this[offset + --byteLength];\n    var mul = 1;\n\n    while (byteLength > 0 && (mul *= 0x100)) {\n      val += this[offset + --byteLength] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    return this[offset];\n  };\n\n  Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n  };\n\n  Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n  };\n\n  Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n  };\n\n  Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n  };\n\n  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var i = byteLength;\n    var mul = 1;\n    var val = this[offset + --i];\n\n    while (i > 0 && (mul *= 0x100)) {\n      val += this[offset + --i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n  };\n\n  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n  };\n\n  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n  };\n\n  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, true, 23, 4);\n  };\n\n  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, false, 23, 4);\n  };\n\n  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, true, 52, 8);\n  };\n\n  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, false, 52, 8);\n  };\n\n  function checkInt(buf, value, offset, ext, max, min) {\n    if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  }\n\n  Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var mul = 1;\n    var i = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = 0;\n    var mul = 1;\n    var sub = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    var sub = 0;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  function checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    if (offset < 0) throw new RangeError('Index out of range');\n  }\n\n  function writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 4);\n    }\n\n    ieee754.write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n  }\n\n  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert);\n  };\n\n  function writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 8);\n    }\n\n    ieee754.write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n  }\n\n  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, false, noAssert);\n  }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n  Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n    if (targetStart < 0) {\n      throw new RangeError('targetStart out of bounds');\n    }\n\n    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n    if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n    if (end > this.length) end = this.length;\n\n    if (target.length - targetStart < end - start) {\n      end = target.length - targetStart + start;\n    }\n\n    var len = end - start;\n\n    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n      // Use built-in when available, missing from IE11\n      this.copyWithin(targetStart, start, end);\n    } else {\n      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    }\n\n    return len;\n  }; // Usage:\n  //    buffer.fill(number[, offset[, end]])\n  //    buffer.fill(buffer[, offset[, end]])\n  //    buffer.fill(string[, offset[, end]][, encoding])\n\n\n  Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n      if (typeof start === 'string') {\n        encoding = start;\n        start = 0;\n        end = this.length;\n      } else if (typeof end === 'string') {\n        encoding = end;\n        end = this.length;\n      }\n\n      if (encoding !== undefined && typeof encoding !== 'string') {\n        throw new TypeError('encoding must be a string');\n      }\n\n      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n        throw new TypeError('Unknown encoding: ' + encoding);\n      }\n\n      if (val.length === 1) {\n        var code = val.charCodeAt(0);\n\n        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n          // Fast path: If `val` fits into a single byte, use that numeric value.\n          val = code;\n        }\n      }\n    } else if (typeof val === 'number') {\n      val = val & 255;\n    } else if (typeof val === 'boolean') {\n      val = Number(val);\n    } // Invalid ranges are not set to a default, so can range check early.\n\n\n    if (start < 0 || this.length < start || this.length < end) {\n      throw new RangeError('Out of range index');\n    }\n\n    if (end <= start) {\n      return this;\n    }\n\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    var i;\n\n    if (typeof val === 'number') {\n      for (i = start; i < end; ++i) {\n        this[i] = val;\n      }\n    } else {\n      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n      var len = bytes.length;\n\n      if (len === 0) {\n        throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n      }\n\n      for (i = 0; i < end - start; ++i) {\n        this[i + start] = bytes[i % len];\n      }\n    }\n\n    return this;\n  }; // HELPER FUNCTIONS\n  // ================\n\n\n  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n  function base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n    str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n    if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n    while (str.length % 4 !== 0) {\n      str = str + '=';\n    }\n\n    return str;\n  }\n\n  function utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n\n    for (var i = 0; i < length; ++i) {\n      codePoint = string.charCodeAt(i); // is surrogate component\n\n      if (codePoint > 0xD7FF && codePoint < 0xE000) {\n        // last char was a lead\n        if (!leadSurrogate) {\n          // no lead yet\n          if (codePoint > 0xDBFF) {\n            // unexpected trail\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } else if (i + 1 === length) {\n            // unpaired lead\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } // valid lead\n\n\n          leadSurrogate = codePoint;\n          continue;\n        } // 2 leads in a row\n\n\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          leadSurrogate = codePoint;\n          continue;\n        } // valid surrogate pair\n\n\n        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n      } else if (leadSurrogate) {\n        // valid bmp char, but last char was a lead\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n      }\n\n      leadSurrogate = null; // encode utf8\n\n      if (codePoint < 0x80) {\n        if ((units -= 1) < 0) break;\n        bytes.push(codePoint);\n      } else if (codePoint < 0x800) {\n        if ((units -= 2) < 0) break;\n        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x10000) {\n        if ((units -= 3) < 0) break;\n        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x110000) {\n        if ((units -= 4) < 0) break;\n        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else {\n        throw new Error('Invalid code point');\n      }\n    }\n\n    return bytes;\n  }\n\n  function asciiToBytes(str) {\n    var byteArray = [];\n\n    for (var i = 0; i < str.length; ++i) {\n      // Node's code seems to be doing this and not & 0x7F..\n      byteArray.push(str.charCodeAt(i) & 0xFF);\n    }\n\n    return byteArray;\n  }\n\n  function utf16leToBytes(str, units) {\n    var c, hi, lo;\n    var byteArray = [];\n\n    for (var i = 0; i < str.length; ++i) {\n      if ((units -= 2) < 0) break;\n      c = str.charCodeAt(i);\n      hi = c >> 8;\n      lo = c % 256;\n      byteArray.push(lo);\n      byteArray.push(hi);\n    }\n\n    return byteArray;\n  }\n\n  function base64ToBytes(str) {\n    return base64Js.toByteArray(base64clean(str));\n  }\n\n  function blitBuffer(src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n      if (i + offset >= dst.length || i >= src.length) break;\n      dst[i + offset] = src[i];\n    }\n\n    return i;\n  } // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n  // the `instanceof` check but they should be treated as of that type.\n  // See: https://github.com/feross/buffer/issues/166\n\n\n  function isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n  }\n\n  function numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj; // eslint-disable-line no-self-compare\n  } // Create lookup table for `toString('hex')`\n  // See: https://github.com/feross/buffer/issues/219\n\n\n  var hexSliceLookupTable = function () {\n    var alphabet = '0123456789abcdef';\n    var table = new Array(256);\n\n    for (var i = 0; i < 16; ++i) {\n      var i16 = i * 16;\n\n      for (var j = 0; j < 16; ++j) {\n        table[i16 + j] = alphabet[i] + alphabet[j];\n      }\n    }\n\n    return table;\n  }();\n});\nvar buffer_1 = buffer$1.Buffer;\nbuffer$1.SlowBuffer;\nbuffer$1.INSPECT_MAX_BYTES;\nbuffer$1.kMaxLength;\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\n/** @public */\nvar BSONError = /** @class */ (function (_super) {\n    __extends(BSONError, _super);\n    function BSONError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, BSONError.prototype);\n        return _this;\n    }\n    Object.defineProperty(BSONError.prototype, \"name\", {\n        get: function () {\n            return 'BSONError';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return BSONError;\n}(Error));\n/** @public */\nvar BSONTypeError = /** @class */ (function (_super) {\n    __extends(BSONTypeError, _super);\n    function BSONTypeError(message) {\n        var _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, BSONTypeError.prototype);\n        return _this;\n    }\n    Object.defineProperty(BSONTypeError.prototype, \"name\", {\n        get: function () {\n            return 'BSONTypeError';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return BSONTypeError;\n}(TypeError));\n\nfunction checkForMath(potentialGlobal) {\n    // eslint-disable-next-line eqeqeq\n    return potentialGlobal && potentialGlobal.Math == Math && potentialGlobal;\n}\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nfunction getGlobal() {\n    // eslint-disable-next-line no-undef\n    return (checkForMath(typeof globalThis === 'object' && globalThis) ||\n        checkForMath(typeof window === 'object' && window) ||\n        checkForMath(typeof self === 'object' && self) ||\n        checkForMath(typeof global === 'object' && global) ||\n        Function('return this')());\n}\n\n/**\n * Normalizes our expected stringified form of a function across versions of node\n * @param fn - The function to stringify\n */\nfunction normalizedFunctionString(fn) {\n    return fn.toString().replace('function(', 'function (');\n}\nfunction isReactNative() {\n    var g = getGlobal();\n    return typeof g.navigator === 'object' && g.navigator.product === 'ReactNative';\n}\nvar insecureRandomBytes = function insecureRandomBytes(size) {\n    var insecureWarning = isReactNative()\n        ? 'BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values.'\n        : 'BSON: No cryptographic implementation for random bytes present, falling back to a less secure implementation.';\n    console.warn(insecureWarning);\n    var result = buffer_1.alloc(size);\n    for (var i = 0; i < size; ++i)\n        result[i] = Math.floor(Math.random() * 256);\n    return result;\n};\nvar detectRandomBytes = function () {\n    if (typeof window !== 'undefined') {\n        // browser crypto implementation(s)\n        var target_1 = window.crypto || window.msCrypto; // allow for IE11\n        if (target_1 && target_1.getRandomValues) {\n            return function (size) { return target_1.getRandomValues(buffer_1.alloc(size)); };\n        }\n    }\n    if (typeof global !== 'undefined' && global.crypto && global.crypto.getRandomValues) {\n        // allow for RN packages such as https://www.npmjs.com/package/react-native-get-random-values to populate global\n        return function (size) { return global.crypto.getRandomValues(buffer_1.alloc(size)); };\n    }\n    var requiredRandomBytes;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        requiredRandomBytes = require('crypto').randomBytes;\n    }\n    catch (e) {\n        // keep the fallback\n    }\n    // NOTE: in transpiled cases the above require might return null/undefined\n    return requiredRandomBytes || insecureRandomBytes;\n};\nvar randomBytes = detectRandomBytes();\nfunction isAnyArrayBuffer(value) {\n    return ['[object ArrayBuffer]', '[object SharedArrayBuffer]'].includes(Object.prototype.toString.call(value));\n}\nfunction isUint8Array(value) {\n    return Object.prototype.toString.call(value) === '[object Uint8Array]';\n}\nfunction isBigInt64Array(value) {\n    return Object.prototype.toString.call(value) === '[object BigInt64Array]';\n}\nfunction isBigUInt64Array(value) {\n    return Object.prototype.toString.call(value) === '[object BigUint64Array]';\n}\nfunction isRegExp(d) {\n    return Object.prototype.toString.call(d) === '[object RegExp]';\n}\nfunction isMap(d) {\n    return Object.prototype.toString.call(d) === '[object Map]';\n}\n// To ensure that 0.4 of node works correctly\nfunction isDate(d) {\n    return isObjectLike(d) && Object.prototype.toString.call(d) === '[object Date]';\n}\n/**\n * @internal\n * this is to solve the `'someKey' in x` problem where x is unknown.\n * https://github.com/typescript-eslint/typescript-eslint/issues/1071#issuecomment-541955753\n */\nfunction isObjectLike(candidate) {\n    return typeof candidate === 'object' && candidate !== null;\n}\nfunction deprecate(fn, message) {\n    var warned = false;\n    function deprecated() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!warned) {\n            console.warn(message);\n            warned = true;\n        }\n        return fn.apply(this, args);\n    }\n    return deprecated;\n}\n\n/**\n * Makes sure that, if a Uint8Array is passed in, it is wrapped in a Buffer.\n *\n * @param potentialBuffer - The potential buffer\n * @returns Buffer the input if potentialBuffer is a buffer, or a buffer that\n * wraps a passed in Uint8Array\n * @throws BSONTypeError If anything other than a Buffer or Uint8Array is passed in\n */\nfunction ensureBuffer(potentialBuffer) {\n    if (ArrayBuffer.isView(potentialBuffer)) {\n        return buffer_1.from(potentialBuffer.buffer, potentialBuffer.byteOffset, potentialBuffer.byteLength);\n    }\n    if (isAnyArrayBuffer(potentialBuffer)) {\n        return buffer_1.from(potentialBuffer);\n    }\n    throw new BSONTypeError('Must use either Buffer or TypedArray');\n}\n\n// Validation regex for v4 uuid (validates with or without dashes)\nvar VALIDATION_REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|[0-9a-f]{12}4[0-9a-f]{3}[89ab][0-9a-f]{15})$/i;\nvar uuidValidateString = function (str) {\n    return typeof str === 'string' && VALIDATION_REGEX.test(str);\n};\nvar uuidHexStringToBuffer = function (hexString) {\n    if (!uuidValidateString(hexString)) {\n        throw new BSONTypeError('UUID string representations must be a 32 or 36 character hex string (dashes excluded/included). Format: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" or \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\".');\n    }\n    var sanitizedHexString = hexString.replace(/-/g, '');\n    return buffer_1.from(sanitizedHexString, 'hex');\n};\nvar bufferToUuidHexString = function (buffer, includeDashes) {\n    if (includeDashes === void 0) { includeDashes = true; }\n    return includeDashes\n        ? buffer.toString('hex', 0, 4) +\n            '-' +\n            buffer.toString('hex', 4, 6) +\n            '-' +\n            buffer.toString('hex', 6, 8) +\n            '-' +\n            buffer.toString('hex', 8, 10) +\n            '-' +\n            buffer.toString('hex', 10, 16)\n        : buffer.toString('hex');\n};\n\nvar BYTE_LENGTH = 16;\nvar kId$1 = Symbol('id');\n/**\n * A class representation of the BSON UUID type.\n * @public\n */\nvar UUID = /** @class */ (function () {\n    /**\n     * Create an UUID type\n     *\n     * @param input - Can be a 32 or 36 character hex string (dashes excluded/included) or a 16 byte binary Buffer.\n     */\n    function UUID(input) {\n        if (typeof input === 'undefined') {\n            // The most common use case (blank id, new UUID() instance)\n            this.id = UUID.generate();\n        }\n        else if (input instanceof UUID) {\n            this[kId$1] = buffer_1.from(input.id);\n            this.__id = input.__id;\n        }\n        else if (ArrayBuffer.isView(input) && input.byteLength === BYTE_LENGTH) {\n            this.id = ensureBuffer(input);\n        }\n        else if (typeof input === 'string') {\n            this.id = uuidHexStringToBuffer(input);\n        }\n        else {\n            throw new BSONTypeError('Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).');\n        }\n    }\n    Object.defineProperty(UUID.prototype, \"id\", {\n        /**\n         * The UUID bytes\n         * @readonly\n         */\n        get: function () {\n            return this[kId$1];\n        },\n        set: function (value) {\n            this[kId$1] = value;\n            if (UUID.cacheHexString) {\n                this.__id = bufferToUuidHexString(value);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Generate a 16 byte uuid v4 buffer used in UUIDs\n     */\n    /**\n     * Returns the UUID id as a 32 or 36 character hex string representation, excluding/including dashes (defaults to 36 character dash separated)\n     * @param includeDashes - should the string exclude dash-separators.\n     * */\n    UUID.prototype.toHexString = function (includeDashes) {\n        if (includeDashes === void 0) { includeDashes = true; }\n        if (UUID.cacheHexString && this.__id) {\n            return this.__id;\n        }\n        var uuidHexString = bufferToUuidHexString(this.id, includeDashes);\n        if (UUID.cacheHexString) {\n            this.__id = uuidHexString;\n        }\n        return uuidHexString;\n    };\n    /**\n     * Converts the id into a 36 character (dashes included) hex string, unless a encoding is specified.\n     */\n    UUID.prototype.toString = function (encoding) {\n        return encoding ? this.id.toString(encoding) : this.toHexString();\n    };\n    /**\n     * Converts the id into its JSON string representation.\n     * A 36 character (dashes included) hex string in the format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n     */\n    UUID.prototype.toJSON = function () {\n        return this.toHexString();\n    };\n    /**\n     * Compares the equality of this UUID with `otherID`.\n     *\n     * @param otherId - UUID instance to compare against.\n     */\n    UUID.prototype.equals = function (otherId) {\n        if (!otherId) {\n            return false;\n        }\n        if (otherId instanceof UUID) {\n            return otherId.id.equals(this.id);\n        }\n        try {\n            return new UUID(otherId).id.equals(this.id);\n        }\n        catch (_a) {\n            return false;\n        }\n    };\n    /**\n     * Creates a Binary instance from the current UUID.\n     */\n    UUID.prototype.toBinary = function () {\n        return new Binary(this.id, Binary.SUBTYPE_UUID);\n    };\n    /**\n     * Generates a populated buffer containing a v4 uuid\n     */\n    UUID.generate = function () {\n        var bytes = randomBytes(BYTE_LENGTH);\n        // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n        // Kindly borrowed from https://github.com/uuidjs/uuid/blob/master/src/v4.js\n        bytes[6] = (bytes[6] & 0x0f) | 0x40;\n        bytes[8] = (bytes[8] & 0x3f) | 0x80;\n        return buffer_1.from(bytes);\n    };\n    /**\n     * Checks if a value is a valid bson UUID\n     * @param input - UUID, string or Buffer to validate.\n     */\n    UUID.isValid = function (input) {\n        if (!input) {\n            return false;\n        }\n        if (input instanceof UUID) {\n            return true;\n        }\n        if (typeof input === 'string') {\n            return uuidValidateString(input);\n        }\n        if (isUint8Array(input)) {\n            // check for length & uuid version (https://tools.ietf.org/html/rfc4122#section-4.1.3)\n            if (input.length !== BYTE_LENGTH) {\n                return false;\n            }\n            try {\n                // get this byte as hex:             xxxxxxxx-xxxx-XXxx-xxxx-xxxxxxxxxxxx\n                // check first part as uuid version: xxxxxxxx-xxxx-Xxxx-xxxx-xxxxxxxxxxxx\n                return parseInt(input[6].toString(16)[0], 10) === Binary.SUBTYPE_UUID;\n            }\n            catch (_a) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * Creates an UUID from a hex string representation of an UUID.\n     * @param hexString - 32 or 36 character hex string (dashes excluded/included).\n     */\n    UUID.createFromHexString = function (hexString) {\n        var buffer = uuidHexStringToBuffer(hexString);\n        return new UUID(buffer);\n    };\n    /**\n     * Converts to a string representation of this Id.\n     *\n     * @returns return the 36 character hex string representation.\n     * @internal\n     */\n    UUID.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    UUID.prototype.inspect = function () {\n        return \"new UUID(\\\"\" + this.toHexString() + \"\\\")\";\n    };\n    return UUID;\n}());\nObject.defineProperty(UUID.prototype, '_bsontype', { value: 'UUID' });\n\n/**\n * A class representation of the BSON Binary type.\n * @public\n */\nvar Binary = /** @class */ (function () {\n    /**\n     * @param buffer - a buffer object containing the binary data.\n     * @param subType - the option binary type.\n     */\n    function Binary(buffer, subType) {\n        if (!(this instanceof Binary))\n            return new Binary(buffer, subType);\n        if (!(buffer == null) &&\n            !(typeof buffer === 'string') &&\n            !ArrayBuffer.isView(buffer) &&\n            !(buffer instanceof ArrayBuffer) &&\n            !Array.isArray(buffer)) {\n            throw new BSONTypeError('Binary can only be constructed from string, Buffer, TypedArray, or Array<number>');\n        }\n        this.sub_type = subType !== null && subType !== void 0 ? subType : Binary.BSON_BINARY_SUBTYPE_DEFAULT;\n        if (buffer == null) {\n            // create an empty binary buffer\n            this.buffer = buffer_1.alloc(Binary.BUFFER_SIZE);\n            this.position = 0;\n        }\n        else {\n            if (typeof buffer === 'string') {\n                // string\n                this.buffer = buffer_1.from(buffer, 'binary');\n            }\n            else if (Array.isArray(buffer)) {\n                // number[]\n                this.buffer = buffer_1.from(buffer);\n            }\n            else {\n                // Buffer | TypedArray | ArrayBuffer\n                this.buffer = ensureBuffer(buffer);\n            }\n            this.position = this.buffer.byteLength;\n        }\n    }\n    /**\n     * Updates this binary with byte_value.\n     *\n     * @param byteValue - a single byte we wish to write.\n     */\n    Binary.prototype.put = function (byteValue) {\n        // If it's a string and a has more than one character throw an error\n        if (typeof byteValue === 'string' && byteValue.length !== 1) {\n            throw new BSONTypeError('only accepts single character String');\n        }\n        else if (typeof byteValue !== 'number' && byteValue.length !== 1)\n            throw new BSONTypeError('only accepts single character Uint8Array or Array');\n        // Decode the byte value once\n        var decodedByte;\n        if (typeof byteValue === 'string') {\n            decodedByte = byteValue.charCodeAt(0);\n        }\n        else if (typeof byteValue === 'number') {\n            decodedByte = byteValue;\n        }\n        else {\n            decodedByte = byteValue[0];\n        }\n        if (decodedByte < 0 || decodedByte > 255) {\n            throw new BSONTypeError('only accepts number in a valid unsigned byte range 0-255');\n        }\n        if (this.buffer.length > this.position) {\n            this.buffer[this.position++] = decodedByte;\n        }\n        else {\n            var buffer = buffer_1.alloc(Binary.BUFFER_SIZE + this.buffer.length);\n            // Combine the two buffers together\n            this.buffer.copy(buffer, 0, 0, this.buffer.length);\n            this.buffer = buffer;\n            this.buffer[this.position++] = decodedByte;\n        }\n    };\n    /**\n     * Writes a buffer or string to the binary.\n     *\n     * @param sequence - a string or buffer to be written to the Binary BSON object.\n     * @param offset - specify the binary of where to write the content.\n     */\n    Binary.prototype.write = function (sequence, offset) {\n        offset = typeof offset === 'number' ? offset : this.position;\n        // If the buffer is to small let's extend the buffer\n        if (this.buffer.length < offset + sequence.length) {\n            var buffer = buffer_1.alloc(this.buffer.length + sequence.length);\n            this.buffer.copy(buffer, 0, 0, this.buffer.length);\n            // Assign the new buffer\n            this.buffer = buffer;\n        }\n        if (ArrayBuffer.isView(sequence)) {\n            this.buffer.set(ensureBuffer(sequence), offset);\n            this.position =\n                offset + sequence.byteLength > this.position ? offset + sequence.length : this.position;\n        }\n        else if (typeof sequence === 'string') {\n            this.buffer.write(sequence, offset, sequence.length, 'binary');\n            this.position =\n                offset + sequence.length > this.position ? offset + sequence.length : this.position;\n        }\n    };\n    /**\n     * Reads **length** bytes starting at **position**.\n     *\n     * @param position - read from the given position in the Binary.\n     * @param length - the number of bytes to read.\n     */\n    Binary.prototype.read = function (position, length) {\n        length = length && length > 0 ? length : this.position;\n        // Let's return the data based on the type we have\n        return this.buffer.slice(position, position + length);\n    };\n    /**\n     * Returns the value of this binary as a string.\n     * @param asRaw - Will skip converting to a string\n     * @remarks\n     * This is handy when calling this function conditionally for some key value pairs and not others\n     */\n    Binary.prototype.value = function (asRaw) {\n        asRaw = !!asRaw;\n        // Optimize to serialize for the situation where the data == size of buffer\n        if (asRaw && this.buffer.length === this.position) {\n            return this.buffer;\n        }\n        // If it's a node.js buffer object\n        if (asRaw) {\n            return this.buffer.slice(0, this.position);\n        }\n        return this.buffer.toString('binary', 0, this.position);\n    };\n    /** the length of the binary sequence */\n    Binary.prototype.length = function () {\n        return this.position;\n    };\n    Binary.prototype.toJSON = function () {\n        return this.buffer.toString('base64');\n    };\n    Binary.prototype.toString = function (format) {\n        return this.buffer.toString(format);\n    };\n    /** @internal */\n    Binary.prototype.toExtendedJSON = function (options) {\n        options = options || {};\n        var base64String = this.buffer.toString('base64');\n        var subType = Number(this.sub_type).toString(16);\n        if (options.legacy) {\n            return {\n                $binary: base64String,\n                $type: subType.length === 1 ? '0' + subType : subType\n            };\n        }\n        return {\n            $binary: {\n                base64: base64String,\n                subType: subType.length === 1 ? '0' + subType : subType\n            }\n        };\n    };\n    Binary.prototype.toUUID = function () {\n        if (this.sub_type === Binary.SUBTYPE_UUID) {\n            return new UUID(this.buffer.slice(0, this.position));\n        }\n        throw new BSONError(\"Binary sub_type \\\"\" + this.sub_type + \"\\\" is not supported for converting to UUID. Only \\\"\" + Binary.SUBTYPE_UUID + \"\\\" is currently supported.\");\n    };\n    /** @internal */\n    Binary.fromExtendedJSON = function (doc, options) {\n        options = options || {};\n        var data;\n        var type;\n        if ('$binary' in doc) {\n            if (options.legacy && typeof doc.$binary === 'string' && '$type' in doc) {\n                type = doc.$type ? parseInt(doc.$type, 16) : 0;\n                data = buffer_1.from(doc.$binary, 'base64');\n            }\n            else {\n                if (typeof doc.$binary !== 'string') {\n                    type = doc.$binary.subType ? parseInt(doc.$binary.subType, 16) : 0;\n                    data = buffer_1.from(doc.$binary.base64, 'base64');\n                }\n            }\n        }\n        else if ('$uuid' in doc) {\n            type = 4;\n            data = uuidHexStringToBuffer(doc.$uuid);\n        }\n        if (!data) {\n            throw new BSONTypeError(\"Unexpected Binary Extended JSON format \" + JSON.stringify(doc));\n        }\n        return new Binary(data, type);\n    };\n    /** @internal */\n    Binary.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    Binary.prototype.inspect = function () {\n        var asBuffer = this.value(true);\n        return \"new Binary(Buffer.from(\\\"\" + asBuffer.toString('hex') + \"\\\", \\\"hex\\\"), \" + this.sub_type + \")\";\n    };\n    /**\n     * Binary default subtype\n     * @internal\n     */\n    Binary.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n    /** Initial buffer default size */\n    Binary.BUFFER_SIZE = 256;\n    /** Default BSON type */\n    Binary.SUBTYPE_DEFAULT = 0;\n    /** Function BSON type */\n    Binary.SUBTYPE_FUNCTION = 1;\n    /** Byte Array BSON type */\n    Binary.SUBTYPE_BYTE_ARRAY = 2;\n    /** Deprecated UUID BSON type @deprecated Please use SUBTYPE_UUID */\n    Binary.SUBTYPE_UUID_OLD = 3;\n    /** UUID BSON type */\n    Binary.SUBTYPE_UUID = 4;\n    /** MD5 BSON type */\n    Binary.SUBTYPE_MD5 = 5;\n    /** Encrypted BSON type */\n    Binary.SUBTYPE_ENCRYPTED = 6;\n    /** Column BSON type */\n    Binary.SUBTYPE_COLUMN = 7;\n    /** User BSON type */\n    Binary.SUBTYPE_USER_DEFINED = 128;\n    return Binary;\n}());\nObject.defineProperty(Binary.prototype, '_bsontype', { value: 'Binary' });\n\n/**\n * A class representation of the BSON Code type.\n * @public\n */\nvar Code = /** @class */ (function () {\n    /**\n     * @param code - a string or function.\n     * @param scope - an optional scope for the function.\n     */\n    function Code(code, scope) {\n        if (!(this instanceof Code))\n            return new Code(code, scope);\n        this.code = code;\n        this.scope = scope;\n    }\n    Code.prototype.toJSON = function () {\n        return { code: this.code, scope: this.scope };\n    };\n    /** @internal */\n    Code.prototype.toExtendedJSON = function () {\n        if (this.scope) {\n            return { $code: this.code, $scope: this.scope };\n        }\n        return { $code: this.code };\n    };\n    /** @internal */\n    Code.fromExtendedJSON = function (doc) {\n        return new Code(doc.$code, doc.$scope);\n    };\n    /** @internal */\n    Code.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    Code.prototype.inspect = function () {\n        var codeJson = this.toJSON();\n        return \"new Code(\\\"\" + codeJson.code + \"\\\"\" + (codeJson.scope ? \", \" + JSON.stringify(codeJson.scope) : '') + \")\";\n    };\n    return Code;\n}());\nObject.defineProperty(Code.prototype, '_bsontype', { value: 'Code' });\n\n/** @internal */\nfunction isDBRefLike(value) {\n    return (isObjectLike(value) &&\n        value.$id != null &&\n        typeof value.$ref === 'string' &&\n        (value.$db == null || typeof value.$db === 'string'));\n}\n/**\n * A class representation of the BSON DBRef type.\n * @public\n */\nvar DBRef = /** @class */ (function () {\n    /**\n     * @param collection - the collection name.\n     * @param oid - the reference ObjectId.\n     * @param db - optional db name, if omitted the reference is local to the current db.\n     */\n    function DBRef(collection, oid, db, fields) {\n        if (!(this instanceof DBRef))\n            return new DBRef(collection, oid, db, fields);\n        // check if namespace has been provided\n        var parts = collection.split('.');\n        if (parts.length === 2) {\n            db = parts.shift();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            collection = parts.shift();\n        }\n        this.collection = collection;\n        this.oid = oid;\n        this.db = db;\n        this.fields = fields || {};\n    }\n    Object.defineProperty(DBRef.prototype, \"namespace\", {\n        // Property provided for compatibility with the 1.x parser\n        // the 1.x parser used a \"namespace\" property, while 4.x uses \"collection\"\n        /** @internal */\n        get: function () {\n            return this.collection;\n        },\n        set: function (value) {\n            this.collection = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DBRef.prototype.toJSON = function () {\n        var o = Object.assign({\n            $ref: this.collection,\n            $id: this.oid\n        }, this.fields);\n        if (this.db != null)\n            o.$db = this.db;\n        return o;\n    };\n    /** @internal */\n    DBRef.prototype.toExtendedJSON = function (options) {\n        options = options || {};\n        var o = {\n            $ref: this.collection,\n            $id: this.oid\n        };\n        if (options.legacy) {\n            return o;\n        }\n        if (this.db)\n            o.$db = this.db;\n        o = Object.assign(o, this.fields);\n        return o;\n    };\n    /** @internal */\n    DBRef.fromExtendedJSON = function (doc) {\n        var copy = Object.assign({}, doc);\n        delete copy.$ref;\n        delete copy.$id;\n        delete copy.$db;\n        return new DBRef(doc.$ref, doc.$id, doc.$db, copy);\n    };\n    /** @internal */\n    DBRef.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    DBRef.prototype.inspect = function () {\n        // NOTE: if OID is an ObjectId class it will just print the oid string.\n        var oid = this.oid === undefined || this.oid.toString === undefined ? this.oid : this.oid.toString();\n        return \"new DBRef(\\\"\" + this.namespace + \"\\\", new ObjectId(\\\"\" + oid + \"\\\")\" + (this.db ? \", \\\"\" + this.db + \"\\\"\" : '') + \")\";\n    };\n    return DBRef;\n}());\nObject.defineProperty(DBRef.prototype, '_bsontype', { value: 'DBRef' });\n\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = undefined;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(\n    // prettier-ignore\n    new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n}\ncatch (_a) {\n    // no wasm support\n}\nvar TWO_PWR_16_DBL = 1 << 16;\nvar TWO_PWR_24_DBL = 1 << 24;\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/** A cache of the Long representations of small integer values. */\nvar INT_CACHE = {};\n/** A cache of the Long representations of small unsigned integer values. */\nvar UINT_CACHE = {};\n/**\n * A class representing a 64-bit integer\n * @public\n * @remarks\n * The internal representation of a long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16 bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n * Common constant values ZERO, ONE, NEG_ONE, etc. are found as static properties on this class.\n */\nvar Long = /** @class */ (function () {\n    /**\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n     *  See the from* functions below for more convenient ways of constructing Longs.\n     *\n     * Acceptable signatures are:\n     * - Long(low, high, unsigned?)\n     * - Long(bigint, unsigned?)\n     * - Long(string, unsigned?)\n     *\n     * @param low - The low (signed) 32 bits of the long\n     * @param high - The high (signed) 32 bits of the long\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     */\n    function Long(low, high, unsigned) {\n        if (low === void 0) { low = 0; }\n        if (!(this instanceof Long))\n            return new Long(low, high, unsigned);\n        if (typeof low === 'bigint') {\n            Object.assign(this, Long.fromBigInt(low, !!high));\n        }\n        else if (typeof low === 'string') {\n            Object.assign(this, Long.fromString(low, !!high));\n        }\n        else {\n            this.low = low | 0;\n            this.high = high | 0;\n            this.unsigned = !!unsigned;\n        }\n        Object.defineProperty(this, '__isLong__', {\n            value: true,\n            configurable: false,\n            writable: false,\n            enumerable: false\n        });\n    }\n    /**\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits.\n     * Each is assumed to use 32 bits.\n     * @param lowBits - The low 32 bits\n     * @param highBits - The high 32 bits\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    Long.fromBits = function (lowBits, highBits, unsigned) {\n        return new Long(lowBits, highBits, unsigned);\n    };\n    /**\n     * Returns a Long representing the given 32 bit integer value.\n     * @param value - The 32 bit integer in question\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    Long.fromInt = function (value, unsigned) {\n        var obj, cachedObj, cache;\n        if (unsigned) {\n            value >>>= 0;\n            if ((cache = 0 <= value && value < 256)) {\n                cachedObj = UINT_CACHE[value];\n                if (cachedObj)\n                    return cachedObj;\n            }\n            obj = Long.fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n            if (cache)\n                UINT_CACHE[value] = obj;\n            return obj;\n        }\n        else {\n            value |= 0;\n            if ((cache = -128 <= value && value < 128)) {\n                cachedObj = INT_CACHE[value];\n                if (cachedObj)\n                    return cachedObj;\n            }\n            obj = Long.fromBits(value, value < 0 ? -1 : 0, false);\n            if (cache)\n                INT_CACHE[value] = obj;\n            return obj;\n        }\n    };\n    /**\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n     * @param value - The number in question\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    Long.fromNumber = function (value, unsigned) {\n        if (isNaN(value))\n            return unsigned ? Long.UZERO : Long.ZERO;\n        if (unsigned) {\n            if (value < 0)\n                return Long.UZERO;\n            if (value >= TWO_PWR_64_DBL)\n                return Long.MAX_UNSIGNED_VALUE;\n        }\n        else {\n            if (value <= -TWO_PWR_63_DBL)\n                return Long.MIN_VALUE;\n            if (value + 1 >= TWO_PWR_63_DBL)\n                return Long.MAX_VALUE;\n        }\n        if (value < 0)\n            return Long.fromNumber(-value, unsigned).neg();\n        return Long.fromBits(value % TWO_PWR_32_DBL | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n    };\n    /**\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n     * @param value - The number in question\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    Long.fromBigInt = function (value, unsigned) {\n        return Long.fromString(value.toString(), unsigned);\n    };\n    /**\n     * Returns a Long representation of the given string, written using the specified radix.\n     * @param str - The textual representation of the Long\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @param radix - The radix in which the text is written (2-36), defaults to 10\n     * @returns The corresponding Long value\n     */\n    Long.fromString = function (str, unsigned, radix) {\n        if (str.length === 0)\n            throw Error('empty string');\n        if (str === 'NaN' || str === 'Infinity' || str === '+Infinity' || str === '-Infinity')\n            return Long.ZERO;\n        if (typeof unsigned === 'number') {\n            // For goog.math.long compatibility\n            (radix = unsigned), (unsigned = false);\n        }\n        else {\n            unsigned = !!unsigned;\n        }\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw RangeError('radix');\n        var p;\n        if ((p = str.indexOf('-')) > 0)\n            throw Error('interior hyphen');\n        else if (p === 0) {\n            return Long.fromString(str.substring(1), unsigned, radix).neg();\n        }\n        // Do several (8) digits each time through the loop, so as to\n        // minimize the calls to the very expensive emulated div.\n        var radixToPower = Long.fromNumber(Math.pow(radix, 8));\n        var result = Long.ZERO;\n        for (var i = 0; i < str.length; i += 8) {\n            var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n            if (size < 8) {\n                var power = Long.fromNumber(Math.pow(radix, size));\n                result = result.mul(power).add(Long.fromNumber(value));\n            }\n            else {\n                result = result.mul(radixToPower);\n                result = result.add(Long.fromNumber(value));\n            }\n        }\n        result.unsigned = unsigned;\n        return result;\n    };\n    /**\n     * Creates a Long from its byte representation.\n     * @param bytes - Byte representation\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @param le - Whether little or big endian, defaults to big endian\n     * @returns The corresponding Long value\n     */\n    Long.fromBytes = function (bytes, unsigned, le) {\n        return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n    };\n    /**\n     * Creates a Long from its little endian byte representation.\n     * @param bytes - Little endian byte representation\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    Long.fromBytesLE = function (bytes, unsigned) {\n        return new Long(bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24), bytes[4] | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24), unsigned);\n    };\n    /**\n     * Creates a Long from its big endian byte representation.\n     * @param bytes - Big endian byte representation\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    Long.fromBytesBE = function (bytes, unsigned) {\n        return new Long((bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7], (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3], unsigned);\n    };\n    /**\n     * Tests if the specified object is a Long.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    Long.isLong = function (value) {\n        return isObjectLike(value) && value['__isLong__'] === true;\n    };\n    /**\n     * Converts the specified value to a Long.\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     */\n    Long.fromValue = function (val, unsigned) {\n        if (typeof val === 'number')\n            return Long.fromNumber(val, unsigned);\n        if (typeof val === 'string')\n            return Long.fromString(val, unsigned);\n        // Throws for non-objects, converts non-instanceof Long:\n        return Long.fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n    };\n    /** Returns the sum of this and the specified Long. */\n    Long.prototype.add = function (addend) {\n        if (!Long.isLong(addend))\n            addend = Long.fromValue(addend);\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n        var a48 = this.high >>> 16;\n        var a32 = this.high & 0xffff;\n        var a16 = this.low >>> 16;\n        var a00 = this.low & 0xffff;\n        var b48 = addend.high >>> 16;\n        var b32 = addend.high & 0xffff;\n        var b16 = addend.low >>> 16;\n        var b00 = addend.low & 0xffff;\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 + b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xffff;\n        c16 += a16 + b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c32 += a32 + b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c48 += a48 + b48;\n        c48 &= 0xffff;\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    };\n    /**\n     * Returns the sum of this and the specified Long.\n     * @returns Sum\n     */\n    Long.prototype.and = function (other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n    };\n    /**\n     * Compares this Long's value with the specified's.\n     * @returns 0 if they are the same, 1 if the this is greater and -1 if the given one is greater\n     */\n    Long.prototype.compare = function (other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        if (this.eq(other))\n            return 0;\n        var thisNeg = this.isNegative(), otherNeg = other.isNegative();\n        if (thisNeg && !otherNeg)\n            return -1;\n        if (!thisNeg && otherNeg)\n            return 1;\n        // At this point the sign bits are the same\n        if (!this.unsigned)\n            return this.sub(other).isNegative() ? -1 : 1;\n        // Both are positive if at least one is unsigned\n        return other.high >>> 0 > this.high >>> 0 ||\n            (other.high === this.high && other.low >>> 0 > this.low >>> 0)\n            ? -1\n            : 1;\n    };\n    /** This is an alias of {@link Long.compare} */\n    Long.prototype.comp = function (other) {\n        return this.compare(other);\n    };\n    /**\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or unsigned if this Long is unsigned.\n     * @returns Quotient\n     */\n    Long.prototype.divide = function (divisor) {\n        if (!Long.isLong(divisor))\n            divisor = Long.fromValue(divisor);\n        if (divisor.isZero())\n            throw Error('division by zero');\n        // use wasm support if present\n        if (wasm) {\n            // guard against signed division overflow: the largest\n            // negative number / -1 would be 1 larger than the largest\n            // positive number, due to two's complement.\n            if (!this.unsigned &&\n                this.high === -0x80000000 &&\n                divisor.low === -1 &&\n                divisor.high === -1) {\n                // be consistent with non-wasm code path\n                return this;\n            }\n            var low = (this.unsigned ? wasm.div_u : wasm.div_s)(this.low, this.high, divisor.low, divisor.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        if (this.isZero())\n            return this.unsigned ? Long.UZERO : Long.ZERO;\n        var approx, rem, res;\n        if (!this.unsigned) {\n            // This section is only relevant for signed longs and is derived from the\n            // closure library as a whole.\n            if (this.eq(Long.MIN_VALUE)) {\n                if (divisor.eq(Long.ONE) || divisor.eq(Long.NEG_ONE))\n                    return Long.MIN_VALUE;\n                // recall that -MIN_VALUE == MIN_VALUE\n                else if (divisor.eq(Long.MIN_VALUE))\n                    return Long.ONE;\n                else {\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                    var halfThis = this.shr(1);\n                    approx = halfThis.div(divisor).shl(1);\n                    if (approx.eq(Long.ZERO)) {\n                        return divisor.isNegative() ? Long.ONE : Long.NEG_ONE;\n                    }\n                    else {\n                        rem = this.sub(divisor.mul(approx));\n                        res = approx.add(rem.div(divisor));\n                        return res;\n                    }\n                }\n            }\n            else if (divisor.eq(Long.MIN_VALUE))\n                return this.unsigned ? Long.UZERO : Long.ZERO;\n            if (this.isNegative()) {\n                if (divisor.isNegative())\n                    return this.neg().div(divisor.neg());\n                return this.neg().div(divisor).neg();\n            }\n            else if (divisor.isNegative())\n                return this.div(divisor.neg()).neg();\n            res = Long.ZERO;\n        }\n        else {\n            // The algorithm below has not been made for unsigned longs. It's therefore\n            // required to take special care of the MSB prior to running it.\n            if (!divisor.unsigned)\n                divisor = divisor.toUnsigned();\n            if (divisor.gt(this))\n                return Long.UZERO;\n            if (divisor.gt(this.shru(1)))\n                // 15 >>> 1 = 7 ; with divisor = 8 ; true\n                return Long.UONE;\n            res = Long.UZERO;\n        }\n        // Repeat the following until the remainder is less than other:  find a\n        // floating-point that approximates remainder / other *from below*, add this\n        // into the result, and subtract it from the remainder.  It is critical that\n        // the approximate value is less than or equal to the real value so that the\n        // remainder never becomes negative.\n        rem = this;\n        while (rem.gte(divisor)) {\n            // Approximate the result of division. This may be a little greater or\n            // smaller than the actual value.\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n            // We will tweak the approximate result by changing it in the 48-th digit or\n            // the smallest non-fractional digit, whichever is larger.\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n            var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n            // Decrease the approximation until it is smaller than the remainder.  Note\n            // that if it is too large, the product overflows and is negative.\n            var approxRes = Long.fromNumber(approx);\n            var approxRem = approxRes.mul(divisor);\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\n                approx -= delta;\n                approxRes = Long.fromNumber(approx, this.unsigned);\n                approxRem = approxRes.mul(divisor);\n            }\n            // We know the answer can't be zero... and actually, zero would cause\n            // infinite recursion since we would make no progress.\n            if (approxRes.isZero())\n                approxRes = Long.ONE;\n            res = res.add(approxRes);\n            rem = rem.sub(approxRem);\n        }\n        return res;\n    };\n    /**This is an alias of {@link Long.divide} */\n    Long.prototype.div = function (divisor) {\n        return this.divide(divisor);\n    };\n    /**\n     * Tests if this Long's value equals the specified's.\n     * @param other - Other value\n     */\n    Long.prototype.equals = function (other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1)\n            return false;\n        return this.high === other.high && this.low === other.low;\n    };\n    /** This is an alias of {@link Long.equals} */\n    Long.prototype.eq = function (other) {\n        return this.equals(other);\n    };\n    /** Gets the high 32 bits as a signed integer. */\n    Long.prototype.getHighBits = function () {\n        return this.high;\n    };\n    /** Gets the high 32 bits as an unsigned integer. */\n    Long.prototype.getHighBitsUnsigned = function () {\n        return this.high >>> 0;\n    };\n    /** Gets the low 32 bits as a signed integer. */\n    Long.prototype.getLowBits = function () {\n        return this.low;\n    };\n    /** Gets the low 32 bits as an unsigned integer. */\n    Long.prototype.getLowBitsUnsigned = function () {\n        return this.low >>> 0;\n    };\n    /** Gets the number of bits needed to represent the absolute value of this Long. */\n    Long.prototype.getNumBitsAbs = function () {\n        if (this.isNegative()) {\n            // Unsigned Longs are never negative\n            return this.eq(Long.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n        }\n        var val = this.high !== 0 ? this.high : this.low;\n        var bit;\n        for (bit = 31; bit > 0; bit--)\n            if ((val & (1 << bit)) !== 0)\n                break;\n        return this.high !== 0 ? bit + 33 : bit + 1;\n    };\n    /** Tests if this Long's value is greater than the specified's. */\n    Long.prototype.greaterThan = function (other) {\n        return this.comp(other) > 0;\n    };\n    /** This is an alias of {@link Long.greaterThan} */\n    Long.prototype.gt = function (other) {\n        return this.greaterThan(other);\n    };\n    /** Tests if this Long's value is greater than or equal the specified's. */\n    Long.prototype.greaterThanOrEqual = function (other) {\n        return this.comp(other) >= 0;\n    };\n    /** This is an alias of {@link Long.greaterThanOrEqual} */\n    Long.prototype.gte = function (other) {\n        return this.greaterThanOrEqual(other);\n    };\n    /** This is an alias of {@link Long.greaterThanOrEqual} */\n    Long.prototype.ge = function (other) {\n        return this.greaterThanOrEqual(other);\n    };\n    /** Tests if this Long's value is even. */\n    Long.prototype.isEven = function () {\n        return (this.low & 1) === 0;\n    };\n    /** Tests if this Long's value is negative. */\n    Long.prototype.isNegative = function () {\n        return !this.unsigned && this.high < 0;\n    };\n    /** Tests if this Long's value is odd. */\n    Long.prototype.isOdd = function () {\n        return (this.low & 1) === 1;\n    };\n    /** Tests if this Long's value is positive. */\n    Long.prototype.isPositive = function () {\n        return this.unsigned || this.high >= 0;\n    };\n    /** Tests if this Long's value equals zero. */\n    Long.prototype.isZero = function () {\n        return this.high === 0 && this.low === 0;\n    };\n    /** Tests if this Long's value is less than the specified's. */\n    Long.prototype.lessThan = function (other) {\n        return this.comp(other) < 0;\n    };\n    /** This is an alias of {@link Long#lessThan}. */\n    Long.prototype.lt = function (other) {\n        return this.lessThan(other);\n    };\n    /** Tests if this Long's value is less than or equal the specified's. */\n    Long.prototype.lessThanOrEqual = function (other) {\n        return this.comp(other) <= 0;\n    };\n    /** This is an alias of {@link Long.lessThanOrEqual} */\n    Long.prototype.lte = function (other) {\n        return this.lessThanOrEqual(other);\n    };\n    /** Returns this Long modulo the specified. */\n    Long.prototype.modulo = function (divisor) {\n        if (!Long.isLong(divisor))\n            divisor = Long.fromValue(divisor);\n        // use wasm support if present\n        if (wasm) {\n            var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(this.low, this.high, divisor.low, divisor.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        return this.sub(this.div(divisor).mul(divisor));\n    };\n    /** This is an alias of {@link Long.modulo} */\n    Long.prototype.mod = function (divisor) {\n        return this.modulo(divisor);\n    };\n    /** This is an alias of {@link Long.modulo} */\n    Long.prototype.rem = function (divisor) {\n        return this.modulo(divisor);\n    };\n    /**\n     * Returns the product of this and the specified Long.\n     * @param multiplier - Multiplier\n     * @returns Product\n     */\n    Long.prototype.multiply = function (multiplier) {\n        if (this.isZero())\n            return Long.ZERO;\n        if (!Long.isLong(multiplier))\n            multiplier = Long.fromValue(multiplier);\n        // use wasm support if present\n        if (wasm) {\n            var low = wasm.mul(this.low, this.high, multiplier.low, multiplier.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        if (multiplier.isZero())\n            return Long.ZERO;\n        if (this.eq(Long.MIN_VALUE))\n            return multiplier.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n        if (multiplier.eq(Long.MIN_VALUE))\n            return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n        if (this.isNegative()) {\n            if (multiplier.isNegative())\n                return this.neg().mul(multiplier.neg());\n            else\n                return this.neg().mul(multiplier).neg();\n        }\n        else if (multiplier.isNegative())\n            return this.mul(multiplier.neg()).neg();\n        // If both longs are small, use float multiplication\n        if (this.lt(Long.TWO_PWR_24) && multiplier.lt(Long.TWO_PWR_24))\n            return Long.fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n        // We can skip products that would overflow.\n        var a48 = this.high >>> 16;\n        var a32 = this.high & 0xffff;\n        var a16 = this.low >>> 16;\n        var a00 = this.low & 0xffff;\n        var b48 = multiplier.high >>> 16;\n        var b32 = multiplier.high & 0xffff;\n        var b16 = multiplier.low >>> 16;\n        var b00 = multiplier.low & 0xffff;\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 * b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xffff;\n        c16 += a16 * b00;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c16 += a00 * b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c32 += a32 * b00;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c32 += a16 * b16;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c32 += a00 * b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n        c48 &= 0xffff;\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    };\n    /** This is an alias of {@link Long.multiply} */\n    Long.prototype.mul = function (multiplier) {\n        return this.multiply(multiplier);\n    };\n    /** Returns the Negation of this Long's value. */\n    Long.prototype.negate = function () {\n        if (!this.unsigned && this.eq(Long.MIN_VALUE))\n            return Long.MIN_VALUE;\n        return this.not().add(Long.ONE);\n    };\n    /** This is an alias of {@link Long.negate} */\n    Long.prototype.neg = function () {\n        return this.negate();\n    };\n    /** Returns the bitwise NOT of this Long. */\n    Long.prototype.not = function () {\n        return Long.fromBits(~this.low, ~this.high, this.unsigned);\n    };\n    /** Tests if this Long's value differs from the specified's. */\n    Long.prototype.notEquals = function (other) {\n        return !this.equals(other);\n    };\n    /** This is an alias of {@link Long.notEquals} */\n    Long.prototype.neq = function (other) {\n        return this.notEquals(other);\n    };\n    /** This is an alias of {@link Long.notEquals} */\n    Long.prototype.ne = function (other) {\n        return this.notEquals(other);\n    };\n    /**\n     * Returns the bitwise OR of this Long and the specified.\n     */\n    Long.prototype.or = function (other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n    };\n    /**\n     * Returns this Long with bits shifted to the left by the given amount.\n     * @param numBits - Number of bits\n     * @returns Shifted Long\n     */\n    Long.prototype.shiftLeft = function (numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        if ((numBits &= 63) === 0)\n            return this;\n        else if (numBits < 32)\n            return Long.fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\n        else\n            return Long.fromBits(0, this.low << (numBits - 32), this.unsigned);\n    };\n    /** This is an alias of {@link Long.shiftLeft} */\n    Long.prototype.shl = function (numBits) {\n        return this.shiftLeft(numBits);\n    };\n    /**\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\n     * @param numBits - Number of bits\n     * @returns Shifted Long\n     */\n    Long.prototype.shiftRight = function (numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        if ((numBits &= 63) === 0)\n            return this;\n        else if (numBits < 32)\n            return Long.fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\n        else\n            return Long.fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n    };\n    /** This is an alias of {@link Long.shiftRight} */\n    Long.prototype.shr = function (numBits) {\n        return this.shiftRight(numBits);\n    };\n    /**\n     * Returns this Long with bits logically shifted to the right by the given amount.\n     * @param numBits - Number of bits\n     * @returns Shifted Long\n     */\n    Long.prototype.shiftRightUnsigned = function (numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        numBits &= 63;\n        if (numBits === 0)\n            return this;\n        else {\n            var high = this.high;\n            if (numBits < 32) {\n                var low = this.low;\n                return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\n            }\n            else if (numBits === 32)\n                return Long.fromBits(high, 0, this.unsigned);\n            else\n                return Long.fromBits(high >>> (numBits - 32), 0, this.unsigned);\n        }\n    };\n    /** This is an alias of {@link Long.shiftRightUnsigned} */\n    Long.prototype.shr_u = function (numBits) {\n        return this.shiftRightUnsigned(numBits);\n    };\n    /** This is an alias of {@link Long.shiftRightUnsigned} */\n    Long.prototype.shru = function (numBits) {\n        return this.shiftRightUnsigned(numBits);\n    };\n    /**\n     * Returns the difference of this and the specified Long.\n     * @param subtrahend - Subtrahend\n     * @returns Difference\n     */\n    Long.prototype.subtract = function (subtrahend) {\n        if (!Long.isLong(subtrahend))\n            subtrahend = Long.fromValue(subtrahend);\n        return this.add(subtrahend.neg());\n    };\n    /** This is an alias of {@link Long.subtract} */\n    Long.prototype.sub = function (subtrahend) {\n        return this.subtract(subtrahend);\n    };\n    /** Converts the Long to a 32 bit integer, assuming it is a 32 bit integer. */\n    Long.prototype.toInt = function () {\n        return this.unsigned ? this.low >>> 0 : this.low;\n    };\n    /** Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa). */\n    Long.prototype.toNumber = function () {\n        if (this.unsigned)\n            return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n    };\n    /** Converts the Long to a BigInt (arbitrary precision). */\n    Long.prototype.toBigInt = function () {\n        return BigInt(this.toString());\n    };\n    /**\n     * Converts this Long to its byte representation.\n     * @param le - Whether little or big endian, defaults to big endian\n     * @returns Byte representation\n     */\n    Long.prototype.toBytes = function (le) {\n        return le ? this.toBytesLE() : this.toBytesBE();\n    };\n    /**\n     * Converts this Long to its little endian byte representation.\n     * @returns Little endian byte representation\n     */\n    Long.prototype.toBytesLE = function () {\n        var hi = this.high, lo = this.low;\n        return [\n            lo & 0xff,\n            (lo >>> 8) & 0xff,\n            (lo >>> 16) & 0xff,\n            lo >>> 24,\n            hi & 0xff,\n            (hi >>> 8) & 0xff,\n            (hi >>> 16) & 0xff,\n            hi >>> 24\n        ];\n    };\n    /**\n     * Converts this Long to its big endian byte representation.\n     * @returns Big endian byte representation\n     */\n    Long.prototype.toBytesBE = function () {\n        var hi = this.high, lo = this.low;\n        return [\n            hi >>> 24,\n            (hi >>> 16) & 0xff,\n            (hi >>> 8) & 0xff,\n            hi & 0xff,\n            lo >>> 24,\n            (lo >>> 16) & 0xff,\n            (lo >>> 8) & 0xff,\n            lo & 0xff\n        ];\n    };\n    /**\n     * Converts this Long to signed.\n     */\n    Long.prototype.toSigned = function () {\n        if (!this.unsigned)\n            return this;\n        return Long.fromBits(this.low, this.high, false);\n    };\n    /**\n     * Converts the Long to a string written in the specified radix.\n     * @param radix - Radix (2-36), defaults to 10\n     * @throws RangeError If `radix` is out of range\n     */\n    Long.prototype.toString = function (radix) {\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw RangeError('radix');\n        if (this.isZero())\n            return '0';\n        if (this.isNegative()) {\n            // Unsigned Longs are never negative\n            if (this.eq(Long.MIN_VALUE)) {\n                // We need to change the Long value before it can be negated, so we remove\n                // the bottom-most digit in this base and then recurse to do the rest.\n                var radixLong = Long.fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);\n                return div.toString(radix) + rem1.toInt().toString(radix);\n            }\n            else\n                return '-' + this.neg().toString(radix);\n        }\n        // Do several (6) digits each time through the loop, so as to\n        // minimize the calls to the very expensive emulated div.\n        var radixToPower = Long.fromNumber(Math.pow(radix, 6), this.unsigned);\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var rem = this;\n        var result = '';\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            var remDiv = rem.div(radixToPower);\n            var intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0;\n            var digits = intval.toString(radix);\n            rem = remDiv;\n            if (rem.isZero()) {\n                return digits + result;\n            }\n            else {\n                while (digits.length < 6)\n                    digits = '0' + digits;\n                result = '' + digits + result;\n            }\n        }\n    };\n    /** Converts this Long to unsigned. */\n    Long.prototype.toUnsigned = function () {\n        if (this.unsigned)\n            return this;\n        return Long.fromBits(this.low, this.high, true);\n    };\n    /** Returns the bitwise XOR of this Long and the given one. */\n    Long.prototype.xor = function (other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n    };\n    /** This is an alias of {@link Long.isZero} */\n    Long.prototype.eqz = function () {\n        return this.isZero();\n    };\n    /** This is an alias of {@link Long.lessThanOrEqual} */\n    Long.prototype.le = function (other) {\n        return this.lessThanOrEqual(other);\n    };\n    /*\n     ****************************************************************\n     *                  BSON SPECIFIC ADDITIONS                     *\n     ****************************************************************\n     */\n    Long.prototype.toExtendedJSON = function (options) {\n        if (options && options.relaxed)\n            return this.toNumber();\n        return { $numberLong: this.toString() };\n    };\n    Long.fromExtendedJSON = function (doc, options) {\n        var result = Long.fromString(doc.$numberLong);\n        return options && options.relaxed ? result.toNumber() : result;\n    };\n    /** @internal */\n    Long.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    Long.prototype.inspect = function () {\n        return \"new Long(\\\"\" + this.toString() + \"\\\"\" + (this.unsigned ? ', true' : '') + \")\";\n    };\n    Long.TWO_PWR_24 = Long.fromInt(TWO_PWR_24_DBL);\n    /** Maximum unsigned value. */\n    Long.MAX_UNSIGNED_VALUE = Long.fromBits(0xffffffff | 0, 0xffffffff | 0, true);\n    /** Signed zero */\n    Long.ZERO = Long.fromInt(0);\n    /** Unsigned zero. */\n    Long.UZERO = Long.fromInt(0, true);\n    /** Signed one. */\n    Long.ONE = Long.fromInt(1);\n    /** Unsigned one. */\n    Long.UONE = Long.fromInt(1, true);\n    /** Signed negative one. */\n    Long.NEG_ONE = Long.fromInt(-1);\n    /** Maximum signed value. */\n    Long.MAX_VALUE = Long.fromBits(0xffffffff | 0, 0x7fffffff | 0, false);\n    /** Minimum signed value. */\n    Long.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0, false);\n    return Long;\n}());\nObject.defineProperty(Long.prototype, '__isLong__', { value: true });\nObject.defineProperty(Long.prototype, '_bsontype', { value: 'Long' });\n\nvar PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\nvar PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\nvar PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\nvar EXPONENT_MAX = 6111;\nvar EXPONENT_MIN = -6176;\nvar EXPONENT_BIAS = 6176;\nvar MAX_DIGITS = 34;\n// Nan value bits as 32 bit values (due to lack of longs)\nvar NAN_BUFFER = [\n    0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nvar INF_NEGATIVE_BUFFER = [\n    0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse();\nvar INF_POSITIVE_BUFFER = [\n    0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse();\nvar EXPONENT_REGEX = /^([-+])?(\\d+)?$/;\n// Extract least significant 5 bits\nvar COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nvar EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nvar COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nvar COMBINATION_NAN = 31;\n// Detect if the value is a digit\nfunction isDigit(value) {\n    return !isNaN(parseInt(value, 10));\n}\n// Divide two uint128 values\nfunction divideu128(value) {\n    var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n    var _rem = Long.fromNumber(0);\n    if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n        return { quotient: value, rem: _rem };\n    }\n    for (var i = 0; i <= 3; i++) {\n        // Adjust remainder to match value of next dividend\n        _rem = _rem.shiftLeft(32);\n        // Add the divided to _rem\n        _rem = _rem.add(new Long(value.parts[i], 0));\n        value.parts[i] = _rem.div(DIVISOR).low;\n        _rem = _rem.modulo(DIVISOR);\n    }\n    return { quotient: value, rem: _rem };\n}\n// Multiply two Long values and return the 128 bit value\nfunction multiply64x2(left, right) {\n    if (!left && !right) {\n        return { high: Long.fromNumber(0), low: Long.fromNumber(0) };\n    }\n    var leftHigh = left.shiftRightUnsigned(32);\n    var leftLow = new Long(left.getLowBits(), 0);\n    var rightHigh = right.shiftRightUnsigned(32);\n    var rightLow = new Long(right.getLowBits(), 0);\n    var productHigh = leftHigh.multiply(rightHigh);\n    var productMid = leftHigh.multiply(rightLow);\n    var productMid2 = leftLow.multiply(rightHigh);\n    var productLow = leftLow.multiply(rightLow);\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productMid = new Long(productMid.getLowBits(), 0)\n        .add(productMid2)\n        .add(productLow.shiftRightUnsigned(32));\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n    // Return the 128 bit result\n    return { high: productHigh, low: productLow };\n}\nfunction lessThan(left, right) {\n    // Make values unsigned\n    var uhleft = left.high >>> 0;\n    var uhright = right.high >>> 0;\n    // Compare high bits first\n    if (uhleft < uhright) {\n        return true;\n    }\n    else if (uhleft === uhright) {\n        var ulleft = left.low >>> 0;\n        var ulright = right.low >>> 0;\n        if (ulleft < ulright)\n            return true;\n    }\n    return false;\n}\nfunction invalidErr(string, message) {\n    throw new BSONTypeError(\"\\\"\" + string + \"\\\" is not a valid Decimal128 string - \" + message);\n}\n/**\n * A class representation of the BSON Decimal128 type.\n * @public\n */\nvar Decimal128 = /** @class */ (function () {\n    /**\n     * @param bytes - a buffer containing the raw Decimal128 bytes in little endian order,\n     *                or a string representation as returned by .toString()\n     */\n    function Decimal128(bytes) {\n        if (!(this instanceof Decimal128))\n            return new Decimal128(bytes);\n        if (typeof bytes === 'string') {\n            this.bytes = Decimal128.fromString(bytes).bytes;\n        }\n        else if (isUint8Array(bytes)) {\n            if (bytes.byteLength !== 16) {\n                throw new BSONTypeError('Decimal128 must take a Buffer of 16 bytes');\n            }\n            this.bytes = bytes;\n        }\n        else {\n            throw new BSONTypeError('Decimal128 must take a Buffer or string');\n        }\n    }\n    /**\n     * Create a Decimal128 instance from a string representation\n     *\n     * @param representation - a numeric string representation.\n     */\n    Decimal128.fromString = function (representation) {\n        // Parse state tracking\n        var isNegative = false;\n        var sawRadix = false;\n        var foundNonZero = false;\n        // Total number of significant digits (no leading or trailing zero)\n        var significantDigits = 0;\n        // Total number of significand digits read\n        var nDigitsRead = 0;\n        // Total number of digits (no leading zeros)\n        var nDigits = 0;\n        // The number of the digits after radix\n        var radixPosition = 0;\n        // The index of the first non-zero in *str*\n        var firstNonZero = 0;\n        // Digits Array\n        var digits = [0];\n        // The number of digits in digits\n        var nDigitsStored = 0;\n        // Insertion pointer for digits\n        var digitsInsert = 0;\n        // The index of the first non-zero digit\n        var firstDigit = 0;\n        // The index of the last digit\n        var lastDigit = 0;\n        // Exponent\n        var exponent = 0;\n        // loop index over array\n        var i = 0;\n        // The high 17 digits of the significand\n        var significandHigh = new Long(0, 0);\n        // The low 17 digits of the significand\n        var significandLow = new Long(0, 0);\n        // The biased exponent\n        var biasedExponent = 0;\n        // Read index\n        var index = 0;\n        // Naively prevent against REDOS attacks.\n        // TODO: implementing a custom parsing for this, or refactoring the regex would yield\n        //       further gains.\n        if (representation.length >= 7000) {\n            throw new BSONTypeError('' + representation + ' not a valid Decimal128 string');\n        }\n        // Results\n        var stringMatch = representation.match(PARSE_STRING_REGEXP);\n        var infMatch = representation.match(PARSE_INF_REGEXP);\n        var nanMatch = representation.match(PARSE_NAN_REGEXP);\n        // Validate the string\n        if ((!stringMatch && !infMatch && !nanMatch) || representation.length === 0) {\n            throw new BSONTypeError('' + representation + ' not a valid Decimal128 string');\n        }\n        if (stringMatch) {\n            // full_match = stringMatch[0]\n            // sign = stringMatch[1]\n            var unsignedNumber = stringMatch[2];\n            // stringMatch[3] is undefined if a whole number (ex \"1\", 12\")\n            // but defined if a number w/ decimal in it (ex \"1.0, 12.2\")\n            var e = stringMatch[4];\n            var expSign = stringMatch[5];\n            var expNumber = stringMatch[6];\n            // they provided e, but didn't give an exponent number. for ex \"1e\"\n            if (e && expNumber === undefined)\n                invalidErr(representation, 'missing exponent power');\n            // they provided e, but didn't give a number before it. for ex \"e1\"\n            if (e && unsignedNumber === undefined)\n                invalidErr(representation, 'missing exponent base');\n            if (e === undefined && (expSign || expNumber)) {\n                invalidErr(representation, 'missing e before exponent');\n            }\n        }\n        // Get the negative or positive sign\n        if (representation[index] === '+' || representation[index] === '-') {\n            isNegative = representation[index++] === '-';\n        }\n        // Check if user passed Infinity or NaN\n        if (!isDigit(representation[index]) && representation[index] !== '.') {\n            if (representation[index] === 'i' || representation[index] === 'I') {\n                return new Decimal128(buffer_1.from(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n            }\n            else if (representation[index] === 'N') {\n                return new Decimal128(buffer_1.from(NAN_BUFFER));\n            }\n        }\n        // Read all the digits\n        while (isDigit(representation[index]) || representation[index] === '.') {\n            if (representation[index] === '.') {\n                if (sawRadix)\n                    invalidErr(representation, 'contains multiple periods');\n                sawRadix = true;\n                index = index + 1;\n                continue;\n            }\n            if (nDigitsStored < 34) {\n                if (representation[index] !== '0' || foundNonZero) {\n                    if (!foundNonZero) {\n                        firstNonZero = nDigitsRead;\n                    }\n                    foundNonZero = true;\n                    // Only store 34 digits\n                    digits[digitsInsert++] = parseInt(representation[index], 10);\n                    nDigitsStored = nDigitsStored + 1;\n                }\n            }\n            if (foundNonZero)\n                nDigits = nDigits + 1;\n            if (sawRadix)\n                radixPosition = radixPosition + 1;\n            nDigitsRead = nDigitsRead + 1;\n            index = index + 1;\n        }\n        if (sawRadix && !nDigitsRead)\n            throw new BSONTypeError('' + representation + ' not a valid Decimal128 string');\n        // Read exponent if exists\n        if (representation[index] === 'e' || representation[index] === 'E') {\n            // Read exponent digits\n            var match = representation.substr(++index).match(EXPONENT_REGEX);\n            // No digits read\n            if (!match || !match[2])\n                return new Decimal128(buffer_1.from(NAN_BUFFER));\n            // Get exponent\n            exponent = parseInt(match[0], 10);\n            // Adjust the index\n            index = index + match[0].length;\n        }\n        // Return not a number\n        if (representation[index])\n            return new Decimal128(buffer_1.from(NAN_BUFFER));\n        // Done reading input\n        // Find first non-zero digit in digits\n        firstDigit = 0;\n        if (!nDigitsStored) {\n            firstDigit = 0;\n            lastDigit = 0;\n            digits[0] = 0;\n            nDigits = 1;\n            nDigitsStored = 1;\n            significantDigits = 0;\n        }\n        else {\n            lastDigit = nDigitsStored - 1;\n            significantDigits = nDigits;\n            if (significantDigits !== 1) {\n                while (digits[firstNonZero + significantDigits - 1] === 0) {\n                    significantDigits = significantDigits - 1;\n                }\n            }\n        }\n        // Normalization of exponent\n        // Correct exponent based on radix position, and shift significand as needed\n        // to represent user input\n        // Overflow prevention\n        if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {\n            exponent = EXPONENT_MIN;\n        }\n        else {\n            exponent = exponent - radixPosition;\n        }\n        // Attempt to normalize the exponent\n        while (exponent > EXPONENT_MAX) {\n            // Shift exponent to significand and decrease\n            lastDigit = lastDigit + 1;\n            if (lastDigit - firstDigit > MAX_DIGITS) {\n                // Check if we have a zero then just hard clamp, otherwise fail\n                var digitsString = digits.join('');\n                if (digitsString.match(/^0+$/)) {\n                    exponent = EXPONENT_MAX;\n                    break;\n                }\n                invalidErr(representation, 'overflow');\n            }\n            exponent = exponent - 1;\n        }\n        while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n            // Shift last digit. can only do this if < significant digits than # stored.\n            if (lastDigit === 0 && significantDigits < nDigitsStored) {\n                exponent = EXPONENT_MIN;\n                significantDigits = 0;\n                break;\n            }\n            if (nDigitsStored < nDigits) {\n                // adjust to match digits not stored\n                nDigits = nDigits - 1;\n            }\n            else {\n                // adjust to round\n                lastDigit = lastDigit - 1;\n            }\n            if (exponent < EXPONENT_MAX) {\n                exponent = exponent + 1;\n            }\n            else {\n                // Check if we have a zero then just hard clamp, otherwise fail\n                var digitsString = digits.join('');\n                if (digitsString.match(/^0+$/)) {\n                    exponent = EXPONENT_MAX;\n                    break;\n                }\n                invalidErr(representation, 'overflow');\n            }\n        }\n        // Round\n        // We've normalized the exponent, but might still need to round.\n        if (lastDigit - firstDigit + 1 < significantDigits) {\n            var endOfString = nDigitsRead;\n            // If we have seen a radix point, 'string' is 1 longer than we have\n            // documented with ndigits_read, so inc the position of the first nonzero\n            // digit and the position that digits are read to.\n            if (sawRadix) {\n                firstNonZero = firstNonZero + 1;\n                endOfString = endOfString + 1;\n            }\n            // if negative, we need to increment again to account for - sign at start.\n            if (isNegative) {\n                firstNonZero = firstNonZero + 1;\n                endOfString = endOfString + 1;\n            }\n            var roundDigit = parseInt(representation[firstNonZero + lastDigit + 1], 10);\n            var roundBit = 0;\n            if (roundDigit >= 5) {\n                roundBit = 1;\n                if (roundDigit === 5) {\n                    roundBit = digits[lastDigit] % 2 === 1 ? 1 : 0;\n                    for (i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n                        if (parseInt(representation[i], 10)) {\n                            roundBit = 1;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (roundBit) {\n                var dIdx = lastDigit;\n                for (; dIdx >= 0; dIdx--) {\n                    if (++digits[dIdx] > 9) {\n                        digits[dIdx] = 0;\n                        // overflowed most significant digit\n                        if (dIdx === 0) {\n                            if (exponent < EXPONENT_MAX) {\n                                exponent = exponent + 1;\n                                digits[dIdx] = 1;\n                            }\n                            else {\n                                return new Decimal128(buffer_1.from(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // Encode significand\n        // The high 17 digits of the significand\n        significandHigh = Long.fromNumber(0);\n        // The low 17 digits of the significand\n        significandLow = Long.fromNumber(0);\n        // read a zero\n        if (significantDigits === 0) {\n            significandHigh = Long.fromNumber(0);\n            significandLow = Long.fromNumber(0);\n        }\n        else if (lastDigit - firstDigit < 17) {\n            var dIdx = firstDigit;\n            significandLow = Long.fromNumber(digits[dIdx++]);\n            significandHigh = new Long(0, 0);\n            for (; dIdx <= lastDigit; dIdx++) {\n                significandLow = significandLow.multiply(Long.fromNumber(10));\n                significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n            }\n        }\n        else {\n            var dIdx = firstDigit;\n            significandHigh = Long.fromNumber(digits[dIdx++]);\n            for (; dIdx <= lastDigit - 17; dIdx++) {\n                significandHigh = significandHigh.multiply(Long.fromNumber(10));\n                significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n            }\n            significandLow = Long.fromNumber(digits[dIdx++]);\n            for (; dIdx <= lastDigit; dIdx++) {\n                significandLow = significandLow.multiply(Long.fromNumber(10));\n                significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n            }\n        }\n        var significand = multiply64x2(significandHigh, Long.fromString('100000000000000000'));\n        significand.low = significand.low.add(significandLow);\n        if (lessThan(significand.low, significandLow)) {\n            significand.high = significand.high.add(Long.fromNumber(1));\n        }\n        // Biased exponent\n        biasedExponent = exponent + EXPONENT_BIAS;\n        var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n        // Encode combination, exponent, and significand.\n        if (significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber(1))) {\n            // Encode '11' into bits 1 to 3\n            dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n            dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));\n            dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n        }\n        else {\n            dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n            dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n        }\n        dec.low = significand.low;\n        // Encode sign\n        if (isNegative) {\n            dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n        }\n        // Encode into a buffer\n        var buffer = buffer_1.alloc(16);\n        index = 0;\n        // Encode the low 64 bits of the decimal\n        // Encode low bits\n        buffer[index++] = dec.low.low & 0xff;\n        buffer[index++] = (dec.low.low >> 8) & 0xff;\n        buffer[index++] = (dec.low.low >> 16) & 0xff;\n        buffer[index++] = (dec.low.low >> 24) & 0xff;\n        // Encode high bits\n        buffer[index++] = dec.low.high & 0xff;\n        buffer[index++] = (dec.low.high >> 8) & 0xff;\n        buffer[index++] = (dec.low.high >> 16) & 0xff;\n        buffer[index++] = (dec.low.high >> 24) & 0xff;\n        // Encode the high 64 bits of the decimal\n        // Encode low bits\n        buffer[index++] = dec.high.low & 0xff;\n        buffer[index++] = (dec.high.low >> 8) & 0xff;\n        buffer[index++] = (dec.high.low >> 16) & 0xff;\n        buffer[index++] = (dec.high.low >> 24) & 0xff;\n        // Encode high bits\n        buffer[index++] = dec.high.high & 0xff;\n        buffer[index++] = (dec.high.high >> 8) & 0xff;\n        buffer[index++] = (dec.high.high >> 16) & 0xff;\n        buffer[index++] = (dec.high.high >> 24) & 0xff;\n        // Return the new Decimal128\n        return new Decimal128(buffer);\n    };\n    /** Create a string representation of the raw Decimal128 value */\n    Decimal128.prototype.toString = function () {\n        // Note: bits in this routine are referred to starting at 0,\n        // from the sign bit, towards the coefficient.\n        // decoded biased exponent (14 bits)\n        var biased_exponent;\n        // the number of significand digits\n        var significand_digits = 0;\n        // the base-10 digits in the significand\n        var significand = new Array(36);\n        for (var i = 0; i < significand.length; i++)\n            significand[i] = 0;\n        // read pointer into significand\n        var index = 0;\n        // true if the number is zero\n        var is_zero = false;\n        // the most significant significand bits (50-46)\n        var significand_msb;\n        // temporary storage for significand decoding\n        var significand128 = { parts: [0, 0, 0, 0] };\n        // indexing variables\n        var j, k;\n        // Output string\n        var string = [];\n        // Unpack index\n        index = 0;\n        // Buffer reference\n        var buffer = this.bytes;\n        // Unpack the low 64bits into a long\n        // bits 96 - 127\n        var low = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        // bits 64 - 95\n        var midl = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        // Unpack the high 64bits into a long\n        // bits 32 - 63\n        var midh = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        // bits 0 - 31\n        var high = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        // Unpack index\n        index = 0;\n        // Create the state of the decimal\n        var dec = {\n            low: new Long(low, midl),\n            high: new Long(midh, high)\n        };\n        if (dec.high.lessThan(Long.ZERO)) {\n            string.push('-');\n        }\n        // Decode combination field and exponent\n        // bits 1 - 5\n        var combination = (high >> 26) & COMBINATION_MASK;\n        if (combination >> 3 === 3) {\n            // Check for 'special' values\n            if (combination === COMBINATION_INFINITY) {\n                return string.join('') + 'Infinity';\n            }\n            else if (combination === COMBINATION_NAN) {\n                return 'NaN';\n            }\n            else {\n                biased_exponent = (high >> 15) & EXPONENT_MASK;\n                significand_msb = 0x08 + ((high >> 14) & 0x01);\n            }\n        }\n        else {\n            significand_msb = (high >> 14) & 0x07;\n            biased_exponent = (high >> 17) & EXPONENT_MASK;\n        }\n        // unbiased exponent\n        var exponent = biased_exponent - EXPONENT_BIAS;\n        // Create string of significand digits\n        // Convert the 114-bit binary number represented by\n        // (significand_high, significand_low) to at most 34 decimal\n        // digits through modulo and division.\n        significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n        significand128.parts[1] = midh;\n        significand128.parts[2] = midl;\n        significand128.parts[3] = low;\n        if (significand128.parts[0] === 0 &&\n            significand128.parts[1] === 0 &&\n            significand128.parts[2] === 0 &&\n            significand128.parts[3] === 0) {\n            is_zero = true;\n        }\n        else {\n            for (k = 3; k >= 0; k--) {\n                var least_digits = 0;\n                // Perform the divide\n                var result = divideu128(significand128);\n                significand128 = result.quotient;\n                least_digits = result.rem.low;\n                // We now have the 9 least significant digits (in base 2).\n                // Convert and output to string.\n                if (!least_digits)\n                    continue;\n                for (j = 8; j >= 0; j--) {\n                    // significand[k * 9 + j] = Math.round(least_digits % 10);\n                    significand[k * 9 + j] = least_digits % 10;\n                    // least_digits = Math.round(least_digits / 10);\n                    least_digits = Math.floor(least_digits / 10);\n                }\n            }\n        }\n        // Output format options:\n        // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n        // Regular    - ddd.ddd\n        if (is_zero) {\n            significand_digits = 1;\n            significand[index] = 0;\n        }\n        else {\n            significand_digits = 36;\n            while (!significand[index]) {\n                significand_digits = significand_digits - 1;\n                index = index + 1;\n            }\n        }\n        // the exponent if scientific notation is used\n        var scientific_exponent = significand_digits - 1 + exponent;\n        // The scientific exponent checks are dictated by the string conversion\n        // specification and are somewhat arbitrary cutoffs.\n        //\n        // We must check exponent > 0, because if this is the case, the number\n        // has trailing zeros.  However, we *cannot* output these trailing zeros,\n        // because doing so would change the precision of the value, and would\n        // change stored data if the string converted number is round tripped.\n        if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n            // Scientific format\n            // if there are too many significant digits, we should just be treating numbers\n            // as + or - 0 and using the non-scientific exponent (this is for the \"invalid\n            // representation should be treated as 0/-0\" spec cases in decimal128-1.json)\n            if (significand_digits > 34) {\n                string.push(\"\" + 0);\n                if (exponent > 0)\n                    string.push('E+' + exponent);\n                else if (exponent < 0)\n                    string.push('E' + exponent);\n                return string.join('');\n            }\n            string.push(\"\" + significand[index++]);\n            significand_digits = significand_digits - 1;\n            if (significand_digits) {\n                string.push('.');\n            }\n            for (var i = 0; i < significand_digits; i++) {\n                string.push(\"\" + significand[index++]);\n            }\n            // Exponent\n            string.push('E');\n            if (scientific_exponent > 0) {\n                string.push('+' + scientific_exponent);\n            }\n            else {\n                string.push(\"\" + scientific_exponent);\n            }\n        }\n        else {\n            // Regular format with no decimal place\n            if (exponent >= 0) {\n                for (var i = 0; i < significand_digits; i++) {\n                    string.push(\"\" + significand[index++]);\n                }\n            }\n            else {\n                var radix_position = significand_digits + exponent;\n                // non-zero digits before radix\n                if (radix_position > 0) {\n                    for (var i = 0; i < radix_position; i++) {\n                        string.push(\"\" + significand[index++]);\n                    }\n                }\n                else {\n                    string.push('0');\n                }\n                string.push('.');\n                // add leading zeros after radix\n                while (radix_position++ < 0) {\n                    string.push('0');\n                }\n                for (var i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n                    string.push(\"\" + significand[index++]);\n                }\n            }\n        }\n        return string.join('');\n    };\n    Decimal128.prototype.toJSON = function () {\n        return { $numberDecimal: this.toString() };\n    };\n    /** @internal */\n    Decimal128.prototype.toExtendedJSON = function () {\n        return { $numberDecimal: this.toString() };\n    };\n    /** @internal */\n    Decimal128.fromExtendedJSON = function (doc) {\n        return Decimal128.fromString(doc.$numberDecimal);\n    };\n    /** @internal */\n    Decimal128.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    Decimal128.prototype.inspect = function () {\n        return \"new Decimal128(\\\"\" + this.toString() + \"\\\")\";\n    };\n    return Decimal128;\n}());\nObject.defineProperty(Decimal128.prototype, '_bsontype', { value: 'Decimal128' });\n\n/**\n * A class representation of the BSON Double type.\n * @public\n */\nvar Double = /** @class */ (function () {\n    /**\n     * Create a Double type\n     *\n     * @param value - the number we want to represent as a double.\n     */\n    function Double(value) {\n        if (!(this instanceof Double))\n            return new Double(value);\n        if (value instanceof Number) {\n            value = value.valueOf();\n        }\n        this.value = +value;\n    }\n    /**\n     * Access the number value.\n     *\n     * @returns returns the wrapped double number.\n     */\n    Double.prototype.valueOf = function () {\n        return this.value;\n    };\n    Double.prototype.toJSON = function () {\n        return this.value;\n    };\n    Double.prototype.toString = function (radix) {\n        return this.value.toString(radix);\n    };\n    /** @internal */\n    Double.prototype.toExtendedJSON = function (options) {\n        if (options && (options.legacy || (options.relaxed && isFinite(this.value)))) {\n            return this.value;\n        }\n        // NOTE: JavaScript has +0 and -0, apparently to model limit calculations. If a user\n        // explicitly provided `-0` then we need to ensure the sign makes it into the output\n        if (Object.is(Math.sign(this.value), -0)) {\n            return { $numberDouble: \"-\" + this.value.toFixed(1) };\n        }\n        var $numberDouble;\n        if (Number.isInteger(this.value)) {\n            $numberDouble = this.value.toFixed(1);\n            if ($numberDouble.length >= 13) {\n                $numberDouble = this.value.toExponential(13).toUpperCase();\n            }\n        }\n        else {\n            $numberDouble = this.value.toString();\n        }\n        return { $numberDouble: $numberDouble };\n    };\n    /** @internal */\n    Double.fromExtendedJSON = function (doc, options) {\n        var doubleValue = parseFloat(doc.$numberDouble);\n        return options && options.relaxed ? doubleValue : new Double(doubleValue);\n    };\n    /** @internal */\n    Double.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    Double.prototype.inspect = function () {\n        var eJSON = this.toExtendedJSON();\n        return \"new Double(\" + eJSON.$numberDouble + \")\";\n    };\n    return Double;\n}());\nObject.defineProperty(Double.prototype, '_bsontype', { value: 'Double' });\n\n/**\n * A class representation of a BSON Int32 type.\n * @public\n */\nvar Int32 = /** @class */ (function () {\n    /**\n     * Create an Int32 type\n     *\n     * @param value - the number we want to represent as an int32.\n     */\n    function Int32(value) {\n        if (!(this instanceof Int32))\n            return new Int32(value);\n        if (value instanceof Number) {\n            value = value.valueOf();\n        }\n        this.value = +value | 0;\n    }\n    /**\n     * Access the number value.\n     *\n     * @returns returns the wrapped int32 number.\n     */\n    Int32.prototype.valueOf = function () {\n        return this.value;\n    };\n    Int32.prototype.toString = function (radix) {\n        return this.value.toString(radix);\n    };\n    Int32.prototype.toJSON = function () {\n        return this.value;\n    };\n    /** @internal */\n    Int32.prototype.toExtendedJSON = function (options) {\n        if (options && (options.relaxed || options.legacy))\n            return this.value;\n        return { $numberInt: this.value.toString() };\n    };\n    /** @internal */\n    Int32.fromExtendedJSON = function (doc, options) {\n        return options && options.relaxed ? parseInt(doc.$numberInt, 10) : new Int32(doc.$numberInt);\n    };\n    /** @internal */\n    Int32.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    Int32.prototype.inspect = function () {\n        return \"new Int32(\" + this.valueOf() + \")\";\n    };\n    return Int32;\n}());\nObject.defineProperty(Int32.prototype, '_bsontype', { value: 'Int32' });\n\n/**\n * A class representation of the BSON MaxKey type.\n * @public\n */\nvar MaxKey = /** @class */ (function () {\n    function MaxKey() {\n        if (!(this instanceof MaxKey))\n            return new MaxKey();\n    }\n    /** @internal */\n    MaxKey.prototype.toExtendedJSON = function () {\n        return { $maxKey: 1 };\n    };\n    /** @internal */\n    MaxKey.fromExtendedJSON = function () {\n        return new MaxKey();\n    };\n    /** @internal */\n    MaxKey.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    MaxKey.prototype.inspect = function () {\n        return 'new MaxKey()';\n    };\n    return MaxKey;\n}());\nObject.defineProperty(MaxKey.prototype, '_bsontype', { value: 'MaxKey' });\n\n/**\n * A class representation of the BSON MinKey type.\n * @public\n */\nvar MinKey = /** @class */ (function () {\n    function MinKey() {\n        if (!(this instanceof MinKey))\n            return new MinKey();\n    }\n    /** @internal */\n    MinKey.prototype.toExtendedJSON = function () {\n        return { $minKey: 1 };\n    };\n    /** @internal */\n    MinKey.fromExtendedJSON = function () {\n        return new MinKey();\n    };\n    /** @internal */\n    MinKey.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    MinKey.prototype.inspect = function () {\n        return 'new MinKey()';\n    };\n    return MinKey;\n}());\nObject.defineProperty(MinKey.prototype, '_bsontype', { value: 'MinKey' });\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\n// Unique sequence for the current process (initialized on first use)\nvar PROCESS_UNIQUE = null;\nvar kId = Symbol('id');\n/**\n * A class representation of the BSON ObjectId type.\n * @public\n */\nvar ObjectId = /** @class */ (function () {\n    /**\n     * Create an ObjectId type\n     *\n     * @param inputId - Can be a 24 character hex string, 12 byte binary Buffer, or a number.\n     */\n    function ObjectId(inputId) {\n        if (!(this instanceof ObjectId))\n            return new ObjectId(inputId);\n        // workingId is set based on type of input and whether valid id exists for the input\n        var workingId;\n        if (typeof inputId === 'object' && inputId && 'id' in inputId) {\n            if (typeof inputId.id !== 'string' && !ArrayBuffer.isView(inputId.id)) {\n                throw new BSONTypeError('Argument passed in must have an id that is of type string or Buffer');\n            }\n            if ('toHexString' in inputId && typeof inputId.toHexString === 'function') {\n                workingId = buffer_1.from(inputId.toHexString(), 'hex');\n            }\n            else {\n                workingId = inputId.id;\n            }\n        }\n        else {\n            workingId = inputId;\n        }\n        // the following cases use workingId to construct an ObjectId\n        if (workingId == null || typeof workingId === 'number') {\n            // The most common use case (blank id, new objectId instance)\n            // Generate a new id\n            this[kId] = ObjectId.generate(typeof workingId === 'number' ? workingId : undefined);\n        }\n        else if (ArrayBuffer.isView(workingId) && workingId.byteLength === 12) {\n            this[kId] = ensureBuffer(workingId);\n        }\n        else if (typeof workingId === 'string') {\n            if (workingId.length === 12) {\n                var bytes = buffer_1.from(workingId);\n                if (bytes.byteLength === 12) {\n                    this[kId] = bytes;\n                }\n                else {\n                    throw new BSONTypeError('Argument passed in must be a string of 12 bytes');\n                }\n            }\n            else if (workingId.length === 24 && checkForHexRegExp.test(workingId)) {\n                this[kId] = buffer_1.from(workingId, 'hex');\n            }\n            else {\n                throw new BSONTypeError('Argument passed in must be a string of 12 bytes or a string of 24 hex characters');\n            }\n        }\n        else {\n            throw new BSONTypeError('Argument passed in does not match the accepted types');\n        }\n        // If we are caching the hex string\n        if (ObjectId.cacheHexString) {\n            this.__id = this.id.toString('hex');\n        }\n    }\n    Object.defineProperty(ObjectId.prototype, \"id\", {\n        /**\n         * The ObjectId bytes\n         * @readonly\n         */\n        get: function () {\n            return this[kId];\n        },\n        set: function (value) {\n            this[kId] = value;\n            if (ObjectId.cacheHexString) {\n                this.__id = value.toString('hex');\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ObjectId.prototype, \"generationTime\", {\n        /**\n         * The generation time of this ObjectId instance\n         * @deprecated Please use getTimestamp / createFromTime which returns an int32 epoch\n         */\n        get: function () {\n            return this.id.readInt32BE(0);\n        },\n        set: function (value) {\n            // Encode time into first 4 bytes\n            this.id.writeUInt32BE(value, 0);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** Returns the ObjectId id as a 24 character hex string representation */\n    ObjectId.prototype.toHexString = function () {\n        if (ObjectId.cacheHexString && this.__id) {\n            return this.__id;\n        }\n        var hexString = this.id.toString('hex');\n        if (ObjectId.cacheHexString && !this.__id) {\n            this.__id = hexString;\n        }\n        return hexString;\n    };\n    /**\n     * Update the ObjectId index\n     * @privateRemarks\n     * Used in generating new ObjectId's on the driver\n     * @internal\n     */\n    ObjectId.getInc = function () {\n        return (ObjectId.index = (ObjectId.index + 1) % 0xffffff);\n    };\n    /**\n     * Generate a 12 byte id buffer used in ObjectId's\n     *\n     * @param time - pass in a second based timestamp.\n     */\n    ObjectId.generate = function (time) {\n        if ('number' !== typeof time) {\n            time = Math.floor(Date.now() / 1000);\n        }\n        var inc = ObjectId.getInc();\n        var buffer = buffer_1.alloc(12);\n        // 4-byte timestamp\n        buffer.writeUInt32BE(time, 0);\n        // set PROCESS_UNIQUE if yet not initialized\n        if (PROCESS_UNIQUE === null) {\n            PROCESS_UNIQUE = randomBytes(5);\n        }\n        // 5-byte process unique\n        buffer[4] = PROCESS_UNIQUE[0];\n        buffer[5] = PROCESS_UNIQUE[1];\n        buffer[6] = PROCESS_UNIQUE[2];\n        buffer[7] = PROCESS_UNIQUE[3];\n        buffer[8] = PROCESS_UNIQUE[4];\n        // 3-byte counter\n        buffer[11] = inc & 0xff;\n        buffer[10] = (inc >> 8) & 0xff;\n        buffer[9] = (inc >> 16) & 0xff;\n        return buffer;\n    };\n    /**\n     * Converts the id into a 24 character hex string for printing\n     *\n     * @param format - The Buffer toString format parameter.\n     */\n    ObjectId.prototype.toString = function (format) {\n        // Is the id a buffer then use the buffer toString method to return the format\n        if (format)\n            return this.id.toString(format);\n        return this.toHexString();\n    };\n    /** Converts to its JSON the 24 character hex string representation. */\n    ObjectId.prototype.toJSON = function () {\n        return this.toHexString();\n    };\n    /**\n     * Compares the equality of this ObjectId with `otherID`.\n     *\n     * @param otherId - ObjectId instance to compare against.\n     */\n    ObjectId.prototype.equals = function (otherId) {\n        if (otherId === undefined || otherId === null) {\n            return false;\n        }\n        if (otherId instanceof ObjectId) {\n            return this.toString() === otherId.toString();\n        }\n        if (typeof otherId === 'string' &&\n            ObjectId.isValid(otherId) &&\n            otherId.length === 12 &&\n            isUint8Array(this.id)) {\n            return otherId === buffer_1.prototype.toString.call(this.id, 'latin1');\n        }\n        if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 24) {\n            return otherId.toLowerCase() === this.toHexString();\n        }\n        if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 12) {\n            return buffer_1.from(otherId).equals(this.id);\n        }\n        if (typeof otherId === 'object' &&\n            'toHexString' in otherId &&\n            typeof otherId.toHexString === 'function') {\n            return otherId.toHexString() === this.toHexString();\n        }\n        return false;\n    };\n    /** Returns the generation date (accurate up to the second) that this ID was generated. */\n    ObjectId.prototype.getTimestamp = function () {\n        var timestamp = new Date();\n        var time = this.id.readUInt32BE(0);\n        timestamp.setTime(Math.floor(time) * 1000);\n        return timestamp;\n    };\n    /** @internal */\n    ObjectId.createPk = function () {\n        return new ObjectId();\n    };\n    /**\n     * Creates an ObjectId from a second based number, with the rest of the ObjectId zeroed out. Used for comparisons or sorting the ObjectId.\n     *\n     * @param time - an integer number representing a number of seconds.\n     */\n    ObjectId.createFromTime = function (time) {\n        var buffer = buffer_1.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n        // Encode time into first 4 bytes\n        buffer.writeUInt32BE(time, 0);\n        // Return the new objectId\n        return new ObjectId(buffer);\n    };\n    /**\n     * Creates an ObjectId from a hex string representation of an ObjectId.\n     *\n     * @param hexString - create a ObjectId from a passed in 24 character hexstring.\n     */\n    ObjectId.createFromHexString = function (hexString) {\n        // Throw an error if it's not a valid setup\n        if (typeof hexString === 'undefined' || (hexString != null && hexString.length !== 24)) {\n            throw new BSONTypeError('Argument passed in must be a single String of 12 bytes or a string of 24 hex characters');\n        }\n        return new ObjectId(buffer_1.from(hexString, 'hex'));\n    };\n    /**\n     * Checks if a value is a valid bson ObjectId\n     *\n     * @param id - ObjectId instance to validate.\n     */\n    ObjectId.isValid = function (id) {\n        if (id == null)\n            return false;\n        try {\n            new ObjectId(id);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    };\n    /** @internal */\n    ObjectId.prototype.toExtendedJSON = function () {\n        if (this.toHexString)\n            return { $oid: this.toHexString() };\n        return { $oid: this.toString('hex') };\n    };\n    /** @internal */\n    ObjectId.fromExtendedJSON = function (doc) {\n        return new ObjectId(doc.$oid);\n    };\n    /**\n     * Converts to a string representation of this Id.\n     *\n     * @returns return the 24 character hex string representation.\n     * @internal\n     */\n    ObjectId.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    ObjectId.prototype.inspect = function () {\n        return \"new ObjectId(\\\"\" + this.toHexString() + \"\\\")\";\n    };\n    /** @internal */\n    ObjectId.index = Math.floor(Math.random() * 0xffffff);\n    return ObjectId;\n}());\n// Deprecated methods\nObject.defineProperty(ObjectId.prototype, 'generate', {\n    value: deprecate(function (time) { return ObjectId.generate(time); }, 'Please use the static `ObjectId.generate(time)` instead')\n});\nObject.defineProperty(ObjectId.prototype, 'getInc', {\n    value: deprecate(function () { return ObjectId.getInc(); }, 'Please use the static `ObjectId.getInc()` instead')\n});\nObject.defineProperty(ObjectId.prototype, 'get_inc', {\n    value: deprecate(function () { return ObjectId.getInc(); }, 'Please use the static `ObjectId.getInc()` instead')\n});\nObject.defineProperty(ObjectId, 'get_inc', {\n    value: deprecate(function () { return ObjectId.getInc(); }, 'Please use the static `ObjectId.getInc()` instead')\n});\nObject.defineProperty(ObjectId.prototype, '_bsontype', { value: 'ObjectID' });\n\nfunction alphabetize(str) {\n    return str.split('').sort().join('');\n}\n/**\n * A class representation of the BSON RegExp type.\n * @public\n */\nvar BSONRegExp = /** @class */ (function () {\n    /**\n     * @param pattern - The regular expression pattern to match\n     * @param options - The regular expression options\n     */\n    function BSONRegExp(pattern, options) {\n        if (!(this instanceof BSONRegExp))\n            return new BSONRegExp(pattern, options);\n        this.pattern = pattern;\n        this.options = alphabetize(options !== null && options !== void 0 ? options : '');\n        if (this.pattern.indexOf('\\x00') !== -1) {\n            throw new BSONError(\"BSON Regex patterns cannot contain null bytes, found: \" + JSON.stringify(this.pattern));\n        }\n        if (this.options.indexOf('\\x00') !== -1) {\n            throw new BSONError(\"BSON Regex options cannot contain null bytes, found: \" + JSON.stringify(this.options));\n        }\n        // Validate options\n        for (var i = 0; i < this.options.length; i++) {\n            if (!(this.options[i] === 'i' ||\n                this.options[i] === 'm' ||\n                this.options[i] === 'x' ||\n                this.options[i] === 'l' ||\n                this.options[i] === 's' ||\n                this.options[i] === 'u')) {\n                throw new BSONError(\"The regular expression option [\" + this.options[i] + \"] is not supported\");\n            }\n        }\n    }\n    BSONRegExp.parseOptions = function (options) {\n        return options ? options.split('').sort().join('') : '';\n    };\n    /** @internal */\n    BSONRegExp.prototype.toExtendedJSON = function (options) {\n        options = options || {};\n        if (options.legacy) {\n            return { $regex: this.pattern, $options: this.options };\n        }\n        return { $regularExpression: { pattern: this.pattern, options: this.options } };\n    };\n    /** @internal */\n    BSONRegExp.fromExtendedJSON = function (doc) {\n        if ('$regex' in doc) {\n            if (typeof doc.$regex !== 'string') {\n                // This is for $regex query operators that have extended json values.\n                if (doc.$regex._bsontype === 'BSONRegExp') {\n                    return doc;\n                }\n            }\n            else {\n                return new BSONRegExp(doc.$regex, BSONRegExp.parseOptions(doc.$options));\n            }\n        }\n        if ('$regularExpression' in doc) {\n            return new BSONRegExp(doc.$regularExpression.pattern, BSONRegExp.parseOptions(doc.$regularExpression.options));\n        }\n        throw new BSONTypeError(\"Unexpected BSONRegExp EJSON object form: \" + JSON.stringify(doc));\n    };\n    return BSONRegExp;\n}());\nObject.defineProperty(BSONRegExp.prototype, '_bsontype', { value: 'BSONRegExp' });\n\n/**\n * A class representation of the BSON Symbol type.\n * @public\n */\nvar BSONSymbol = /** @class */ (function () {\n    /**\n     * @param value - the string representing the symbol.\n     */\n    function BSONSymbol(value) {\n        if (!(this instanceof BSONSymbol))\n            return new BSONSymbol(value);\n        this.value = value;\n    }\n    /** Access the wrapped string value. */\n    BSONSymbol.prototype.valueOf = function () {\n        return this.value;\n    };\n    BSONSymbol.prototype.toString = function () {\n        return this.value;\n    };\n    /** @internal */\n    BSONSymbol.prototype.inspect = function () {\n        return \"new BSONSymbol(\\\"\" + this.value + \"\\\")\";\n    };\n    BSONSymbol.prototype.toJSON = function () {\n        return this.value;\n    };\n    /** @internal */\n    BSONSymbol.prototype.toExtendedJSON = function () {\n        return { $symbol: this.value };\n    };\n    /** @internal */\n    BSONSymbol.fromExtendedJSON = function (doc) {\n        return new BSONSymbol(doc.$symbol);\n    };\n    /** @internal */\n    BSONSymbol.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    return BSONSymbol;\n}());\nObject.defineProperty(BSONSymbol.prototype, '_bsontype', { value: 'Symbol' });\n\n/** @public */\nvar LongWithoutOverridesClass = Long;\n/** @public */\nvar Timestamp = /** @class */ (function (_super) {\n    __extends(Timestamp, _super);\n    function Timestamp(low, high) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        ///@ts-expect-error\n        if (!(_this instanceof Timestamp))\n            return new Timestamp(low, high);\n        if (Long.isLong(low)) {\n            _this = _super.call(this, low.low, low.high, true) || this;\n        }\n        else if (isObjectLike(low) && typeof low.t !== 'undefined' && typeof low.i !== 'undefined') {\n            _this = _super.call(this, low.i, low.t, true) || this;\n        }\n        else {\n            _this = _super.call(this, low, high, true) || this;\n        }\n        Object.defineProperty(_this, '_bsontype', {\n            value: 'Timestamp',\n            writable: false,\n            configurable: false,\n            enumerable: false\n        });\n        return _this;\n    }\n    Timestamp.prototype.toJSON = function () {\n        return {\n            $timestamp: this.toString()\n        };\n    };\n    /** Returns a Timestamp represented by the given (32-bit) integer value. */\n    Timestamp.fromInt = function (value) {\n        return new Timestamp(Long.fromInt(value, true));\n    };\n    /** Returns a Timestamp representing the given number value, provided that it is a finite number. Otherwise, zero is returned. */\n    Timestamp.fromNumber = function (value) {\n        return new Timestamp(Long.fromNumber(value, true));\n    };\n    /**\n     * Returns a Timestamp for the given high and low bits. Each is assumed to use 32 bits.\n     *\n     * @param lowBits - the low 32-bits.\n     * @param highBits - the high 32-bits.\n     */\n    Timestamp.fromBits = function (lowBits, highBits) {\n        return new Timestamp(lowBits, highBits);\n    };\n    /**\n     * Returns a Timestamp from the given string, optionally using the given radix.\n     *\n     * @param str - the textual representation of the Timestamp.\n     * @param optRadix - the radix in which the text is written.\n     */\n    Timestamp.fromString = function (str, optRadix) {\n        return new Timestamp(Long.fromString(str, true, optRadix));\n    };\n    /** @internal */\n    Timestamp.prototype.toExtendedJSON = function () {\n        return { $timestamp: { t: this.high >>> 0, i: this.low >>> 0 } };\n    };\n    /** @internal */\n    Timestamp.fromExtendedJSON = function (doc) {\n        return new Timestamp(doc.$timestamp);\n    };\n    /** @internal */\n    Timestamp.prototype[Symbol.for('nodejs.util.inspect.custom')] = function () {\n        return this.inspect();\n    };\n    Timestamp.prototype.inspect = function () {\n        return \"new Timestamp({ t: \" + this.getHighBits() + \", i: \" + this.getLowBits() + \" })\";\n    };\n    Timestamp.MAX_VALUE = Long.MAX_UNSIGNED_VALUE;\n    return Timestamp;\n}(LongWithoutOverridesClass));\n\nfunction isBSONType(value) {\n    return (isObjectLike(value) && Reflect.has(value, '_bsontype') && typeof value._bsontype === 'string');\n}\n// INT32 boundaries\nvar BSON_INT32_MAX$1 = 0x7fffffff;\nvar BSON_INT32_MIN$1 = -0x80000000;\n// INT64 boundaries\nvar BSON_INT64_MAX$1 = 0x7fffffffffffffff;\nvar BSON_INT64_MIN$1 = -0x8000000000000000;\n// all the types where we don't need to do any special processing and can just pass the EJSON\n//straight to type.fromExtendedJSON\nvar keysToCodecs = {\n    $oid: ObjectId,\n    $binary: Binary,\n    $uuid: Binary,\n    $symbol: BSONSymbol,\n    $numberInt: Int32,\n    $numberDecimal: Decimal128,\n    $numberDouble: Double,\n    $numberLong: Long,\n    $minKey: MinKey,\n    $maxKey: MaxKey,\n    $regex: BSONRegExp,\n    $regularExpression: BSONRegExp,\n    $timestamp: Timestamp\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction deserializeValue(value, options) {\n    if (options === void 0) { options = {}; }\n    if (typeof value === 'number') {\n        if (options.relaxed || options.legacy) {\n            return value;\n        }\n        // if it's an integer, should interpret as smallest BSON integer\n        // that can represent it exactly. (if out of range, interpret as double.)\n        if (Math.floor(value) === value) {\n            if (value >= BSON_INT32_MIN$1 && value <= BSON_INT32_MAX$1)\n                return new Int32(value);\n            if (value >= BSON_INT64_MIN$1 && value <= BSON_INT64_MAX$1)\n                return Long.fromNumber(value);\n        }\n        // If the number is a non-integer or out of integer range, should interpret as BSON Double.\n        return new Double(value);\n    }\n    // from here on out we're looking for bson types, so bail if its not an object\n    if (value == null || typeof value !== 'object')\n        return value;\n    // upgrade deprecated undefined to null\n    if (value.$undefined)\n        return null;\n    var keys = Object.keys(value).filter(function (k) { return k.startsWith('$') && value[k] != null; });\n    for (var i = 0; i < keys.length; i++) {\n        var c = keysToCodecs[keys[i]];\n        if (c)\n            return c.fromExtendedJSON(value, options);\n    }\n    if (value.$date != null) {\n        var d = value.$date;\n        var date = new Date();\n        if (options.legacy) {\n            if (typeof d === 'number')\n                date.setTime(d);\n            else if (typeof d === 'string')\n                date.setTime(Date.parse(d));\n        }\n        else {\n            if (typeof d === 'string')\n                date.setTime(Date.parse(d));\n            else if (Long.isLong(d))\n                date.setTime(d.toNumber());\n            else if (typeof d === 'number' && options.relaxed)\n                date.setTime(d);\n        }\n        return date;\n    }\n    if (value.$code != null) {\n        var copy = Object.assign({}, value);\n        if (value.$scope) {\n            copy.$scope = deserializeValue(value.$scope);\n        }\n        return Code.fromExtendedJSON(value);\n    }\n    if (isDBRefLike(value) || value.$dbPointer) {\n        var v = value.$ref ? value : value.$dbPointer;\n        // we run into this in a \"degenerate EJSON\" case (with $id and $ref order flipped)\n        // because of the order JSON.parse goes through the document\n        if (v instanceof DBRef)\n            return v;\n        var dollarKeys = Object.keys(v).filter(function (k) { return k.startsWith('$'); });\n        var valid_1 = true;\n        dollarKeys.forEach(function (k) {\n            if (['$ref', '$id', '$db'].indexOf(k) === -1)\n                valid_1 = false;\n        });\n        // only make DBRef if $ keys are all valid\n        if (valid_1)\n            return DBRef.fromExtendedJSON(v);\n    }\n    return value;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeArray(array, options) {\n    return array.map(function (v, index) {\n        options.seenObjects.push({ propertyName: \"index \" + index, obj: null });\n        try {\n            return serializeValue(v, options);\n        }\n        finally {\n            options.seenObjects.pop();\n        }\n    });\n}\nfunction getISOString(date) {\n    var isoStr = date.toISOString();\n    // we should only show milliseconds in timestamp if they're non-zero\n    return date.getUTCMilliseconds() !== 0 ? isoStr : isoStr.slice(0, -5) + 'Z';\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeValue(value, options) {\n    if ((typeof value === 'object' || typeof value === 'function') && value !== null) {\n        var index = options.seenObjects.findIndex(function (entry) { return entry.obj === value; });\n        if (index !== -1) {\n            var props = options.seenObjects.map(function (entry) { return entry.propertyName; });\n            var leadingPart = props\n                .slice(0, index)\n                .map(function (prop) { return prop + \" -> \"; })\n                .join('');\n            var alreadySeen = props[index];\n            var circularPart = ' -> ' +\n                props\n                    .slice(index + 1, props.length - 1)\n                    .map(function (prop) { return prop + \" -> \"; })\n                    .join('');\n            var current = props[props.length - 1];\n            var leadingSpace = ' '.repeat(leadingPart.length + alreadySeen.length / 2);\n            var dashes = '-'.repeat(circularPart.length + (alreadySeen.length + current.length) / 2 - 1);\n            throw new BSONTypeError('Converting circular structure to EJSON:\\n' +\n                (\"    \" + leadingPart + alreadySeen + circularPart + current + \"\\n\") +\n                (\"    \" + leadingSpace + \"\\\\\" + dashes + \"/\"));\n        }\n        options.seenObjects[options.seenObjects.length - 1].obj = value;\n    }\n    if (Array.isArray(value))\n        return serializeArray(value, options);\n    if (value === undefined)\n        return null;\n    if (value instanceof Date || isDate(value)) {\n        var dateNum = value.getTime(), \n        // is it in year range 1970-9999?\n        inRange = dateNum > -1 && dateNum < 253402318800000;\n        if (options.legacy) {\n            return options.relaxed && inRange\n                ? { $date: value.getTime() }\n                : { $date: getISOString(value) };\n        }\n        return options.relaxed && inRange\n            ? { $date: getISOString(value) }\n            : { $date: { $numberLong: value.getTime().toString() } };\n    }\n    if (typeof value === 'number' && (!options.relaxed || !isFinite(value))) {\n        // it's an integer\n        if (Math.floor(value) === value) {\n            var int32Range = value >= BSON_INT32_MIN$1 && value <= BSON_INT32_MAX$1, int64Range = value >= BSON_INT64_MIN$1 && value <= BSON_INT64_MAX$1;\n            // interpret as being of the smallest BSON integer type that can represent the number exactly\n            if (int32Range)\n                return { $numberInt: value.toString() };\n            if (int64Range)\n                return { $numberLong: value.toString() };\n        }\n        return { $numberDouble: value.toString() };\n    }\n    if (value instanceof RegExp || isRegExp(value)) {\n        var flags = value.flags;\n        if (flags === undefined) {\n            var match = value.toString().match(/[gimuy]*$/);\n            if (match) {\n                flags = match[0];\n            }\n        }\n        var rx = new BSONRegExp(value.source, flags);\n        return rx.toExtendedJSON(options);\n    }\n    if (value != null && typeof value === 'object')\n        return serializeDocument(value, options);\n    return value;\n}\nvar BSON_TYPE_MAPPINGS = {\n    Binary: function (o) { return new Binary(o.value(), o.sub_type); },\n    Code: function (o) { return new Code(o.code, o.scope); },\n    DBRef: function (o) { return new DBRef(o.collection || o.namespace, o.oid, o.db, o.fields); },\n    Decimal128: function (o) { return new Decimal128(o.bytes); },\n    Double: function (o) { return new Double(o.value); },\n    Int32: function (o) { return new Int32(o.value); },\n    Long: function (o) {\n        return Long.fromBits(\n        // underscore variants for 1.x backwards compatibility\n        o.low != null ? o.low : o.low_, o.low != null ? o.high : o.high_, o.low != null ? o.unsigned : o.unsigned_);\n    },\n    MaxKey: function () { return new MaxKey(); },\n    MinKey: function () { return new MinKey(); },\n    ObjectID: function (o) { return new ObjectId(o); },\n    ObjectId: function (o) { return new ObjectId(o); },\n    BSONRegExp: function (o) { return new BSONRegExp(o.pattern, o.options); },\n    Symbol: function (o) { return new BSONSymbol(o.value); },\n    Timestamp: function (o) { return Timestamp.fromBits(o.low, o.high); }\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeDocument(doc, options) {\n    if (doc == null || typeof doc !== 'object')\n        throw new BSONError('not an object instance');\n    var bsontype = doc._bsontype;\n    if (typeof bsontype === 'undefined') {\n        // It's a regular object. Recursively serialize its property values.\n        var _doc = {};\n        for (var name in doc) {\n            options.seenObjects.push({ propertyName: name, obj: null });\n            try {\n                _doc[name] = serializeValue(doc[name], options);\n            }\n            finally {\n                options.seenObjects.pop();\n            }\n        }\n        return _doc;\n    }\n    else if (isBSONType(doc)) {\n        // the \"document\" is really just a BSON type object\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var outDoc = doc;\n        if (typeof outDoc.toExtendedJSON !== 'function') {\n            // There's no EJSON serialization function on the object. It's probably an\n            // object created by a previous version of this library (or another library)\n            // that's duck-typing objects to look like they were generated by this library).\n            // Copy the object into this library's version of that type.\n            var mapper = BSON_TYPE_MAPPINGS[doc._bsontype];\n            if (!mapper) {\n                throw new BSONTypeError('Unrecognized or invalid _bsontype: ' + doc._bsontype);\n            }\n            outDoc = mapper(outDoc);\n        }\n        // Two BSON types may have nested objects that may need to be serialized too\n        if (bsontype === 'Code' && outDoc.scope) {\n            outDoc = new Code(outDoc.code, serializeValue(outDoc.scope, options));\n        }\n        else if (bsontype === 'DBRef' && outDoc.oid) {\n            outDoc = new DBRef(serializeValue(outDoc.collection, options), serializeValue(outDoc.oid, options), serializeValue(outDoc.db, options), serializeValue(outDoc.fields, options));\n        }\n        return outDoc.toExtendedJSON(options);\n    }\n    else {\n        throw new BSONError('_bsontype must be a string, but was: ' + typeof bsontype);\n    }\n}\n/**\n * EJSON parse / stringify API\n * @public\n */\n// the namespace here is used to emulate `export * as EJSON from '...'`\n// which as of now (sept 2020) api-extractor does not support\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar EJSON;\n(function (EJSON) {\n    /**\n     * Parse an Extended JSON string, constructing the JavaScript value or object described by that\n     * string.\n     *\n     * @example\n     * ```js\n     * const { EJSON } = require('bson');\n     * const text = '{ \"int32\": { \"$numberInt\": \"10\" } }';\n     *\n     * // prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\n     * console.log(EJSON.parse(text, { relaxed: false }));\n     *\n     * // prints { int32: 10 }\n     * console.log(EJSON.parse(text));\n     * ```\n     */\n    function parse(text, options) {\n        var finalOptions = Object.assign({}, { relaxed: true, legacy: false }, options);\n        // relaxed implies not strict\n        if (typeof finalOptions.relaxed === 'boolean')\n            finalOptions.strict = !finalOptions.relaxed;\n        if (typeof finalOptions.strict === 'boolean')\n            finalOptions.relaxed = !finalOptions.strict;\n        return JSON.parse(text, function (key, value) {\n            if (key.indexOf('\\x00') !== -1) {\n                throw new BSONError(\"BSON Document field names cannot contain null bytes, found: \" + JSON.stringify(key));\n            }\n            return deserializeValue(value, finalOptions);\n        });\n    }\n    EJSON.parse = parse;\n    /**\n     * Converts a BSON document to an Extended JSON string, optionally replacing values if a replacer\n     * function is specified or optionally including only the specified properties if a replacer array\n     * is specified.\n     *\n     * @param value - The value to convert to extended JSON\n     * @param replacer - A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string\n     * @param space - A String or Number object that's used to insert white space into the output JSON string for readability purposes.\n     * @param options - Optional settings\n     *\n     * @example\n     * ```js\n     * const { EJSON } = require('bson');\n     * const Int32 = require('mongodb').Int32;\n     * const doc = { int32: new Int32(10) };\n     *\n     * // prints '{\"int32\":{\"$numberInt\":\"10\"}}'\n     * console.log(EJSON.stringify(doc, { relaxed: false }));\n     *\n     * // prints '{\"int32\":10}'\n     * console.log(EJSON.stringify(doc));\n     * ```\n     */\n    function stringify(value, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    replacer, space, options) {\n        if (space != null && typeof space === 'object') {\n            options = space;\n            space = 0;\n        }\n        if (replacer != null && typeof replacer === 'object' && !Array.isArray(replacer)) {\n            options = replacer;\n            replacer = undefined;\n            space = 0;\n        }\n        var serializeOptions = Object.assign({ relaxed: true, legacy: false }, options, {\n            seenObjects: [{ propertyName: '(root)', obj: null }]\n        });\n        var doc = serializeValue(value, serializeOptions);\n        return JSON.stringify(doc, replacer, space);\n    }\n    EJSON.stringify = stringify;\n    /**\n     * Serializes an object to an Extended JSON string, and reparse it as a JavaScript object.\n     *\n     * @param value - The object to serialize\n     * @param options - Optional settings passed to the `stringify` function\n     */\n    function serialize(value, options) {\n        options = options || {};\n        return JSON.parse(stringify(value, options));\n    }\n    EJSON.serialize = serialize;\n    /**\n     * Deserializes an Extended JSON object into a plain JavaScript object with native/BSON types\n     *\n     * @param ejson - The Extended JSON object to deserialize\n     * @param options - Optional settings passed to the parse method\n     */\n    function deserialize(ejson, options) {\n        options = options || {};\n        return parse(JSON.stringify(ejson), options);\n    }\n    EJSON.deserialize = deserialize;\n})(EJSON || (EJSON = {}));\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/** @public */\nvar bsonMap;\nvar bsonGlobal = getGlobal();\nif (bsonGlobal.Map) {\n    bsonMap = bsonGlobal.Map;\n}\nelse {\n    // We will return a polyfill\n    bsonMap = /** @class */ (function () {\n        function Map(array) {\n            if (array === void 0) { array = []; }\n            this._keys = [];\n            this._values = {};\n            for (var i = 0; i < array.length; i++) {\n                if (array[i] == null)\n                    continue; // skip null and undefined\n                var entry = array[i];\n                var key = entry[0];\n                var value = entry[1];\n                // Add the key to the list of keys in order\n                this._keys.push(key);\n                // Add the key and value to the values dictionary with a point\n                // to the location in the ordered keys list\n                this._values[key] = { v: value, i: this._keys.length - 1 };\n            }\n        }\n        Map.prototype.clear = function () {\n            this._keys = [];\n            this._values = {};\n        };\n        Map.prototype.delete = function (key) {\n            var value = this._values[key];\n            if (value == null)\n                return false;\n            // Delete entry\n            delete this._values[key];\n            // Remove the key from the ordered keys list\n            this._keys.splice(value.i, 1);\n            return true;\n        };\n        Map.prototype.entries = function () {\n            var _this = this;\n            var index = 0;\n            return {\n                next: function () {\n                    var key = _this._keys[index++];\n                    return {\n                        value: key !== undefined ? [key, _this._values[key].v] : undefined,\n                        done: key !== undefined ? false : true\n                    };\n                }\n            };\n        };\n        Map.prototype.forEach = function (callback, self) {\n            self = self || this;\n            for (var i = 0; i < this._keys.length; i++) {\n                var key = this._keys[i];\n                // Call the forEach callback\n                callback.call(self, this._values[key].v, key, self);\n            }\n        };\n        Map.prototype.get = function (key) {\n            return this._values[key] ? this._values[key].v : undefined;\n        };\n        Map.prototype.has = function (key) {\n            return this._values[key] != null;\n        };\n        Map.prototype.keys = function () {\n            var _this = this;\n            var index = 0;\n            return {\n                next: function () {\n                    var key = _this._keys[index++];\n                    return {\n                        value: key !== undefined ? key : undefined,\n                        done: key !== undefined ? false : true\n                    };\n                }\n            };\n        };\n        Map.prototype.set = function (key, value) {\n            if (this._values[key]) {\n                this._values[key].v = value;\n                return this;\n            }\n            // Add the key to the list of keys in order\n            this._keys.push(key);\n            // Add the key and value to the values dictionary with a point\n            // to the location in the ordered keys list\n            this._values[key] = { v: value, i: this._keys.length - 1 };\n            return this;\n        };\n        Map.prototype.values = function () {\n            var _this = this;\n            var index = 0;\n            return {\n                next: function () {\n                    var key = _this._keys[index++];\n                    return {\n                        value: key !== undefined ? _this._values[key].v : undefined,\n                        done: key !== undefined ? false : true\n                    };\n                }\n            };\n        };\n        Object.defineProperty(Map.prototype, \"size\", {\n            get: function () {\n                return this._keys.length;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return Map;\n    }());\n}\n\n/** @internal */\nvar BSON_INT32_MAX = 0x7fffffff;\n/** @internal */\nvar BSON_INT32_MIN = -0x80000000;\n/** @internal */\nvar BSON_INT64_MAX = Math.pow(2, 63) - 1;\n/** @internal */\nvar BSON_INT64_MIN = -Math.pow(2, 63);\n/**\n * Any integer up to 2^53 can be precisely represented by a double.\n * @internal\n */\nvar JS_INT_MAX = Math.pow(2, 53);\n/**\n * Any integer down to -2^53 can be precisely represented by a double.\n * @internal\n */\nvar JS_INT_MIN = -Math.pow(2, 53);\n/** Number BSON Type @internal */\nvar BSON_DATA_NUMBER = 1;\n/** String BSON Type @internal */\nvar BSON_DATA_STRING = 2;\n/** Object BSON Type @internal */\nvar BSON_DATA_OBJECT = 3;\n/** Array BSON Type @internal */\nvar BSON_DATA_ARRAY = 4;\n/** Binary BSON Type @internal */\nvar BSON_DATA_BINARY = 5;\n/** Binary BSON Type @internal */\nvar BSON_DATA_UNDEFINED = 6;\n/** ObjectId BSON Type @internal */\nvar BSON_DATA_OID = 7;\n/** Boolean BSON Type @internal */\nvar BSON_DATA_BOOLEAN = 8;\n/** Date BSON Type @internal */\nvar BSON_DATA_DATE = 9;\n/** null BSON Type @internal */\nvar BSON_DATA_NULL = 10;\n/** RegExp BSON Type @internal */\nvar BSON_DATA_REGEXP = 11;\n/** Code BSON Type @internal */\nvar BSON_DATA_DBPOINTER = 12;\n/** Code BSON Type @internal */\nvar BSON_DATA_CODE = 13;\n/** Symbol BSON Type @internal */\nvar BSON_DATA_SYMBOL = 14;\n/** Code with Scope BSON Type @internal */\nvar BSON_DATA_CODE_W_SCOPE = 15;\n/** 32 bit Integer BSON Type @internal */\nvar BSON_DATA_INT = 16;\n/** Timestamp BSON Type @internal */\nvar BSON_DATA_TIMESTAMP = 17;\n/** Long BSON Type @internal */\nvar BSON_DATA_LONG = 18;\n/** Decimal128 BSON Type @internal */\nvar BSON_DATA_DECIMAL128 = 19;\n/** MinKey BSON Type @internal */\nvar BSON_DATA_MIN_KEY = 0xff;\n/** MaxKey BSON Type @internal */\nvar BSON_DATA_MAX_KEY = 0x7f;\n/** Binary Default Type @internal */\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/** Binary Function Type @internal */\nvar BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/** Binary Byte Array Type @internal */\nvar BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/** Binary Deprecated UUID Type @deprecated Please use BSON_BINARY_SUBTYPE_UUID_NEW @internal */\nvar BSON_BINARY_SUBTYPE_UUID = 3;\n/** Binary UUID Type @internal */\nvar BSON_BINARY_SUBTYPE_UUID_NEW = 4;\n/** Binary MD5 Type @internal */\nvar BSON_BINARY_SUBTYPE_MD5 = 5;\n/** Encrypted BSON type @internal */\nvar BSON_BINARY_SUBTYPE_ENCRYPTED = 6;\n/** Column BSON type @internal */\nvar BSON_BINARY_SUBTYPE_COLUMN = 7;\n/** Binary User Defined Type @internal */\nvar BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\nfunction calculateObjectSize$1(object, serializeFunctions, ignoreUndefined) {\n    var totalLength = 4 + 1;\n    if (Array.isArray(object)) {\n        for (var i = 0; i < object.length; i++) {\n            totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined);\n        }\n    }\n    else {\n        // If we have toBSON defined, override the current object\n        if (typeof (object === null || object === void 0 ? void 0 : object.toBSON) === 'function') {\n            object = object.toBSON();\n        }\n        // Calculate size\n        for (var key in object) {\n            totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n        }\n    }\n    return totalLength;\n}\n/** @internal */\nfunction calculateElement(name, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvalue, serializeFunctions, isArray, ignoreUndefined) {\n    if (serializeFunctions === void 0) { serializeFunctions = false; }\n    if (isArray === void 0) { isArray = false; }\n    if (ignoreUndefined === void 0) { ignoreUndefined = false; }\n    // If we have toBSON defined, override the current object\n    if (typeof (value === null || value === void 0 ? void 0 : value.toBSON) === 'function') {\n        value = value.toBSON();\n    }\n    switch (typeof value) {\n        case 'string':\n            return 1 + buffer_1.byteLength(name, 'utf8') + 1 + 4 + buffer_1.byteLength(value, 'utf8') + 1;\n        case 'number':\n            if (Math.floor(value) === value &&\n                value >= JS_INT_MIN &&\n                value <= JS_INT_MAX) {\n                if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n                    // 32 bit\n                    return (name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\n                }\n                else {\n                    return (name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n                }\n            }\n            else {\n                // 64 bit\n                return (name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n            }\n        case 'undefined':\n            if (isArray || !ignoreUndefined)\n                return (name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) + 1;\n            return 0;\n        case 'boolean':\n            return (name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\n        case 'object':\n            if (value == null || value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n                return (name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) + 1;\n            }\n            else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n                return (name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                return (name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n            }\n            else if (ArrayBuffer.isView(value) ||\n                value instanceof ArrayBuffer ||\n                isAnyArrayBuffer(value)) {\n                return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.byteLength);\n            }\n            else if (value['_bsontype'] === 'Long' ||\n                value['_bsontype'] === 'Double' ||\n                value['_bsontype'] === 'Timestamp') {\n                return (name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n            }\n            else if (value['_bsontype'] === 'Decimal128') {\n                return (name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\n            }\n            else if (value['_bsontype'] === 'Code') {\n                // Calculate size depending on the availability of a scope\n                if (value.scope != null && Object.keys(value.scope).length > 0) {\n                    return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) +\n                        1 +\n                        4 +\n                        4 +\n                        buffer_1.byteLength(value.code.toString(), 'utf8') +\n                        1 +\n                        calculateObjectSize$1(value.scope, serializeFunctions, ignoreUndefined));\n                }\n                else {\n                    return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) +\n                        1 +\n                        4 +\n                        buffer_1.byteLength(value.code.toString(), 'utf8') +\n                        1);\n                }\n            }\n            else if (value['_bsontype'] === 'Binary') {\n                // Check what kind of subtype we have\n                if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n                    return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) +\n                        (value.position + 1 + 4 + 1 + 4));\n                }\n                else {\n                    return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1));\n                }\n            }\n            else if (value['_bsontype'] === 'Symbol') {\n                return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) +\n                    buffer_1.byteLength(value.value, 'utf8') +\n                    4 +\n                    1 +\n                    1);\n            }\n            else if (value['_bsontype'] === 'DBRef') {\n                // Set up correct object for serialization\n                var ordered_values = Object.assign({\n                    $ref: value.collection,\n                    $id: value.oid\n                }, value.fields);\n                // Add db reference if it exists\n                if (value.db != null) {\n                    ordered_values['$db'] = value.db;\n                }\n                return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) +\n                    1 +\n                    calculateObjectSize$1(ordered_values, serializeFunctions, ignoreUndefined));\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) +\n                    1 +\n                    buffer_1.byteLength(value.source, 'utf8') +\n                    1 +\n                    (value.global ? 1 : 0) +\n                    (value.ignoreCase ? 1 : 0) +\n                    (value.multiline ? 1 : 0) +\n                    1);\n            }\n            else if (value['_bsontype'] === 'BSONRegExp') {\n                return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) +\n                    1 +\n                    buffer_1.byteLength(value.pattern, 'utf8') +\n                    1 +\n                    buffer_1.byteLength(value.options, 'utf8') +\n                    1);\n            }\n            else {\n                return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) +\n                    calculateObjectSize$1(value, serializeFunctions, ignoreUndefined) +\n                    1);\n            }\n        case 'function':\n            // WTF for 0.4.X where typeof /someregexp/ === 'function'\n            if (value instanceof RegExp || isRegExp(value) || String.call(value) === '[object RegExp]') {\n                return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) +\n                    1 +\n                    buffer_1.byteLength(value.source, 'utf8') +\n                    1 +\n                    (value.global ? 1 : 0) +\n                    (value.ignoreCase ? 1 : 0) +\n                    (value.multiline ? 1 : 0) +\n                    1);\n            }\n            else {\n                if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n                    return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) +\n                        1 +\n                        4 +\n                        4 +\n                        buffer_1.byteLength(normalizedFunctionString(value), 'utf8') +\n                        1 +\n                        calculateObjectSize$1(value.scope, serializeFunctions, ignoreUndefined));\n                }\n                else if (serializeFunctions) {\n                    return ((name != null ? buffer_1.byteLength(name, 'utf8') + 1 : 0) +\n                        1 +\n                        4 +\n                        buffer_1.byteLength(normalizedFunctionString(value), 'utf8') +\n                        1);\n                }\n            }\n    }\n    return 0;\n}\n\nvar FIRST_BIT = 0x80;\nvar FIRST_TWO_BITS = 0xc0;\nvar FIRST_THREE_BITS = 0xe0;\nvar FIRST_FOUR_BITS = 0xf0;\nvar FIRST_FIVE_BITS = 0xf8;\nvar TWO_BIT_CHAR = 0xc0;\nvar THREE_BIT_CHAR = 0xe0;\nvar FOUR_BIT_CHAR = 0xf0;\nvar CONTINUING_CHAR = 0x80;\n/**\n * Determines if the passed in bytes are valid utf8\n * @param bytes - An array of 8-bit bytes. Must be indexable and have length property\n * @param start - The index to start validating\n * @param end - The index to end validating\n */\nfunction validateUtf8(bytes, start, end) {\n    var continuation = 0;\n    for (var i = start; i < end; i += 1) {\n        var byte = bytes[i];\n        if (continuation) {\n            if ((byte & FIRST_TWO_BITS) !== CONTINUING_CHAR) {\n                return false;\n            }\n            continuation -= 1;\n        }\n        else if (byte & FIRST_BIT) {\n            if ((byte & FIRST_THREE_BITS) === TWO_BIT_CHAR) {\n                continuation = 1;\n            }\n            else if ((byte & FIRST_FOUR_BITS) === THREE_BIT_CHAR) {\n                continuation = 2;\n            }\n            else if ((byte & FIRST_FIVE_BITS) === FOUR_BIT_CHAR) {\n                continuation = 3;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return !continuation;\n}\n\n// Internal long versions\nvar JS_INT_MAX_LONG = Long.fromNumber(JS_INT_MAX);\nvar JS_INT_MIN_LONG = Long.fromNumber(JS_INT_MIN);\nvar functionCache = {};\nfunction deserialize$1(buffer, options, isArray) {\n    options = options == null ? {} : options;\n    var index = options && options.index ? options.index : 0;\n    // Read the document size\n    var size = buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n    if (size < 5) {\n        throw new BSONError(\"bson size must be >= 5, is \" + size);\n    }\n    if (options.allowObjectSmallerThanBufferSize && buffer.length < size) {\n        throw new BSONError(\"buffer length \" + buffer.length + \" must be >= bson size \" + size);\n    }\n    if (!options.allowObjectSmallerThanBufferSize && buffer.length !== size) {\n        throw new BSONError(\"buffer length \" + buffer.length + \" must === bson size \" + size);\n    }\n    if (size + index > buffer.byteLength) {\n        throw new BSONError(\"(bson size \" + size + \" + options.index \" + index + \" must be <= buffer length \" + buffer.byteLength + \")\");\n    }\n    // Illegal end value\n    if (buffer[index + size - 1] !== 0) {\n        throw new BSONError(\"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\");\n    }\n    // Start deserializtion\n    return deserializeObject(buffer, index, options, isArray);\n}\nvar allowedDBRefKeys = /^\\$ref$|^\\$id$|^\\$db$/;\nfunction deserializeObject(buffer, index, options, isArray) {\n    if (isArray === void 0) { isArray = false; }\n    var evalFunctions = options['evalFunctions'] == null ? false : options['evalFunctions'];\n    var cacheFunctions = options['cacheFunctions'] == null ? false : options['cacheFunctions'];\n    var fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];\n    // Return raw bson buffer instead of parsing it\n    var raw = options['raw'] == null ? false : options['raw'];\n    // Return BSONRegExp objects instead of native regular expressions\n    var bsonRegExp = typeof options['bsonRegExp'] === 'boolean' ? options['bsonRegExp'] : false;\n    // Controls the promotion of values vs wrapper classes\n    var promoteBuffers = options['promoteBuffers'] == null ? false : options['promoteBuffers'];\n    var promoteLongs = options['promoteLongs'] == null ? true : options['promoteLongs'];\n    var promoteValues = options['promoteValues'] == null ? true : options['promoteValues'];\n    // Ensures default validation option if none given\n    var validation = options.validation == null ? { utf8: true } : options.validation;\n    // Shows if global utf-8 validation is enabled or disabled\n    var globalUTFValidation = true;\n    // Reflects utf-8 validation setting regardless of global or specific key validation\n    var validationSetting;\n    // Set of keys either to enable or disable validation on\n    var utf8KeysSet = new Set();\n    // Check for boolean uniformity and empty validation option\n    var utf8ValidatedKeys = validation.utf8;\n    if (typeof utf8ValidatedKeys === 'boolean') {\n        validationSetting = utf8ValidatedKeys;\n    }\n    else {\n        globalUTFValidation = false;\n        var utf8ValidationValues = Object.keys(utf8ValidatedKeys).map(function (key) {\n            return utf8ValidatedKeys[key];\n        });\n        if (utf8ValidationValues.length === 0) {\n            throw new BSONError('UTF-8 validation setting cannot be empty');\n        }\n        if (typeof utf8ValidationValues[0] !== 'boolean') {\n            throw new BSONError('Invalid UTF-8 validation option, must specify boolean values');\n        }\n        validationSetting = utf8ValidationValues[0];\n        // Ensures boolean uniformity in utf-8 validation (all true or all false)\n        if (!utf8ValidationValues.every(function (item) { return item === validationSetting; })) {\n            throw new BSONError('Invalid UTF-8 validation option - keys must be all true or all false');\n        }\n    }\n    // Add keys to set that will either be validated or not based on validationSetting\n    if (!globalUTFValidation) {\n        for (var _i = 0, _a = Object.keys(utf8ValidatedKeys); _i < _a.length; _i++) {\n            var key = _a[_i];\n            utf8KeysSet.add(key);\n        }\n    }\n    // Set the start index\n    var startIndex = index;\n    // Validate that we have at least 4 bytes of buffer\n    if (buffer.length < 5)\n        throw new BSONError('corrupt bson message < 5 bytes long');\n    // Read the document size\n    var size = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n    // Ensure buffer is valid size\n    if (size < 5 || size > buffer.length)\n        throw new BSONError('corrupt bson message');\n    // Create holding object\n    var object = isArray ? [] : {};\n    // Used for arrays to skip having to perform utf8 decoding\n    var arrayIndex = 0;\n    var done = false;\n    var isPossibleDBRef = isArray ? false : null;\n    // While we have more left data left keep parsing\n    while (!done) {\n        // Read the type\n        var elementType = buffer[index++];\n        // If we get a zero it's the last byte, exit\n        if (elementType === 0)\n            break;\n        // Get the start search index\n        var i = index;\n        // Locate the end of the c string\n        while (buffer[i] !== 0x00 && i < buffer.length) {\n            i++;\n        }\n        // If are at the end of the buffer there is a problem with the document\n        if (i >= buffer.byteLength)\n            throw new BSONError('Bad BSON Document: illegal CString');\n        // Represents the key\n        var name = isArray ? arrayIndex++ : buffer.toString('utf8', index, i);\n        // shouldValidateKey is true if the key should be validated, false otherwise\n        var shouldValidateKey = true;\n        if (globalUTFValidation || utf8KeysSet.has(name)) {\n            shouldValidateKey = validationSetting;\n        }\n        else {\n            shouldValidateKey = !validationSetting;\n        }\n        if (isPossibleDBRef !== false && name[0] === '$') {\n            isPossibleDBRef = allowedDBRefKeys.test(name);\n        }\n        var value = void 0;\n        index = i + 1;\n        if (elementType === BSON_DATA_STRING) {\n            var stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            value = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            index = index + stringSize;\n        }\n        else if (elementType === BSON_DATA_OID) {\n            var oid = buffer_1.alloc(12);\n            buffer.copy(oid, 0, index, index + 12);\n            value = new ObjectId(oid);\n            index = index + 12;\n        }\n        else if (elementType === BSON_DATA_INT && promoteValues === false) {\n            value = new Int32(buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24));\n        }\n        else if (elementType === BSON_DATA_INT) {\n            value =\n                buffer[index++] |\n                    (buffer[index++] << 8) |\n                    (buffer[index++] << 16) |\n                    (buffer[index++] << 24);\n        }\n        else if (elementType === BSON_DATA_NUMBER && promoteValues === false) {\n            value = new Double(buffer.readDoubleLE(index));\n            index = index + 8;\n        }\n        else if (elementType === BSON_DATA_NUMBER) {\n            value = buffer.readDoubleLE(index);\n            index = index + 8;\n        }\n        else if (elementType === BSON_DATA_DATE) {\n            var lowBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            var highBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            value = new Date(new Long(lowBits, highBits).toNumber());\n        }\n        else if (elementType === BSON_DATA_BOOLEAN) {\n            if (buffer[index] !== 0 && buffer[index] !== 1)\n                throw new BSONError('illegal boolean type value');\n            value = buffer[index++] === 1;\n        }\n        else if (elementType === BSON_DATA_OBJECT) {\n            var _index = index;\n            var objectSize = buffer[index] |\n                (buffer[index + 1] << 8) |\n                (buffer[index + 2] << 16) |\n                (buffer[index + 3] << 24);\n            if (objectSize <= 0 || objectSize > buffer.length - index)\n                throw new BSONError('bad embedded document length in bson');\n            // We have a raw value\n            if (raw) {\n                value = buffer.slice(index, index + objectSize);\n            }\n            else {\n                var objectOptions = options;\n                if (!globalUTFValidation) {\n                    objectOptions = _assign(_assign({}, options), { validation: { utf8: shouldValidateKey } });\n                }\n                value = deserializeObject(buffer, _index, objectOptions, false);\n            }\n            index = index + objectSize;\n        }\n        else if (elementType === BSON_DATA_ARRAY) {\n            var _index = index;\n            var objectSize = buffer[index] |\n                (buffer[index + 1] << 8) |\n                (buffer[index + 2] << 16) |\n                (buffer[index + 3] << 24);\n            var arrayOptions = options;\n            // Stop index\n            var stopIndex = index + objectSize;\n            // All elements of array to be returned as raw bson\n            if (fieldsAsRaw && fieldsAsRaw[name]) {\n                arrayOptions = {};\n                for (var n in options) {\n                    arrayOptions[n] = options[n];\n                }\n                arrayOptions['raw'] = true;\n            }\n            if (!globalUTFValidation) {\n                arrayOptions = _assign(_assign({}, arrayOptions), { validation: { utf8: shouldValidateKey } });\n            }\n            value = deserializeObject(buffer, _index, arrayOptions, true);\n            index = index + objectSize;\n            if (buffer[index - 1] !== 0)\n                throw new BSONError('invalid array terminator byte');\n            if (index !== stopIndex)\n                throw new BSONError('corrupted array bson');\n        }\n        else if (elementType === BSON_DATA_UNDEFINED) {\n            value = undefined;\n        }\n        else if (elementType === BSON_DATA_NULL) {\n            value = null;\n        }\n        else if (elementType === BSON_DATA_LONG) {\n            // Unpack the low and high bits\n            var lowBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            var highBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            var long = new Long(lowBits, highBits);\n            // Promote the long if possible\n            if (promoteLongs && promoteValues === true) {\n                value =\n                    long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG)\n                        ? long.toNumber()\n                        : long;\n            }\n            else {\n                value = long;\n            }\n        }\n        else if (elementType === BSON_DATA_DECIMAL128) {\n            // Buffer to contain the decimal bytes\n            var bytes = buffer_1.alloc(16);\n            // Copy the next 16 bytes into the bytes buffer\n            buffer.copy(bytes, 0, index, index + 16);\n            // Update index\n            index = index + 16;\n            // Assign the new Decimal128 value\n            var decimal128 = new Decimal128(bytes);\n            // If we have an alternative mapper use that\n            if ('toObject' in decimal128 && typeof decimal128.toObject === 'function') {\n                value = decimal128.toObject();\n            }\n            else {\n                value = decimal128;\n            }\n        }\n        else if (elementType === BSON_DATA_BINARY) {\n            var binarySize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            var totalBinarySize = binarySize;\n            var subType = buffer[index++];\n            // Did we have a negative binary size, throw\n            if (binarySize < 0)\n                throw new BSONError('Negative binary type element size found');\n            // Is the length longer than the document\n            if (binarySize > buffer.byteLength)\n                throw new BSONError('Binary type size larger than document size');\n            // Decode as raw Buffer object if options specifies it\n            if (buffer['slice'] != null) {\n                // If we have subtype 2 skip the 4 bytes for the size\n                if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n                    binarySize =\n                        buffer[index++] |\n                            (buffer[index++] << 8) |\n                            (buffer[index++] << 16) |\n                            (buffer[index++] << 24);\n                    if (binarySize < 0)\n                        throw new BSONError('Negative binary type element size found for subtype 0x02');\n                    if (binarySize > totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too long binary size');\n                    if (binarySize < totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too short binary size');\n                }\n                if (promoteBuffers && promoteValues) {\n                    value = buffer.slice(index, index + binarySize);\n                }\n                else {\n                    value = new Binary(buffer.slice(index, index + binarySize), subType);\n                }\n            }\n            else {\n                var _buffer = buffer_1.alloc(binarySize);\n                // If we have subtype 2 skip the 4 bytes for the size\n                if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n                    binarySize =\n                        buffer[index++] |\n                            (buffer[index++] << 8) |\n                            (buffer[index++] << 16) |\n                            (buffer[index++] << 24);\n                    if (binarySize < 0)\n                        throw new BSONError('Negative binary type element size found for subtype 0x02');\n                    if (binarySize > totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too long binary size');\n                    if (binarySize < totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too short binary size');\n                }\n                // Copy the data\n                for (i = 0; i < binarySize; i++) {\n                    _buffer[i] = buffer[index + i];\n                }\n                if (promoteBuffers && promoteValues) {\n                    value = _buffer;\n                }\n                else {\n                    value = new Binary(_buffer, subType);\n                }\n            }\n            // Update the index\n            index = index + binarySize;\n        }\n        else if (elementType === BSON_DATA_REGEXP && bsonRegExp === false) {\n            // Get the start search index\n            i = index;\n            // Locate the end of the c string\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            // If are at the end of the buffer there is a problem with the document\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            // Return the C string\n            var source = buffer.toString('utf8', index, i);\n            // Create the regexp\n            index = i + 1;\n            // Get the start search index\n            i = index;\n            // Locate the end of the c string\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            // If are at the end of the buffer there is a problem with the document\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            // Return the C string\n            var regExpOptions = buffer.toString('utf8', index, i);\n            index = i + 1;\n            // For each option add the corresponding one for javascript\n            var optionsArray = new Array(regExpOptions.length);\n            // Parse options\n            for (i = 0; i < regExpOptions.length; i++) {\n                switch (regExpOptions[i]) {\n                    case 'm':\n                        optionsArray[i] = 'm';\n                        break;\n                    case 's':\n                        optionsArray[i] = 'g';\n                        break;\n                    case 'i':\n                        optionsArray[i] = 'i';\n                        break;\n                }\n            }\n            value = new RegExp(source, optionsArray.join(''));\n        }\n        else if (elementType === BSON_DATA_REGEXP && bsonRegExp === true) {\n            // Get the start search index\n            i = index;\n            // Locate the end of the c string\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            // If are at the end of the buffer there is a problem with the document\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            // Return the C string\n            var source = buffer.toString('utf8', index, i);\n            index = i + 1;\n            // Get the start search index\n            i = index;\n            // Locate the end of the c string\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            // If are at the end of the buffer there is a problem with the document\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            // Return the C string\n            var regExpOptions = buffer.toString('utf8', index, i);\n            index = i + 1;\n            // Set the object\n            value = new BSONRegExp(source, regExpOptions);\n        }\n        else if (elementType === BSON_DATA_SYMBOL) {\n            var stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            var symbol = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            value = promoteValues ? symbol : new BSONSymbol(symbol);\n            index = index + stringSize;\n        }\n        else if (elementType === BSON_DATA_TIMESTAMP) {\n            var lowBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            var highBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            value = new Timestamp(lowBits, highBits);\n        }\n        else if (elementType === BSON_DATA_MIN_KEY) {\n            value = new MinKey();\n        }\n        else if (elementType === BSON_DATA_MAX_KEY) {\n            value = new MaxKey();\n        }\n        else if (elementType === BSON_DATA_CODE) {\n            var stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            var functionString = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            // If we are evaluating the functions\n            if (evalFunctions) {\n                // If we have cache enabled let's look for the md5 of the function in the cache\n                if (cacheFunctions) {\n                    // Got to do this to avoid V8 deoptimizing the call due to finding eval\n                    value = isolateEval(functionString, functionCache, object);\n                }\n                else {\n                    value = isolateEval(functionString);\n                }\n            }\n            else {\n                value = new Code(functionString);\n            }\n            // Update parse index position\n            index = index + stringSize;\n        }\n        else if (elementType === BSON_DATA_CODE_W_SCOPE) {\n            var totalSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            // Element cannot be shorter than totalSize + stringSize + documentSize + terminator\n            if (totalSize < 4 + 4 + 4 + 1) {\n                throw new BSONError('code_w_scope total size shorter minimum expected length');\n            }\n            // Get the code string size\n            var stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            // Check if we have a valid string\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            // Javascript function\n            var functionString = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            // Update parse index position\n            index = index + stringSize;\n            // Parse the element\n            var _index = index;\n            // Decode the size of the object document\n            var objectSize = buffer[index] |\n                (buffer[index + 1] << 8) |\n                (buffer[index + 2] << 16) |\n                (buffer[index + 3] << 24);\n            // Decode the scope object\n            var scopeObject = deserializeObject(buffer, _index, options, false);\n            // Adjust the index\n            index = index + objectSize;\n            // Check if field length is too short\n            if (totalSize < 4 + 4 + objectSize + stringSize) {\n                throw new BSONError('code_w_scope total size is too short, truncating scope');\n            }\n            // Check if totalSize field is too long\n            if (totalSize > 4 + 4 + objectSize + stringSize) {\n                throw new BSONError('code_w_scope total size is too long, clips outer document');\n            }\n            // If we are evaluating the functions\n            if (evalFunctions) {\n                // If we have cache enabled let's look for the md5 of the function in the cache\n                if (cacheFunctions) {\n                    // Got to do this to avoid V8 deoptimizing the call due to finding eval\n                    value = isolateEval(functionString, functionCache, object);\n                }\n                else {\n                    value = isolateEval(functionString);\n                }\n                value.scope = scopeObject;\n            }\n            else {\n                value = new Code(functionString, scopeObject);\n            }\n        }\n        else if (elementType === BSON_DATA_DBPOINTER) {\n            // Get the code string size\n            var stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            // Check if we have a valid string\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0)\n                throw new BSONError('bad string length in bson');\n            // Namespace\n            if (validation != null && validation.utf8) {\n                if (!validateUtf8(buffer, index, index + stringSize - 1)) {\n                    throw new BSONError('Invalid UTF-8 string in BSON document');\n                }\n            }\n            var namespace = buffer.toString('utf8', index, index + stringSize - 1);\n            // Update parse index position\n            index = index + stringSize;\n            // Read the oid\n            var oidBuffer = buffer_1.alloc(12);\n            buffer.copy(oidBuffer, 0, index, index + 12);\n            var oid = new ObjectId(oidBuffer);\n            // Update the index\n            index = index + 12;\n            // Upgrade to DBRef type\n            value = new DBRef(namespace, oid);\n        }\n        else {\n            throw new BSONError('Detected unknown BSON type ' + elementType.toString(16) + ' for fieldname \"' + name + '\"');\n        }\n        if (name === '__proto__') {\n            Object.defineProperty(object, name, {\n                value: value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n        else {\n            object[name] = value;\n        }\n    }\n    // Check if the deserialization was against a valid array/object\n    if (size !== index - startIndex) {\n        if (isArray)\n            throw new BSONError('corrupt array bson');\n        throw new BSONError('corrupt object bson');\n    }\n    // if we did not find \"$ref\", \"$id\", \"$db\", or found an extraneous $key, don't make a DBRef\n    if (!isPossibleDBRef)\n        return object;\n    if (isDBRefLike(object)) {\n        var copy = Object.assign({}, object);\n        delete copy.$ref;\n        delete copy.$id;\n        delete copy.$db;\n        return new DBRef(object.$ref, object.$id, object.$db, copy);\n    }\n    return object;\n}\n/**\n * Ensure eval is isolated, store the result in functionCache.\n *\n * @internal\n */\nfunction isolateEval(functionString, functionCache, object) {\n    if (!functionCache)\n        return new Function(functionString);\n    // Check for cache hit, eval if missing and return cached function\n    if (functionCache[functionString] == null) {\n        functionCache[functionString] = new Function(functionString);\n    }\n    // Set the object\n    return functionCache[functionString].bind(object);\n}\nfunction getValidatedString(buffer, start, end, shouldValidateUtf8) {\n    var value = buffer.toString('utf8', start, end);\n    // if utf8 validation is on, do the check\n    if (shouldValidateUtf8) {\n        for (var i = 0; i < value.length; i++) {\n            if (value.charCodeAt(i) === 0xfffd) {\n                if (!validateUtf8(buffer, start, end)) {\n                    throw new BSONError('Invalid UTF-8 string in BSON document');\n                }\n                break;\n            }\n        }\n    }\n    return value;\n}\n\n// Copyright (c) 2008, Fair Oaks Labs, Inc.\nfunction writeIEEE754(buffer, value, offset, endian, mLen, nBytes) {\n    var e;\n    var m;\n    var c;\n    var bBE = endian === 'big';\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = bBE ? nBytes - 1 : 0;\n    var d = bBE ? -1 : 1;\n    var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n    }\n    else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n        }\n        if (e + eBias >= 1) {\n            value += rt / c;\n        }\n        else {\n            value += rt * Math.pow(2, 1 - eBias);\n        }\n        if (value * c >= 2) {\n            e++;\n            c /= 2;\n        }\n        if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n        }\n        else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n        }\n        else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n        }\n    }\n    if (isNaN(value))\n        m = 0;\n    while (mLen >= 8) {\n        buffer[offset + i] = m & 0xff;\n        i += d;\n        m /= 256;\n        mLen -= 8;\n    }\n    e = (e << mLen) | m;\n    if (isNaN(value))\n        e += 8;\n    eLen += mLen;\n    while (eLen > 0) {\n        buffer[offset + i] = e & 0xff;\n        i += d;\n        e /= 256;\n        eLen -= 8;\n    }\n    buffer[offset + i - d] |= s * 128;\n}\n\nvar regexp = /\\x00/; // eslint-disable-line no-control-regex\nvar ignoreKeys = new Set(['$db', '$ref', '$id', '$clusterTime']);\n/*\n * isArray indicates if we are writing to a BSON array (type 0x04)\n * which forces the \"key\" which really an array index as a string to be written as ascii\n * This will catch any errors in index as a string generation\n */\nfunction serializeString(buffer, key, value, index, isArray) {\n    // Encode String type\n    buffer[index++] = BSON_DATA_STRING;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes + 1;\n    buffer[index - 1] = 0;\n    // Write the string\n    var size = buffer.write(value, index + 4, undefined, 'utf8');\n    // Write the size of the string to buffer\n    buffer[index + 3] = ((size + 1) >> 24) & 0xff;\n    buffer[index + 2] = ((size + 1) >> 16) & 0xff;\n    buffer[index + 1] = ((size + 1) >> 8) & 0xff;\n    buffer[index] = (size + 1) & 0xff;\n    // Update index\n    index = index + 4 + size;\n    // Write zero\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeNumber(buffer, key, value, index, isArray) {\n    // We have an integer value\n    // TODO(NODE-2529): Add support for big int\n    if (Number.isInteger(value) &&\n        value >= BSON_INT32_MIN &&\n        value <= BSON_INT32_MAX) {\n        // If the value fits in 32 bits encode as int32\n        // Set int type 32 bits or less\n        buffer[index++] = BSON_DATA_INT;\n        // Number of written bytes\n        var numberOfWrittenBytes = !isArray\n            ? buffer.write(key, index, undefined, 'utf8')\n            : buffer.write(key, index, undefined, 'ascii');\n        // Encode the name\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        // Write the int value\n        buffer[index++] = value & 0xff;\n        buffer[index++] = (value >> 8) & 0xff;\n        buffer[index++] = (value >> 16) & 0xff;\n        buffer[index++] = (value >> 24) & 0xff;\n    }\n    else {\n        // Encode as double\n        buffer[index++] = BSON_DATA_NUMBER;\n        // Number of written bytes\n        var numberOfWrittenBytes = !isArray\n            ? buffer.write(key, index, undefined, 'utf8')\n            : buffer.write(key, index, undefined, 'ascii');\n        // Encode the name\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        // Write float\n        writeIEEE754(buffer, value, index, 'little', 52, 8);\n        // Adjust index\n        index = index + 8;\n    }\n    return index;\n}\nfunction serializeNull(buffer, key, _, index, isArray) {\n    // Set long type\n    buffer[index++] = BSON_DATA_NULL;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeBoolean(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = BSON_DATA_BOOLEAN;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Encode the boolean value\n    buffer[index++] = value ? 1 : 0;\n    return index;\n}\nfunction serializeDate(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = BSON_DATA_DATE;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the date\n    var dateInMilis = Long.fromNumber(value.getTime());\n    var lowBits = dateInMilis.getLowBits();\n    var highBits = dateInMilis.getHighBits();\n    // Encode low bits\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = (lowBits >> 8) & 0xff;\n    buffer[index++] = (lowBits >> 16) & 0xff;\n    buffer[index++] = (lowBits >> 24) & 0xff;\n    // Encode high bits\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = (highBits >> 8) & 0xff;\n    buffer[index++] = (highBits >> 16) & 0xff;\n    buffer[index++] = (highBits >> 24) & 0xff;\n    return index;\n}\nfunction serializeRegExp(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = BSON_DATA_REGEXP;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    if (value.source && value.source.match(regexp) != null) {\n        throw Error('value ' + value.source + ' must not contain null bytes');\n    }\n    // Adjust the index\n    index = index + buffer.write(value.source, index, undefined, 'utf8');\n    // Write zero\n    buffer[index++] = 0x00;\n    // Write the parameters\n    if (value.ignoreCase)\n        buffer[index++] = 0x69; // i\n    if (value.global)\n        buffer[index++] = 0x73; // s\n    if (value.multiline)\n        buffer[index++] = 0x6d; // m\n    // Add ending zero\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeBSONRegExp(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = BSON_DATA_REGEXP;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Check the pattern for 0 bytes\n    if (value.pattern.match(regexp) != null) {\n        // The BSON spec doesn't allow keys with null bytes because keys are\n        // null-terminated.\n        throw Error('pattern ' + value.pattern + ' must not contain null bytes');\n    }\n    // Adjust the index\n    index = index + buffer.write(value.pattern, index, undefined, 'utf8');\n    // Write zero\n    buffer[index++] = 0x00;\n    // Write the options\n    index = index + buffer.write(value.options.split('').sort().join(''), index, undefined, 'utf8');\n    // Add ending zero\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeMinMax(buffer, key, value, index, isArray) {\n    // Write the type of either min or max key\n    if (value === null) {\n        buffer[index++] = BSON_DATA_NULL;\n    }\n    else if (value._bsontype === 'MinKey') {\n        buffer[index++] = BSON_DATA_MIN_KEY;\n    }\n    else {\n        buffer[index++] = BSON_DATA_MAX_KEY;\n    }\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeObjectId(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = BSON_DATA_OID;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the objectId into the shared buffer\n    if (typeof value.id === 'string') {\n        buffer.write(value.id, index, undefined, 'binary');\n    }\n    else if (isUint8Array(value.id)) {\n        // Use the standard JS methods here because buffer.copy() is buggy with the\n        // browser polyfill\n        buffer.set(value.id.subarray(0, 12), index);\n    }\n    else {\n        throw new BSONTypeError('object [' + JSON.stringify(value) + '] is not a valid ObjectId');\n    }\n    // Adjust index\n    return index + 12;\n}\nfunction serializeBuffer(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = BSON_DATA_BINARY;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Get size of the buffer (current write point)\n    var size = value.length;\n    // Write the size of the string to buffer\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    // Write the default subtype\n    buffer[index++] = BSON_BINARY_SUBTYPE_DEFAULT;\n    // Copy the content form the binary field to the buffer\n    buffer.set(ensureBuffer(value), index);\n    // Adjust the index\n    index = index + size;\n    return index;\n}\nfunction serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, isArray, path) {\n    if (checkKeys === void 0) { checkKeys = false; }\n    if (depth === void 0) { depth = 0; }\n    if (serializeFunctions === void 0) { serializeFunctions = false; }\n    if (ignoreUndefined === void 0) { ignoreUndefined = true; }\n    if (isArray === void 0) { isArray = false; }\n    if (path === void 0) { path = []; }\n    for (var i = 0; i < path.length; i++) {\n        if (path[i] === value)\n            throw new BSONError('cyclic dependency detected');\n    }\n    // Push value to stack\n    path.push(value);\n    // Write the type\n    buffer[index++] = Array.isArray(value) ? BSON_DATA_ARRAY : BSON_DATA_OBJECT;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    var endIndex = serializeInto(buffer, value, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path);\n    // Pop stack\n    path.pop();\n    return endIndex;\n}\nfunction serializeDecimal128(buffer, key, value, index, isArray) {\n    buffer[index++] = BSON_DATA_DECIMAL128;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the data from the value\n    // Prefer the standard JS methods because their typechecking is not buggy,\n    // unlike the `buffer` polyfill's.\n    buffer.set(value.bytes.subarray(0, 16), index);\n    return index + 16;\n}\nfunction serializeLong(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] =\n        value._bsontype === 'Long' ? BSON_DATA_LONG : BSON_DATA_TIMESTAMP;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the date\n    var lowBits = value.getLowBits();\n    var highBits = value.getHighBits();\n    // Encode low bits\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = (lowBits >> 8) & 0xff;\n    buffer[index++] = (lowBits >> 16) & 0xff;\n    buffer[index++] = (lowBits >> 24) & 0xff;\n    // Encode high bits\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = (highBits >> 8) & 0xff;\n    buffer[index++] = (highBits >> 16) & 0xff;\n    buffer[index++] = (highBits >> 24) & 0xff;\n    return index;\n}\nfunction serializeInt32(buffer, key, value, index, isArray) {\n    value = value.valueOf();\n    // Set int type 32 bits or less\n    buffer[index++] = BSON_DATA_INT;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the int value\n    buffer[index++] = value & 0xff;\n    buffer[index++] = (value >> 8) & 0xff;\n    buffer[index++] = (value >> 16) & 0xff;\n    buffer[index++] = (value >> 24) & 0xff;\n    return index;\n}\nfunction serializeDouble(buffer, key, value, index, isArray) {\n    // Encode as double\n    buffer[index++] = BSON_DATA_NUMBER;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write float\n    writeIEEE754(buffer, value.value, index, 'little', 52, 8);\n    // Adjust index\n    index = index + 8;\n    return index;\n}\nfunction serializeFunction(buffer, key, value, index, _checkKeys, _depth, isArray) {\n    buffer[index++] = BSON_DATA_CODE;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Function string\n    var functionString = normalizedFunctionString(value);\n    // Write the string\n    var size = buffer.write(functionString, index + 4, undefined, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, isArray) {\n    if (checkKeys === void 0) { checkKeys = false; }\n    if (depth === void 0) { depth = 0; }\n    if (serializeFunctions === void 0) { serializeFunctions = false; }\n    if (ignoreUndefined === void 0) { ignoreUndefined = true; }\n    if (isArray === void 0) { isArray = false; }\n    if (value.scope && typeof value.scope === 'object') {\n        // Write the type\n        buffer[index++] = BSON_DATA_CODE_W_SCOPE;\n        // Number of written bytes\n        var numberOfWrittenBytes = !isArray\n            ? buffer.write(key, index, undefined, 'utf8')\n            : buffer.write(key, index, undefined, 'ascii');\n        // Encode the name\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        // Starting index\n        var startIndex = index;\n        // Serialize the function\n        // Get the function string\n        var functionString = typeof value.code === 'string' ? value.code : value.code.toString();\n        // Index adjustment\n        index = index + 4;\n        // Write string into buffer\n        var codeSize = buffer.write(functionString, index + 4, undefined, 'utf8') + 1;\n        // Write the size of the string to buffer\n        buffer[index] = codeSize & 0xff;\n        buffer[index + 1] = (codeSize >> 8) & 0xff;\n        buffer[index + 2] = (codeSize >> 16) & 0xff;\n        buffer[index + 3] = (codeSize >> 24) & 0xff;\n        // Write end 0\n        buffer[index + 4 + codeSize - 1] = 0;\n        // Write the\n        index = index + codeSize + 4;\n        //\n        // Serialize the scope value\n        var endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined);\n        index = endIndex - 1;\n        // Writ the total\n        var totalSize = endIndex - startIndex;\n        // Write the total size of the object\n        buffer[startIndex++] = totalSize & 0xff;\n        buffer[startIndex++] = (totalSize >> 8) & 0xff;\n        buffer[startIndex++] = (totalSize >> 16) & 0xff;\n        buffer[startIndex++] = (totalSize >> 24) & 0xff;\n        // Write trailing zero\n        buffer[index++] = 0;\n    }\n    else {\n        buffer[index++] = BSON_DATA_CODE;\n        // Number of written bytes\n        var numberOfWrittenBytes = !isArray\n            ? buffer.write(key, index, undefined, 'utf8')\n            : buffer.write(key, index, undefined, 'ascii');\n        // Encode the name\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        // Function string\n        var functionString = value.code.toString();\n        // Write the string\n        var size = buffer.write(functionString, index + 4, undefined, 'utf8') + 1;\n        // Write the size of the string to buffer\n        buffer[index] = size & 0xff;\n        buffer[index + 1] = (size >> 8) & 0xff;\n        buffer[index + 2] = (size >> 16) & 0xff;\n        buffer[index + 3] = (size >> 24) & 0xff;\n        // Update index\n        index = index + 4 + size - 1;\n        // Write zero\n        buffer[index++] = 0;\n    }\n    return index;\n}\nfunction serializeBinary(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = BSON_DATA_BINARY;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Extract the buffer\n    var data = value.value(true);\n    // Calculate size\n    var size = value.position;\n    // Add the deprecated 02 type 4 bytes of size to total\n    if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY)\n        size = size + 4;\n    // Write the size of the string to buffer\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    // Write the subtype to the buffer\n    buffer[index++] = value.sub_type;\n    // If we have binary type 2 the 4 first bytes are the size\n    if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n        size = size - 4;\n        buffer[index++] = size & 0xff;\n        buffer[index++] = (size >> 8) & 0xff;\n        buffer[index++] = (size >> 16) & 0xff;\n        buffer[index++] = (size >> 24) & 0xff;\n    }\n    // Write the data to the object\n    buffer.set(data, index);\n    // Adjust the index\n    index = index + value.position;\n    return index;\n}\nfunction serializeSymbol(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = BSON_DATA_SYMBOL;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the string\n    var size = buffer.write(value.value, index + 4, undefined, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeDBRef(buffer, key, value, index, depth, serializeFunctions, isArray) {\n    // Write the type\n    buffer[index++] = BSON_DATA_OBJECT;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    var startIndex = index;\n    var output = {\n        $ref: value.collection || value.namespace,\n        $id: value.oid\n    };\n    if (value.db != null) {\n        output.$db = value.db;\n    }\n    output = Object.assign(output, value.fields);\n    var endIndex = serializeInto(buffer, output, false, index, depth + 1, serializeFunctions);\n    // Calculate object size\n    var size = endIndex - startIndex;\n    // Write the size\n    buffer[startIndex++] = size & 0xff;\n    buffer[startIndex++] = (size >> 8) & 0xff;\n    buffer[startIndex++] = (size >> 16) & 0xff;\n    buffer[startIndex++] = (size >> 24) & 0xff;\n    // Set index\n    return endIndex;\n}\nfunction serializeInto(buffer, object, checkKeys, startingIndex, depth, serializeFunctions, ignoreUndefined, path) {\n    if (checkKeys === void 0) { checkKeys = false; }\n    if (startingIndex === void 0) { startingIndex = 0; }\n    if (depth === void 0) { depth = 0; }\n    if (serializeFunctions === void 0) { serializeFunctions = false; }\n    if (ignoreUndefined === void 0) { ignoreUndefined = true; }\n    if (path === void 0) { path = []; }\n    startingIndex = startingIndex || 0;\n    path = path || [];\n    // Push the object to the path\n    path.push(object);\n    // Start place to serialize into\n    var index = startingIndex + 4;\n    // Special case isArray\n    if (Array.isArray(object)) {\n        // Get object keys\n        for (var i = 0; i < object.length; i++) {\n            var key = '' + i;\n            var value = object[i];\n            // Is there an override value\n            if (typeof (value === null || value === void 0 ? void 0 : value.toBSON) === 'function') {\n                value = value.toBSON();\n            }\n            if (typeof value === 'string') {\n                index = serializeString(buffer, key, value, index, true);\n            }\n            else if (typeof value === 'number') {\n                index = serializeNumber(buffer, key, value, index, true);\n            }\n            else if (typeof value === 'bigint') {\n                throw new BSONTypeError('Unsupported type BigInt, please use Decimal128');\n            }\n            else if (typeof value === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index, true);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                index = serializeDate(buffer, key, value, index, true);\n            }\n            else if (value === undefined) {\n                index = serializeNull(buffer, key, value, index, true);\n            }\n            else if (value === null) {\n                index = serializeNull(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n                index = serializeObjectId(buffer, key, value, index, true);\n            }\n            else if (isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index, true);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index, true);\n            }\n            else if (typeof value === 'object' && value['_bsontype'] == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true, path);\n            }\n            else if (typeof value === 'object' &&\n                isBSONType(value) &&\n                value._bsontype === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'Double') {\n                index = serializeDouble(buffer, key, value, index, true);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index, checkKeys, depth, true);\n            }\n            else if (value['_bsontype'] === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true);\n            }\n            else if (value['_bsontype'] === 'Binary') {\n                index = serializeBinary(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'Symbol') {\n                index = serializeSymbol(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, true);\n            }\n            else if (value['_bsontype'] === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'Int32') {\n                index = serializeInt32(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index, true);\n            }\n            else if (typeof value['_bsontype'] !== 'undefined') {\n                throw new BSONTypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n            }\n        }\n    }\n    else if (object instanceof bsonMap || isMap(object)) {\n        var iterator = object.entries();\n        var done = false;\n        while (!done) {\n            // Unpack the next entry\n            var entry = iterator.next();\n            done = !!entry.done;\n            // Are we done, then skip and terminate\n            if (done)\n                continue;\n            // Get the entry values\n            var key = entry.value[0];\n            var value = entry.value[1];\n            // Check the type of the value\n            var type = typeof value;\n            // Check the key and throw error if it's illegal\n            if (typeof key === 'string' && !ignoreKeys.has(key)) {\n                if (key.match(regexp) != null) {\n                    // The BSON spec doesn't allow keys with null bytes because keys are\n                    // null-terminated.\n                    throw Error('key ' + key + ' must not contain null bytes');\n                }\n                if (checkKeys) {\n                    if ('$' === key[0]) {\n                        throw Error('key ' + key + \" must not start with '$'\");\n                    }\n                    else if (~key.indexOf('.')) {\n                        throw Error('key ' + key + \" must not contain '.'\");\n                    }\n                }\n            }\n            if (type === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (type === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (type === 'bigint' || isBigInt64Array(value) || isBigUInt64Array(value)) {\n                throw new BSONTypeError('Unsupported type BigInt, please use Decimal128');\n            }\n            else if (type === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === null || (value === undefined && ignoreUndefined === false)) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (type === 'object' && value['_bsontype'] == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);\n            }\n            else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n            }\n            else if (value['_bsontype'] === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Symbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n            }\n            else if (value['_bsontype'] === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value['_bsontype'] !== 'undefined') {\n                throw new BSONTypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n            }\n        }\n    }\n    else {\n        if (typeof (object === null || object === void 0 ? void 0 : object.toBSON) === 'function') {\n            // Provided a custom serialization method\n            object = object.toBSON();\n            if (object != null && typeof object !== 'object') {\n                throw new BSONTypeError('toBSON function did not return an object');\n            }\n        }\n        // Iterate over all the keys\n        for (var key in object) {\n            var value = object[key];\n            // Is there an override value\n            if (typeof (value === null || value === void 0 ? void 0 : value.toBSON) === 'function') {\n                value = value.toBSON();\n            }\n            // Check the type of the value\n            var type = typeof value;\n            // Check the key and throw error if it's illegal\n            if (typeof key === 'string' && !ignoreKeys.has(key)) {\n                if (key.match(regexp) != null) {\n                    // The BSON spec doesn't allow keys with null bytes because keys are\n                    // null-terminated.\n                    throw Error('key ' + key + ' must not contain null bytes');\n                }\n                if (checkKeys) {\n                    if ('$' === key[0]) {\n                        throw Error('key ' + key + \" must not start with '$'\");\n                    }\n                    else if (~key.indexOf('.')) {\n                        throw Error('key ' + key + \" must not contain '.'\");\n                    }\n                }\n            }\n            if (type === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (type === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (type === 'bigint') {\n                throw new BSONTypeError('Unsupported type BigInt, please use Decimal128');\n            }\n            else if (type === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === undefined) {\n                if (ignoreUndefined === false)\n                    index = serializeNull(buffer, key, value, index);\n            }\n            else if (value === null) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (type === 'object' && value['_bsontype'] == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);\n            }\n            else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n            }\n            else if (value['_bsontype'] === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Symbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n            }\n            else if (value['_bsontype'] === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value['_bsontype'] !== 'undefined') {\n                throw new BSONTypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n            }\n        }\n    }\n    // Remove the path\n    path.pop();\n    // Final padding byte for object\n    buffer[index++] = 0x00;\n    // Final size\n    var size = index - startingIndex;\n    // Write the size of the object\n    buffer[startingIndex++] = size & 0xff;\n    buffer[startingIndex++] = (size >> 8) & 0xff;\n    buffer[startingIndex++] = (size >> 16) & 0xff;\n    buffer[startingIndex++] = (size >> 24) & 0xff;\n    return index;\n}\n\n/** @internal */\n// Default Max Size\nvar MAXSIZE = 1024 * 1024 * 17;\n// Current Internal Temporary Serialization Buffer\nvar buffer = buffer_1.alloc(MAXSIZE);\n/**\n * Sets the size of the internal serialization buffer.\n *\n * @param size - The desired size for the internal serialization buffer\n * @public\n */\nfunction setInternalBufferSize(size) {\n    // Resize the internal serialization buffer if needed\n    if (buffer.length < size) {\n        buffer = buffer_1.alloc(size);\n    }\n}\n/**\n * Serialize a Javascript object.\n *\n * @param object - the Javascript object to serialize.\n * @returns Buffer object containing the serialized object.\n * @public\n */\nfunction serialize(object, options) {\n    if (options === void 0) { options = {}; }\n    // Unpack the options\n    var checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    var serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    var ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    var minInternalBufferSize = typeof options.minInternalBufferSize === 'number' ? options.minInternalBufferSize : MAXSIZE;\n    // Resize the internal serialization buffer if needed\n    if (buffer.length < minInternalBufferSize) {\n        buffer = buffer_1.alloc(minInternalBufferSize);\n    }\n    // Attempt to serialize\n    var serializationIndex = serializeInto(buffer, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, []);\n    // Create the final buffer\n    var finishedBuffer = buffer_1.alloc(serializationIndex);\n    // Copy into the finished buffer\n    buffer.copy(finishedBuffer, 0, 0, finishedBuffer.length);\n    // Return the buffer\n    return finishedBuffer;\n}\n/**\n * Serialize a Javascript object using a predefined Buffer and index into the buffer,\n * useful when pre-allocating the space for serialization.\n *\n * @param object - the Javascript object to serialize.\n * @param finalBuffer - the Buffer you pre-allocated to store the serialized BSON object.\n * @returns the index pointing to the last written byte in the buffer.\n * @public\n */\nfunction serializeWithBufferAndIndex(object, finalBuffer, options) {\n    if (options === void 0) { options = {}; }\n    // Unpack the options\n    var checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    var serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    var ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    var startIndex = typeof options.index === 'number' ? options.index : 0;\n    // Attempt to serialize\n    var serializationIndex = serializeInto(buffer, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined);\n    buffer.copy(finalBuffer, startIndex, 0, serializationIndex);\n    // Return the index\n    return startIndex + serializationIndex - 1;\n}\n/**\n * Deserialize data as BSON.\n *\n * @param buffer - the buffer containing the serialized set of BSON documents.\n * @returns returns the deserialized Javascript Object.\n * @public\n */\nfunction deserialize(buffer, options) {\n    if (options === void 0) { options = {}; }\n    return deserialize$1(buffer instanceof buffer_1 ? buffer : ensureBuffer(buffer), options);\n}\n/**\n * Calculate the bson size for a passed in Javascript object.\n *\n * @param object - the Javascript object to calculate the BSON byte size for\n * @returns size of BSON object in bytes\n * @public\n */\nfunction calculateObjectSize(object, options) {\n    if (options === void 0) { options = {}; }\n    options = options || {};\n    var serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    var ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    return calculateObjectSize$1(object, serializeFunctions, ignoreUndefined);\n}\n/**\n * Deserialize stream data as BSON documents.\n *\n * @param data - the buffer containing the serialized set of BSON documents.\n * @param startIndex - the start index in the data Buffer where the deserialization is to start.\n * @param numberOfDocuments - number of documents to deserialize.\n * @param documents - an array where to store the deserialized documents.\n * @param docStartIndex - the index in the documents array from where to start inserting documents.\n * @param options - additional options used for the deserialization.\n * @returns next index in the buffer after deserialization **x** numbers of documents.\n * @public\n */\nfunction deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {\n    var internalOptions = Object.assign({ allowObjectSmallerThanBufferSize: true, index: 0 }, options);\n    var bufferData = ensureBuffer(data);\n    var index = startIndex;\n    // Loop over all documents\n    for (var i = 0; i < numberOfDocuments; i++) {\n        // Find size of the document\n        var size = bufferData[index] |\n            (bufferData[index + 1] << 8) |\n            (bufferData[index + 2] << 16) |\n            (bufferData[index + 3] << 24);\n        // Update options with index\n        internalOptions.index = index;\n        // Parse the document at this point\n        documents[docStartIndex + i] = deserialize$1(bufferData, internalOptions);\n        // Adjust index by the document size\n        index = index + size;\n    }\n    // Return object containing end index of parsing and list of documents\n    return index;\n}\n/**\n * BSON default export\n * @deprecated Please use named exports\n * @privateRemarks\n * We want to someday deprecate the default export,\n * so none of the new TS types are being exported on the default\n * @public\n */\nvar BSON = {\n    Binary: Binary,\n    Code: Code,\n    DBRef: DBRef,\n    Decimal128: Decimal128,\n    Double: Double,\n    Int32: Int32,\n    Long: Long,\n    UUID: UUID,\n    Map: bsonMap,\n    MaxKey: MaxKey,\n    MinKey: MinKey,\n    ObjectId: ObjectId,\n    ObjectID: ObjectId,\n    BSONRegExp: BSONRegExp,\n    BSONSymbol: BSONSymbol,\n    Timestamp: Timestamp,\n    EJSON: EJSON,\n    setInternalBufferSize: setInternalBufferSize,\n    serialize: serialize,\n    serializeWithBufferAndIndex: serializeWithBufferAndIndex,\n    deserialize: deserialize,\n    calculateObjectSize: calculateObjectSize,\n    deserializeStream: deserializeStream,\n    BSONError: BSONError,\n    BSONTypeError: BSONTypeError\n};\n\nexport default BSON;\nexport { BSONError, BSONRegExp, BSONSymbol, BSONTypeError, BSON_BINARY_SUBTYPE_BYTE_ARRAY, BSON_BINARY_SUBTYPE_COLUMN, BSON_BINARY_SUBTYPE_DEFAULT, BSON_BINARY_SUBTYPE_ENCRYPTED, BSON_BINARY_SUBTYPE_FUNCTION, BSON_BINARY_SUBTYPE_MD5, BSON_BINARY_SUBTYPE_USER_DEFINED, BSON_BINARY_SUBTYPE_UUID, BSON_BINARY_SUBTYPE_UUID_NEW, BSON_DATA_ARRAY, BSON_DATA_BINARY, BSON_DATA_BOOLEAN, BSON_DATA_CODE, BSON_DATA_CODE_W_SCOPE, BSON_DATA_DATE, BSON_DATA_DBPOINTER, BSON_DATA_DECIMAL128, BSON_DATA_INT, BSON_DATA_LONG, BSON_DATA_MAX_KEY, BSON_DATA_MIN_KEY, BSON_DATA_NULL, BSON_DATA_NUMBER, BSON_DATA_OBJECT, BSON_DATA_OID, BSON_DATA_REGEXP, BSON_DATA_STRING, BSON_DATA_SYMBOL, BSON_DATA_TIMESTAMP, BSON_DATA_UNDEFINED, BSON_INT32_MAX, BSON_INT32_MIN, BSON_INT64_MAX, BSON_INT64_MIN, Binary, Code, DBRef, Decimal128, Double, EJSON, Int32, Long, LongWithoutOverridesClass, bsonMap as Map, MaxKey, MinKey, ObjectId as ObjectID, ObjectId, Timestamp, UUID, calculateObjectSize, deserialize, deserializeStream, serialize, serializeWithBufferAndIndex, setInternalBufferSize };\n//# sourceMappingURL=bson.browser.esm.js.map\n","import { EJSON, ObjectId } from 'bson';\nimport * as bson from 'bson';\nexport { bson as BSON };\n\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nfunction detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nfunction parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nfunction detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nfunction getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nclass DefaultNetworkTransport {\n    constructor() {\n        if (!DefaultNetworkTransport.fetch) {\n            throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n        }\n        if (!DefaultNetworkTransport.AbortController) {\n            throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n        }\n    }\n    fetchWithCallbacks(request, handler) {\n        // tslint:disable-next-line: no-console\n        this.fetch(request)\n            .then(async (response) => {\n            const decodedBody = await response.text();\n            // Pull out the headers of the response\n            const responseHeaders = {};\n            response.headers.forEach((value, key) => {\n                responseHeaders[key] = value;\n            });\n            return {\n                statusCode: response.status,\n                headers: responseHeaders,\n                body: decodedBody,\n            };\n        })\n            .then((r) => handler.onSuccess(r))\n            .catch((e) => handler.onError(e));\n    }\n    async fetch(request) {\n        const { timeoutMs, url, ...rest } = request;\n        const { signal, cancelTimeout } = this.createTimeoutSignal(timeoutMs);\n        try {\n            // We'll await the response to catch throw our own error\n            return await DefaultNetworkTransport.fetch(url, {\n                ...DefaultNetworkTransport.extraFetchOptions,\n                signal,\n                ...rest,\n            });\n        }\n        finally {\n            // Whatever happens, cancel any timeout\n            cancelTimeout();\n        }\n    }\n    createTimeoutSignal(timeoutMs) {\n        if (typeof timeoutMs === \"number\") {\n            const controller = new DefaultNetworkTransport.AbortController();\n            // Call abort after a specific number of milliseconds\n            const timeout = setTimeout(() => {\n                controller.abort();\n            }, timeoutMs);\n            return {\n                signal: controller.signal,\n                cancelTimeout: () => {\n                    clearTimeout(timeout);\n                },\n            };\n        }\n        else {\n            return {\n                signal: undefined,\n                cancelTimeout: () => {\n                    /* No-op */\n                },\n            };\n        }\n    }\n}\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n    \"Content-Type\": \"application/json\",\n};\n\n////////////////////////////////////////////////////////////////////////////\nDefaultNetworkTransport.fetch = globalThis.fetch.bind(globalThis);\nDefaultNetworkTransport.AbortController = globalThis.AbortController;\n\n/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n\n////////////////////////////////////////////////////////////////////////////\nconst SERIALIZATION_OPTIONS = {\n    relaxed: false, // Ensure Canonical mode\n};\n/**\n * Serialize an object containing BSON types into extended-JSON.\n *\n * @param obj The object containing BSON types.\n * @returns The document in extended-JSON format.\n */\nfunction serialize(obj) {\n    return EJSON.serialize(obj, SERIALIZATION_OPTIONS);\n}\n/**\n * De-serialize an object or an array of object from extended-JSON into an object or an array of object with BSON types.\n *\n * @param obj The object or array of objects in extended-JSON format.\n * @returns The object or array of objects with inflated BSON types.\n */\nfunction deserialize(obj) {\n    if (Array.isArray(obj)) {\n        return obj.map((doc) => EJSON.deserialize(doc));\n    }\n    else {\n        return EJSON.deserialize(obj);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * The type of a user.\n */\nvar UserType;\n(function (UserType) {\n    /**\n     * A normal end-user created this user.\n     */\n    UserType[\"Normal\"] = \"normal\";\n    /**\n     * The user was created by the server.\n     */\n    UserType[\"Server\"] = \"server\";\n})(UserType || (UserType = {}));\n/** @ignore */\nvar DataKey;\n(function (DataKey) {\n    /** @ignore */\n    DataKey[\"NAME\"] = \"name\";\n    /** @ignore */\n    DataKey[\"EMAIL\"] = \"email\";\n    /** @ignore */\n    DataKey[\"PICTURE\"] = \"picture\";\n    /** @ignore */\n    DataKey[\"FIRST_NAME\"] = \"first_name\";\n    /** @ignore */\n    DataKey[\"LAST_NAME\"] = \"last_name\";\n    /** @ignore */\n    DataKey[\"GENDER\"] = \"gender\";\n    /** @ignore */\n    DataKey[\"BIRTHDAY\"] = \"birthday\";\n    /** @ignore */\n    DataKey[\"MIN_AGE\"] = \"min_age\";\n    /** @ignore */\n    DataKey[\"MAX_AGE\"] = \"max_age\";\n})(DataKey || (DataKey = {}));\nconst DATA_MAPPING = {\n    [DataKey.NAME]: \"name\",\n    [DataKey.EMAIL]: \"email\",\n    [DataKey.PICTURE]: \"pictureUrl\",\n    [DataKey.FIRST_NAME]: \"firstName\",\n    [DataKey.LAST_NAME]: \"lastName\",\n    [DataKey.GENDER]: \"gender\",\n    [DataKey.BIRTHDAY]: \"birthday\",\n    [DataKey.MIN_AGE]: \"minAge\",\n    [DataKey.MAX_AGE]: \"maxAge\",\n};\n/** @inheritdoc */\nclass UserProfile {\n    /**\n     * @param response The response of a call fetching the users profile.\n     */\n    constructor(response) {\n        /** @ignore */\n        this.type = UserType.Normal;\n        /** @ignore */\n        this.identities = [];\n        if (typeof response === \"object\" && response !== null) {\n            const { type, identities, data } = response;\n            if (typeof type === \"string\") {\n                this.type = type;\n            }\n            else {\n                throw new Error(\"Expected 'type' in the response body\");\n            }\n            if (Array.isArray(identities)) {\n                this.identities = identities.map((identity) => {\n                    const { id, provider_type: providerType } = identity;\n                    return { id, providerType };\n                });\n            }\n            else {\n                throw new Error(\"Expected 'identities' in the response body\");\n            }\n            if (typeof data === \"object\" && data !== null) {\n                const mappedData = Object.fromEntries(Object.entries(data).map(([key, value]) => {\n                    if (key in DATA_MAPPING) {\n                        // Translate any known data field to its JS idiomatic alias\n                        return [DATA_MAPPING[key], value];\n                    }\n                    else {\n                        // Pass through any other values\n                        return [key, value];\n                    }\n                }));\n                // We can use `any` since we trust the user supplies the correct type\n                this.data = deserialize(mappedData);\n            }\n            else {\n                throw new Error(\"Expected 'data' in the response body\");\n            }\n        }\n        else {\n            this.data = {};\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * A `Storage` which will prefix a key part to every operation.\n */\nclass PrefixedStorage {\n    /**\n     * Construct a `Storage` which will prefix a key part to every operation.\n     *\n     * @param storage The underlying storage to use for operations.\n     * @param keyPart The part of the key to prefix when performing operations.\n     */\n    constructor(storage, keyPart) {\n        this.storage = storage;\n        this.keyPart = keyPart;\n    }\n    /** @inheritdoc */\n    get(key) {\n        return this.storage.get(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        return this.storage.set(this.keyPart + PrefixedStorage.PART_SEPARATOR + key, value);\n    }\n    /** @inheritdoc */\n    remove(key) {\n        return this.storage.remove(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix = \"\") {\n        return this.storage.clear(this.keyPart + PrefixedStorage.PART_SEPARATOR + prefix);\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        return this.storage.addListener(listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        return this.storage.addListener(listener);\n    }\n}\n/**\n * The string separating two parts.\n */\nPrefixedStorage.PART_SEPARATOR = \":\";\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * In-memory storage that will not be persisted.\n */\nclass MemoryStorage {\n    constructor() {\n        /**\n         * Internal state of the storage.\n         */\n        this.storage = {};\n        /**\n         * A set of listners.\n         */\n        this.listeners = new Set();\n    }\n    /** @inheritdoc */\n    get(key) {\n        if (key in this.storage) {\n            return this.storage[key];\n        }\n        else {\n            return null;\n        }\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        this.storage[key] = value;\n        // Fire the listeners\n        this.fireListeners();\n    }\n    /** @inheritdoc */\n    remove(key) {\n        delete this.storage[key];\n        // Fire the listeners\n        this.fireListeners();\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix) {\n        // Iterate all keys and delete their values if they have a matching prefix\n        for (const key of Object.keys(this.storage)) {\n            if (!prefix || key.startsWith(prefix)) {\n                delete this.storage[key];\n            }\n        }\n        // Fire the listeners\n        this.fireListeners();\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        this.listeners.add(listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        this.listeners.delete(listener);\n    }\n    /**\n     * Tell the listeners that a change occurred.\n     */\n    fireListeners() {\n        this.listeners.forEach((listener) => listener());\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst ACCESS_TOKEN_STORAGE_KEY = \"accessToken\";\nconst REFRESH_TOKEN_STORAGE_KEY = \"refreshToken\";\nconst PROFILE_STORAGE_KEY = \"profile\";\nconst PROVIDER_TYPE_STORAGE_KEY = \"providerType\";\n/**\n * Storage specific to the app.\n */\nclass UserStorage extends PrefixedStorage {\n    /**\n     * Construct a storage for a `User`.\n     *\n     * @param storage The underlying storage to wrap.\n     * @param userId The id of the user.\n     */\n    constructor(storage, userId) {\n        super(storage, `user(${userId})`);\n    }\n    /**\n     * Get the access token from storage.\n     *\n     * @returns Access token (null if unknown).\n     */\n    get accessToken() {\n        return this.get(ACCESS_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the access token in storage.\n     *\n     * @param value Access token (null if unknown).\n     */\n    set accessToken(value) {\n        if (value === null) {\n            this.remove(ACCESS_TOKEN_STORAGE_KEY);\n        }\n        else {\n            this.set(ACCESS_TOKEN_STORAGE_KEY, value);\n        }\n    }\n    /**\n     * Get the refresh token from storage.\n     *\n     * @returns Refresh token (null if unknown and user is logged out).\n     */\n    get refreshToken() {\n        return this.get(REFRESH_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the refresh token in storage.\n     *\n     * @param value Refresh token (null if unknown and user is logged out).\n     */\n    set refreshToken(value) {\n        if (value === null) {\n            this.remove(REFRESH_TOKEN_STORAGE_KEY);\n        }\n        else {\n            this.set(REFRESH_TOKEN_STORAGE_KEY, value);\n        }\n    }\n    /**\n     * Get the user profile from storage.\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n    get profile() {\n        const value = this.get(PROFILE_STORAGE_KEY);\n        if (value) {\n            const profile = new UserProfile();\n            // Patch in the values\n            Object.assign(profile, JSON.parse(value));\n            return profile;\n        }\n    }\n    /**\n     * Set the user profile in storage.\n     *\n     * @param value User profile (undefined if its unknown).\n     */\n    set profile(value) {\n        if (value) {\n            this.set(PROFILE_STORAGE_KEY, JSON.stringify(value));\n        }\n        else {\n            this.remove(PROFILE_STORAGE_KEY);\n        }\n    }\n    /**\n     * Get the type of authentication provider used to authenticate\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n    get providerType() {\n        const value = this.get(PROVIDER_TYPE_STORAGE_KEY);\n        if (value) {\n            return value;\n        }\n    }\n    /**\n     * Set the type of authentication provider used to authenticate\n     *\n     * @param value Type of authentication provider.\n     */\n    set providerType(value) {\n        if (value) {\n            this.set(PROVIDER_TYPE_STORAGE_KEY, value);\n        }\n        else {\n            this.remove(PROVIDER_TYPE_STORAGE_KEY);\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @param obj The object to remove keys (and undefined values from)\n * @returns A new object without the keys where the value is undefined.\n */\nfunction removeKeysWithUndefinedValues(obj) {\n    return Object.fromEntries(Object.entries(obj).filter((entry) => typeof entry[1] !== \"undefined\"));\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Generate a random sequence of characters.\n *\n * @param length The length of the string.\n * @param alphabet The alphabet of characters to pick from.\n * @returns A string of characters picked randomly from `alphabet`.\n */\nfunction generateRandomString(length, alphabet) {\n    let result = \"\";\n    for (let i = 0; i < length; i++) {\n        result += alphabet[Math.floor(Math.random() * alphabet.length)];\n    }\n    return result;\n}\n/**\n * Encode an object mapping from string to string, into a query string to be appended a URL.\n *\n * @param params The parameters to include in the string.\n * @param prefixed Should the \"?\" prefix be added if values exists?\n * @returns A URL encoded representation of the parameters (omitting a \"?\" prefix).\n */\nfunction encodeQueryString(params, prefixed = true) {\n    // Filter out undefined values\n    const cleanedParams = removeKeysWithUndefinedValues(params);\n    // Determine if a prefixed \"?\" is appropreate\n    const prefix = prefixed && Object.keys(cleanedParams).length > 0 ? \"?\" : \"\";\n    // Transform keys and values to a query string\n    return (prefix +\n        Object.entries(cleanedParams)\n            .map(([k, v]) => `${k}=${encodeURIComponent(v)}`)\n            .join(\"&\"));\n}\n/**\n * Decodes a query string into an object.\n *\n * @param str The query string to decode.\n * @returns The decoded query string.\n */\nfunction decodeQueryString(str) {\n    const cleanStr = str[0] === \"?\" ? str.substr(1) : str;\n    return Object.fromEntries(cleanStr\n        .split(\"&\")\n        .filter((s) => s.length > 0)\n        .map((kvp) => kvp.split(\"=\"))\n        .map(([k, v]) => [k, decodeURIComponent(v)]));\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A list of names that functions cannot have to be callable through the functions proxy.\n */\nconst RESERVED_NAMES = [\n    \"inspect\",\n    \"callFunction\",\n    \"callFunctionStreaming\",\n    // Methods defined on the Object.prototype might be \"typeof probed\" and called by libraries and runtime environments.\n    ...Object.getOwnPropertyNames(Object.prototype),\n];\n/**\n * Remove the key for any fields with undefined values.\n *\n * @param args The arguments to clean.\n * @returns The cleaned arguments.\n */\nfunction cleanArgs(args) {\n    for (const arg of args) {\n        if (typeof arg === \"object\" && arg) {\n            for (const [key, value] of Object.entries(arg)) {\n                if (value === undefined) {\n                    delete arg[key];\n                }\n            }\n        }\n    }\n    return args;\n}\n/**\n * Remove keys for any undefined values and serialize to EJSON.\n *\n * @param args The arguments to clean and serialize.\n * @returns The cleaned and serialized arguments.\n */\nfunction cleanArgsAndSerialize(args) {\n    const cleaned = cleanArgs(args);\n    return cleaned.map((arg) => (typeof arg === \"object\" ? serialize(arg) : arg));\n}\n/**\n * Defines how functions are called.\n */\nclass FunctionsFactory {\n    /**\n     * @param fetcher The underlying fetcher to use when sending requests.\n     * @param config Additional configuration parameters.\n     */\n    constructor(fetcher, config = {}) {\n        this.fetcher = fetcher;\n        this.serviceName = config.serviceName;\n        this.argsTransformation = config.argsTransformation || cleanArgsAndSerialize;\n    }\n    /**\n     * Create a factory of functions, wrapped in a Proxy that returns bound copies of `callFunction` on any property.\n     *\n     * @param fetcher The underlying fetcher to use when requesting.\n     * @param config Additional configuration parameters.\n     * @returns The newly created factory of functions.\n     */\n    static create(fetcher, config = {}) {\n        // Create a proxy, wrapping a simple object returning methods that calls functions\n        // TODO: Lazily fetch available functions and return these from the ownKeys() trap\n        const factory = new FunctionsFactory(fetcher, config);\n        // Wrap the factory in a proxy that calls the internal call method\n        return new Proxy(factory, {\n            get(target, p, receiver) {\n                if (typeof p === \"string\" && RESERVED_NAMES.indexOf(p) === -1) {\n                    return target.callFunction.bind(target, p);\n                }\n                else {\n                    const prop = Reflect.get(target, p, receiver);\n                    return typeof prop === \"function\" ? prop.bind(target) : prop;\n                }\n            },\n        });\n    }\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    async callFunction(name, ...args) {\n        // See https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/sdk/src/services/internal/CoreStitchServiceClientImpl.ts\n        const body = {\n            name,\n            arguments: this.argsTransformation ? this.argsTransformation(args) : args,\n        };\n        if (this.serviceName) {\n            body.service = this.serviceName;\n        }\n        const appRoute = this.fetcher.appRoute;\n        return this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.functionsCall().path,\n            body,\n        });\n    }\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    callFunctionStreaming(name, ...args) {\n        const body = {\n            name,\n            arguments: this.argsTransformation ? this.argsTransformation(args) : args,\n        };\n        if (this.serviceName) {\n            body.service = this.serviceName;\n        }\n        const appRoute = this.fetcher.appRoute;\n        const qs = encodeQueryString({\n            [\"baas_request\"]: gBase64.encode(JSON.stringify(body)),\n        });\n        return this.fetcher.fetchStream({\n            method: \"GET\",\n            path: appRoute.functionsCall().path + qs,\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2021 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * Check whether the user's app is running in \"development mode\" (e.g. `npm run dev`\n * for a React app, or `NODE_ENV=development` for a Node app). Each platform's entry\n * point should define the value of this using `setIsDevelopmentMode`.\n * The default behaviour is to always return `false`.\n *\n * @returns true if the user's app is running in development mode, false otherwise\n */\nlet isDevelopmentMode = false;\n/**\n * Set the value of `isDevelopmentMode`. This allows each entry point (node vs DOM)\n * to use its own method for determining whether we are in development mode.\n *\n * @param state A boolean indicating whether the user's app is running in\n * development mode or not.\n */\nconst setIsDevelopmentMode = (state) => {\n    isDevelopmentMode = state;\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Display a deprecation warning for features being removed in the next major version\n * to users in development mode (as best as we can detect this, see `isDevelopmentMode`)\n *\n * @param deprecatedItem The method signature or name of the deprecated item\n * @param suggestedReplacement The method signature or name of the suggested replacement\n */\nconst deprecationWarning = (deprecatedItem, suggestedReplacement) => {\n    if (!isDevelopmentMode)\n        return;\n    console.warn(`Deprecation warning from Realm: ${deprecatedItem} is deprecated and will be removed in a future major release. Consider switching to ${suggestedReplacement}.`);\n};\n/**\n * Helper function for migrating from positional arguments to a single dictionary argument.\n * Check the arguments passed to a function, if the first argument is not an object (i.e. it\n * is presumed to be a deprecated positional-style call), shows a deprecation warning and\n * converts the positional arguments into an object matching the expected \"new\" shape.\n *\n * @param args Array of arguments passed to the function (captured with `...args`).\n * @param methodName The name of the method, used to show the deprecation warning.\n * @param argNames The list of positional argument names, used to covert them into\n * an object if a deprecated call is made and to show the deprecation warning.\n * @param hasRestArgs Optional flag indicating that the function's final argument is\n * `...args` (to capture any extra arguments), in which case we capture them and return\n * as the second element of the return array.\n *\n * @returns An object containing:\n *\n * argsObject: a dictionary of function arguments, either passed through from args[0] if\n * args[0] is an object, or created from `args` and `argNames` if the args are a\n * deprecated positional argument call.\n *\n * restArgs: an array of the \"...args\" passed to the function if `hasRestArgs` is true;\n * otherwise it is `undefined`.\n */\n// Allow use of `object` type\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst handleDeprecatedPositionalArgs = (args, methodName, argNames, hasRestArgs) => {\n    if (typeof args[0] !== \"object\") {\n        const restArgsText = hasRestArgs ? \", ...args\" : \"\";\n        deprecationWarning(`${methodName}(${argNames.join(\", \")}${restArgsText})`, `${methodName}({ ${argNames.join(\", \")} }${restArgsText})`);\n        // Convert the array of arguments into a dictionary keyed by the relevant argName\n        const argsObject = argNames.reduce((prev, argName, index) => {\n            return { ...prev, [argName]: args[index] };\n        }, {});\n        const restArgs = hasRestArgs ? args.slice(argNames.length) : undefined;\n        return { argsObject, restArgs };\n    }\n    return { argsObject: args[0], restArgs: hasRestArgs ? args.slice(1) : undefined };\n};\n\n////////////////////////////////////////////////////////////////////////////\n// React/React Native set a global __DEV__ variable when running in dev mode\nsetIsDevelopmentMode(typeof __DEV__ !== \"undefined\" && __DEV__);\n\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass EmailPasswordAuth {\n    /**\n     * Construct an interface to the email / password authentication provider.\n     *\n     * @param fetcher The underlying fetcher used to request the services.\n     * @param providerName Optional custom name of the authentication provider.\n     */\n    constructor(fetcher, providerName = \"local-userpass\") {\n        this.fetcher = fetcher;\n        this.providerName = providerName;\n    }\n    async registerUser(...args) {\n        const { argsObject: userDetails } = handleDeprecatedPositionalArgs(args, \"registerUser\", [\"email\", \"password\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).register().path,\n            body: userDetails,\n        });\n    }\n    async confirmUser(...args) {\n        const { argsObject: tokenDetails } = handleDeprecatedPositionalArgs(args, \"confirmUser\", [\"token\", \"tokenId\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirm().path,\n            body: tokenDetails,\n        });\n    }\n    async resendConfirmationEmail(...args) {\n        const { argsObject: emailDetails } = handleDeprecatedPositionalArgs(args, \"resendConfirmationEmail\", [\"email\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirmSend().path,\n            body: emailDetails,\n        });\n    }\n    async retryCustomConfirmation(...args) {\n        const { argsObject: emailDetails } = handleDeprecatedPositionalArgs(args, \"retryCustomConfirmation\", [\"email\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirmCall().path,\n            body: emailDetails,\n        });\n    }\n    async resetPassword(...args) {\n        const { argsObject: resetDetails } = handleDeprecatedPositionalArgs(args, \"resetPassword\", [\"token\", \"tokenId\", \"password\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).reset().path,\n            body: resetDetails,\n        });\n    }\n    async sendResetPasswordEmail(...args) {\n        const { argsObject: emailDetails } = handleDeprecatedPositionalArgs(args, \"sendResetPasswordEmail\", [\"email\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).resetSend().path,\n            body: emailDetails,\n        });\n    }\n    async callResetPasswordFunction(...args) {\n        const { argsObject: resetDetails, restArgs, } = handleDeprecatedPositionalArgs(args, \"callResetPasswordFunction\", [\"email\", \"password\"], true);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).resetCall().path,\n            body: { ...resetDetails, arguments: restArgs },\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @returns The base api route.\n */\nfunction api() {\n    return {\n        path: \"/api/client/v2.0\",\n        /**\n         * @param appId The id of the app.\n         * @returns The URL of the app endpoint.\n         */\n        app(appId) {\n            return {\n                path: this.path + `/app/${appId}`,\n                /**\n                 * @returns The URL of the app location endpoint.\n                 */\n                location() {\n                    return {\n                        path: this.path + \"/location\",\n                    };\n                },\n                /**\n                 * @param providerName The name of the provider.\n                 * @returns The app url concatinated with the /auth/providers/{providerName}\n                 */\n                authProvider(providerName) {\n                    return {\n                        path: this.path + `/auth/providers/${providerName}`,\n                        /**\n                         * @returns Get the URL of an authentication provider.\n                         */\n                        login() {\n                            return { path: this.path + \"/login\" };\n                        },\n                    };\n                },\n                /**\n                 * @param providerName The name of the provider.\n                 * @returns The app url concatinated with the /auth/providers/{providerName}\n                 */\n                emailPasswordAuth(providerName) {\n                    const authProviderRoutes = this.authProvider(providerName);\n                    return {\n                        ...authProviderRoutes,\n                        register() {\n                            return { path: this.path + \"/register\" };\n                        },\n                        confirm() {\n                            return { path: this.path + \"/confirm\" };\n                        },\n                        confirmSend() {\n                            return { path: this.path + \"/confirm/send\" };\n                        },\n                        confirmCall() {\n                            return { path: this.path + \"/confirm/call\" };\n                        },\n                        reset() {\n                            return { path: this.path + \"/reset\" };\n                        },\n                        resetSend() {\n                            return { path: this.path + \"/reset/send\" };\n                        },\n                        resetCall() {\n                            return { path: this.path + \"/reset/call\" };\n                        },\n                    };\n                },\n                functionsCall() {\n                    return {\n                        path: this.path + \"/functions/call\",\n                    };\n                },\n            };\n        },\n        auth() {\n            return {\n                path: this.path + \"/auth\",\n                apiKeys() {\n                    return {\n                        path: this.path + \"/api_keys\",\n                        key(id) {\n                            return {\n                                path: this.path + `/${id}`,\n                                enable() {\n                                    return { path: this.path + \"/enable\" };\n                                },\n                                disable() {\n                                    return { path: this.path + \"/disable\" };\n                                },\n                            };\n                        },\n                    };\n                },\n                profile() {\n                    return { path: this.path + \"/profile\" };\n                },\n                session() {\n                    return { path: this.path + \"/session\" };\n                },\n            };\n        },\n    };\n}\nvar routes = { api };\n\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass ApiKeyAuth {\n    /**\n     * Construct an interface to the API-key authentication provider.\n     *\n     * @param fetcher The fetcher used to send requests to services.\n     */\n    constructor(fetcher) {\n        this.fetcher = fetcher;\n    }\n    /** @inheritdoc */\n    create(name) {\n        return this.fetcher.fetchJSON({\n            method: \"POST\",\n            body: { name },\n            path: routes.api().auth().apiKeys().path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    fetch(keyId) {\n        return this.fetcher.fetchJSON({\n            method: \"GET\",\n            path: routes.api().auth().apiKeys().key(keyId).path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    fetchAll() {\n        return this.fetcher.fetchJSON({\n            method: \"GET\",\n            tokenType: \"refresh\",\n            path: routes.api().auth().apiKeys().path,\n        });\n    }\n    /** @inheritdoc */\n    async delete(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"DELETE\",\n            path: routes.api().auth().apiKeys().key(keyId).path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    async enable(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"PUT\",\n            path: routes.api().auth().apiKeys().key(keyId).enable().path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    async disable(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"PUT\",\n            path: routes.api().auth().apiKeys().key(keyId).disable().path,\n            tokenType: \"refresh\",\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nlet environment = null;\n/**\n * Set the environment of execution.\n * Note: This should be called as the first thing before executing any code which calls getEnvironment()\n *\n * @param e An object containing environment specific implementations.\n */\nfunction setEnvironment(e) {\n    environment = e;\n}\n/**\n * Get the environment of execution.\n *\n * @returns An object containing environment specific implementations.\n */\nfunction getEnvironment() {\n    if (environment) {\n        return environment;\n    }\n    else {\n        throw new Error(\"Cannot get environment before it's set\");\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * An error occured during the parsing of a watch stream.\n */\nclass WatchError extends Error {\n    constructor({ message, code }) {\n        super(message);\n        /**\n         * The name of this type of error\n         */\n        this.name = \"WatchError\";\n        this.code = code;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n// NOTE: this is a fully processed event, not a single \"data: foo\" line!\n/**\n * The state of a WatchStream.\n */\nvar WatchStreamState;\n(function (WatchStreamState) {\n    /**\n     * Need to call one of the feed functions.\n     */\n    WatchStreamState[\"NEED_DATA\"] = \"NEED_DATA\";\n    /**\n     * Call nextEvent() to consume an event.\n     */\n    WatchStreamState[\"HAVE_EVENT\"] = \"HAVE_EVENT\";\n    /**\n     * Call error().\n     */\n    WatchStreamState[\"HAVE_ERROR\"] = \"HAVE_ERROR\";\n})(WatchStreamState || (WatchStreamState = {}));\n/**\n * Represents a stream of events\n */\nclass WatchStream {\n    constructor() {\n        this._state = WatchStreamState.NEED_DATA;\n        this._error = null;\n        // Used by feedBuffer to construct lines\n        this._textDecoder = new (getEnvironment().TextDecoder)();\n        this._buffer = \"\";\n        this._bufferOffset = 0;\n        // Used by feedLine for building the next SSE\n        this._eventType = \"\";\n        this._dataBuffer = \"\";\n    }\n    // Call these when you have data, in whatever shape is easiest for your SDK to get.\n    // Pick one, mixing and matching on a single instance isn't supported.\n    // These can only be called in NEED_DATA state, which is the initial state.\n    feedBuffer(buffer) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        this._buffer += this._textDecoder.decode(buffer, { stream: true });\n        this.advanceBufferState();\n    }\n    feedLine(line) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        // This is an implementation of the algorithm described at\n        // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation.\n        // Currently the server does not use id or retry lines, so that processing isn't implemented.\n        // ignore trailing LF if not removed by SDK.\n        if (line.endsWith(\"\\n\"))\n            line = line.substr(0, line.length - 1);\n        // ignore trailing CR from CRLF\n        if (line.endsWith(\"\\r\"))\n            line = line.substr(0, line.length - 1);\n        if (line.length === 0) {\n            // This is the \"dispatch the event\" portion of the algorithm.\n            if (this._dataBuffer.length === 0) {\n                this._eventType = \"\";\n                return;\n            }\n            if (this._dataBuffer.endsWith(\"\\n\"))\n                this._dataBuffer = this._dataBuffer.substr(0, this._dataBuffer.length - 1);\n            this.feedSse({\n                data: this._dataBuffer,\n                eventType: this._eventType,\n            });\n            this._dataBuffer = \"\";\n            this._eventType = \"\";\n        }\n        if (line[0] === \":\")\n            return;\n        const colon = line.indexOf(\":\");\n        const field = line.substr(0, colon);\n        let value = colon === -1 ? \"\" : line.substr(colon + 1);\n        if (value.startsWith(\" \"))\n            value = value.substr(1);\n        if (field === \"event\") {\n            this._eventType = value;\n        }\n        else if (field === \"data\") {\n            this._dataBuffer += value;\n            this._dataBuffer += \"\\n\";\n        }\n        else ;\n    }\n    feedSse(sse) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        const firstPercentIndex = sse.data.indexOf(\"%\");\n        if (firstPercentIndex !== -1) {\n            // For some reason, the stich server decided to add percent-encoding for '%', '\\n', and '\\r' to its\n            // event-stream replies. But it isn't real urlencoding, since most characters pass through, so we can't use\n            // uri_percent_decode() here.\n            let buffer = \"\";\n            let start = 0;\n            for (let percentIndex = firstPercentIndex; percentIndex !== -1; percentIndex = sse.data.indexOf(\"%\", start)) {\n                buffer += sse.data.substr(start, percentIndex - start);\n                const encoded = sse.data.substr(percentIndex, 3); // may be smaller than 3 if string ends with %\n                if (encoded === \"%25\") {\n                    buffer += \"%\";\n                }\n                else if (encoded === \"%0A\") {\n                    buffer += \"\\x0A\"; // '\\n'\n                }\n                else if (encoded === \"%0D\") {\n                    buffer += \"\\x0D\"; // '\\r'\n                }\n                else {\n                    buffer += encoded; // propagate as-is\n                }\n                start = percentIndex + encoded.length;\n            }\n            // Advance the buffer with the last part\n            buffer += sse.data.substr(start);\n            sse.data = buffer;\n        }\n        if (!sse.eventType || sse.eventType === \"message\") {\n            try {\n                const parsed = EJSON.parse(sse.data);\n                if (typeof parsed === \"object\") {\n                    // ???\n                    this._nextEvent = parsed;\n                    this._state = WatchStreamState.HAVE_EVENT;\n                    return;\n                }\n            }\n            catch {\n                // fallthrough to same handling as for non-document value.\n            }\n            this._state = WatchStreamState.HAVE_ERROR;\n            this._error = new WatchError({\n                message: \"server returned malformed event: \" + sse.data,\n                code: \"bad bson parse\",\n            });\n        }\n        else if (sse.eventType === \"error\") {\n            this._state = WatchStreamState.HAVE_ERROR;\n            // default error message if we have issues parsing the reply.\n            this._error = new WatchError({\n                message: sse.data,\n                code: \"unknown\",\n            });\n            try {\n                const { error_code: errorCode, error } = EJSON.parse(sse.data);\n                if (typeof errorCode !== \"string\")\n                    return;\n                if (typeof error !== \"string\")\n                    return;\n                // XXX in realm-js, object-store will error if the error_code is not one of the known\n                // error code enum values.\n                this._error = new WatchError({\n                    message: error,\n                    code: errorCode,\n                });\n            }\n            catch {\n                return; // Use the default state.\n            }\n        }\n        else ;\n    }\n    get state() {\n        return this._state;\n    }\n    // Consumes the returned event. If you used feedBuffer(), there may be another event or error after this one,\n    // so you need to call state() again to see what to do next.\n    nextEvent() {\n        this.assertState(WatchStreamState.HAVE_EVENT);\n        // We can use \"as ChangeEvent<T>\" since we just asserted the state.\n        const out = this._nextEvent;\n        this._state = WatchStreamState.NEED_DATA;\n        this.advanceBufferState();\n        return out;\n    }\n    // Once this enters the error state, it stays that way. You should not feed any more data.\n    get error() {\n        return this._error;\n    }\n    ////////////////////////////////////////////\n    advanceBufferState() {\n        this.assertState(WatchStreamState.NEED_DATA);\n        while (this.state === WatchStreamState.NEED_DATA) {\n            if (this._bufferOffset === this._buffer.length) {\n                this._buffer = \"\";\n                this._bufferOffset = 0;\n                return;\n            }\n            // NOTE not supporting CR-only newlines, just LF and CRLF.\n            const nextNewlineIndex = this._buffer.indexOf(\"\\n\", this._bufferOffset);\n            if (nextNewlineIndex === -1) {\n                // We have a partial line.\n                if (this._bufferOffset !== 0) {\n                    // Slide the partial line down to the front of the buffer.\n                    this._buffer = this._buffer.substr(this._bufferOffset, this._buffer.length - this._bufferOffset);\n                    this._bufferOffset = 0;\n                }\n                return;\n            }\n            this.feedLine(this._buffer.substr(this._bufferOffset, nextNewlineIndex - this._bufferOffset));\n            this._bufferOffset = nextNewlineIndex + 1; // Advance past this line, including its newline.\n        }\n    }\n    assertState(state) {\n        if (this._state !== state) {\n            throw Error(`Expected WatchStream to be in state ${state}, but in state ${this._state}`);\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A remote collection of documents.\n */\nclass MongoDBCollection {\n    /**\n     * Construct a remote collection of documents.\n     *\n     * @param fetcher The fetcher to use when requesting the service.\n     * @param serviceName The name of the remote service.\n     * @param databaseName The name of the database.\n     * @param collectionName The name of the remote collection.\n     */\n    constructor(fetcher, serviceName, databaseName, collectionName) {\n        this.functions = FunctionsFactory.create(fetcher, {\n            serviceName,\n        });\n        this.databaseName = databaseName;\n        this.collectionName = collectionName;\n        this.serviceName = serviceName;\n        this.fetcher = fetcher;\n    }\n    /** @inheritdoc */\n    find(filter = {}, options = {}) {\n        return this.functions.find({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            project: options.projection,\n            sort: options.sort,\n            limit: options.limit,\n        });\n    }\n    /** @inheritdoc */\n    findOne(filter = {}, options = {}) {\n        return this.functions.findOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            project: options.projection,\n            sort: options.sort,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndUpdate(filter = {}, update, options = {}) {\n        return this.functions.findOneAndUpdate({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter,\n            update,\n            sort: options.sort,\n            projection: options.projection,\n            upsert: options.upsert,\n            returnNewDocument: options.returnNewDocument,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndReplace(filter = {}, replacement, options = {}) {\n        return this.functions.findOneAndReplace({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter: filter,\n            update: replacement,\n            sort: options.sort,\n            projection: options.projection,\n            upsert: options.upsert,\n            returnNewDocument: options.returnNewDocument,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndDelete(filter = {}, options = {}) {\n        return this.functions.findOneAndReplace({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter,\n            sort: options.sort,\n            projection: options.projection,\n        });\n    }\n    /** @inheritdoc */\n    aggregate(pipeline) {\n        return this.functions.aggregate({\n            database: this.databaseName,\n            collection: this.collectionName,\n            pipeline,\n        });\n    }\n    /** @inheritdoc */\n    count(filter = {}, options = {}) {\n        return this.functions.count({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            limit: options.limit,\n        });\n    }\n    /** @inheritdoc */\n    insertOne(document) {\n        return this.functions.insertOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            document,\n        });\n    }\n    /** @inheritdoc */\n    insertMany(documents) {\n        return this.functions.insertMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            documents,\n        });\n    }\n    /** @inheritdoc */\n    deleteOne(filter = {}) {\n        return this.functions.deleteOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n        });\n    }\n    /** @inheritdoc */\n    deleteMany(filter = {}) {\n        return this.functions.deleteMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n        });\n    }\n    /** @inheritdoc */\n    updateOne(filter, update, options = {}) {\n        return this.functions.updateOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            update,\n            upsert: options.upsert,\n            arrayFilters: options.arrayFilters,\n        });\n    }\n    /** @inheritdoc */\n    updateMany(filter, update, options = {}) {\n        return this.functions.updateMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            update,\n            upsert: options.upsert,\n            arrayFilters: options.arrayFilters,\n        });\n    }\n    async *watch({ ids, filter, } = {}) {\n        const iterator = await this.functions.callFunctionStreaming(\"watch\", {\n            database: this.databaseName,\n            collection: this.collectionName,\n            ids,\n            filter,\n        });\n        const watchStream = new WatchStream();\n        for await (const chunk of iterator) {\n            if (!chunk)\n                continue;\n            watchStream.feedBuffer(chunk);\n            while (watchStream.state == WatchStreamState.HAVE_EVENT) {\n                yield watchStream.nextEvent();\n            }\n            if (watchStream.state == WatchStreamState.HAVE_ERROR)\n                // XXX this is just throwing an error like {error_code: \"BadRequest, error: \"message\"},\n                // which matches realm-js, but is different from how errors are handled in realm-web\n                throw watchStream.error;\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Creates an Remote MongoDB Collection.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName A service name.\n * @param databaseName A database name.\n * @param collectionName A collection name.\n * @returns The collection.\n */\nfunction createCollection(fetcher, serviceName, databaseName, collectionName) {\n    return new MongoDBCollection(fetcher, serviceName, databaseName, collectionName);\n}\n/**\n * Creates a Remote MongoDB Database.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher\n * @param serviceName A service name\n * @param databaseName A database name\n * @returns The database.\n */\nfunction createDatabase(fetcher, serviceName, databaseName) {\n    return {\n        collection: createCollection.bind(null, fetcher, serviceName, databaseName),\n    };\n}\n/**\n * Creates a Remote MongoDB Service.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName An optional service name.\n * @returns The service.\n */\nfunction createService(fetcher, serviceName = \"mongo-db\") {\n    return { db: createDatabase.bind(null, fetcher, serviceName) };\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst DEFAULT_DEVICE_ID = \"000000000000000000000000\";\n/** The state of a user within the app */\nvar UserState;\n(function (UserState) {\n    /** Active, with both access and refresh tokens */\n    UserState[\"Active\"] = \"active\";\n    /** Logged out, but there might still be data persisted about the user, in the browser. */\n    UserState[\"LoggedOut\"] = \"logged-out\";\n    /** Logged out and all data about the user has been removed. */\n    UserState[\"Removed\"] = \"removed\";\n})(UserState || (UserState = {}));\n/** The type of a user. */\nvar UserType$1;\n(function (UserType) {\n    /** Created by the user itself. */\n    UserType[\"Normal\"] = \"normal\";\n    /** Created by an administrator of the app. */\n    UserType[\"Server\"] = \"server\";\n})(UserType$1 || (UserType$1 = {}));\n/**\n * Representation of an authenticated user of an app.\n */\nclass User {\n    /**\n     * @param parameters Parameters of the user.\n     */\n    constructor(parameters) {\n        this.app = parameters.app;\n        this.id = parameters.id;\n        this.storage = new UserStorage(this.app.storage, this.id);\n        if (\"accessToken\" in parameters && \"refreshToken\" in parameters && \"providerType\" in parameters) {\n            this._accessToken = parameters.accessToken;\n            this._refreshToken = parameters.refreshToken;\n            this.providerType = parameters.providerType;\n            // Save the parameters to storage, for future instances to be hydrated from\n            this.storage.accessToken = parameters.accessToken;\n            this.storage.refreshToken = parameters.refreshToken;\n            this.storage.providerType = parameters.providerType;\n        }\n        else {\n            // Hydrate the rest of the parameters from storage\n            this._accessToken = this.storage.accessToken;\n            this._refreshToken = this.storage.refreshToken;\n            const providerType = this.storage.providerType;\n            this._profile = this.storage.profile;\n            if (providerType) {\n                this.providerType = providerType;\n            }\n            else {\n                throw new Error(\"Storage is missing a provider type\");\n            }\n        }\n        this.fetcher = this.app.fetcher.clone({\n            userContext: { currentUser: this },\n        });\n        this.apiKeys = new ApiKeyAuth(this.fetcher);\n        this.functions = FunctionsFactory.create(this.fetcher);\n    }\n    /**\n     * @returns The access token used to authenticate the user towards MongoDB Realm.\n     */\n    get accessToken() {\n        return this._accessToken;\n    }\n    /**\n     * @param token The new access token.\n     */\n    set accessToken(token) {\n        this._accessToken = token;\n        this.storage.accessToken = token;\n    }\n    /**\n     * @returns The refresh token used to issue new access tokens.\n     */\n    get refreshToken() {\n        return this._refreshToken;\n    }\n    /**\n     * @param token The new refresh token.\n     */\n    set refreshToken(token) {\n        this._refreshToken = token;\n        this.storage.refreshToken = token;\n    }\n    /**\n     * @returns The current state of the user.\n     */\n    get state() {\n        if (this.id in this.app.allUsers) {\n            return this.refreshToken === null ? UserState.LoggedOut : UserState.Active;\n        }\n        else {\n            return UserState.Removed;\n        }\n    }\n    /**\n     * @returns The logged in state of the user.\n     */\n    get isLoggedIn() {\n        return this.state === UserState.Active;\n    }\n    get customData() {\n        if (this.accessToken) {\n            const decodedToken = this.decodeAccessToken();\n            return decodedToken.userData;\n        }\n        else {\n            throw new Error(\"Cannot read custom data without an access token\");\n        }\n    }\n    /**\n     * @returns Profile containing detailed information about the user.\n     */\n    get profile() {\n        if (this._profile) {\n            return this._profile.data;\n        }\n        else {\n            throw new Error(\"A profile was never fetched for this user\");\n        }\n    }\n    get identities() {\n        if (this._profile) {\n            return this._profile.identities;\n        }\n        else {\n            throw new Error(\"A profile was never fetched for this user\");\n        }\n    }\n    get deviceId() {\n        if (this.accessToken) {\n            const payload = this.accessToken.split(\".\")[1];\n            if (payload) {\n                const parsedPayload = JSON.parse(gBase64.decode(payload));\n                const deviceId = parsedPayload[\"baas_device_id\"];\n                if (typeof deviceId === \"string\" && deviceId !== DEFAULT_DEVICE_ID) {\n                    return deviceId;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Refresh the users profile data.\n     */\n    async refreshProfile() {\n        // Fetch the latest profile\n        const response = await this.fetcher.fetchJSON({\n            method: \"GET\",\n            path: routes.api().auth().profile().path,\n        });\n        // Create a profile instance\n        this._profile = new UserProfile(response);\n        // Store this for later hydration\n        this.storage.profile = this._profile;\n    }\n    /**\n     * Log out the user, invalidating the session (and its refresh token).\n     */\n    async logOut() {\n        // Invalidate the refresh token\n        try {\n            if (this._refreshToken !== null) {\n                await this.fetcher.fetchJSON({\n                    method: \"DELETE\",\n                    path: routes.api().auth().session().path,\n                    tokenType: \"refresh\",\n                });\n            }\n        }\n        finally {\n            // Forget the access and refresh token\n            this.accessToken = null;\n            this.refreshToken = null;\n        }\n    }\n    /** @inheritdoc */\n    async linkCredentials(credentials) {\n        const response = await this.app.authenticator.authenticate(credentials, this);\n        // Sanity check the response\n        if (this.id !== response.userId) {\n            const details = `got user id ${response.userId} expected ${this.id}`;\n            throw new Error(`Link response ment for another user (${details})`);\n        }\n        // Update the access token\n        this.accessToken = response.accessToken;\n        // Refresh the profile to include the new identity\n        await this.refreshProfile();\n    }\n    /**\n     * Request a new access token, using the refresh token.\n     */\n    async refreshAccessToken() {\n        const response = await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: routes.api().auth().session().path,\n            tokenType: \"refresh\",\n        });\n        const { access_token: accessToken } = response;\n        if (typeof accessToken === \"string\") {\n            this.accessToken = accessToken;\n        }\n        else {\n            throw new Error(\"Expected an 'access_token' in the response\");\n        }\n    }\n    /** @inheritdoc */\n    async refreshCustomData() {\n        await this.refreshAccessToken();\n        return this.customData;\n    }\n    /** @inheritdoc */\n    callFunction(name, ...args) {\n        return this.functions.callFunction(name, ...args);\n    }\n    /**\n     * @returns A plain ol' JavaScript object representation of the user.\n     */\n    toJSON() {\n        return {\n            id: this.id,\n            accessToken: this.accessToken,\n            refreshToken: this.refreshToken,\n            profile: this._profile,\n            state: this.state,\n            customData: this.customData,\n        };\n    }\n    /** @inheritdoc */\n    push() {\n        throw new Error(\"Not yet implemented\");\n    }\n    /** @inheritdoc */\n    mongoClient(serviceName) {\n        return createService(this.fetcher, serviceName);\n    }\n    decodeAccessToken() {\n        if (this.accessToken) {\n            // Decode and spread the token\n            const parts = this.accessToken.split(\".\");\n            if (parts.length !== 3) {\n                throw new Error(\"Expected an access token with three parts\");\n            }\n            // Decode the payload\n            const encodedPayload = parts[1];\n            const decodedPayload = gBase64.decode(encodedPayload);\n            const parsedPayload = JSON.parse(decodedPayload);\n            const { exp: expires, iat: issuedAt, sub: subject, user_data: userData = {} } = parsedPayload;\n            // Validate the types\n            if (typeof expires !== \"number\") {\n                throw new Error(\"Failed to decode access token 'exp'\");\n            }\n            else if (typeof issuedAt !== \"number\") {\n                throw new Error(\"Failed to decode access token 'iat'\");\n            }\n            return { expires, issuedAt, subject, userData };\n        }\n        else {\n            throw new Error(\"Missing an access token\");\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Ensure the static interface of the Credentials class implements the static interface of Realm.Credentials\n// See https://stackoverflow.com/a/43484801\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nclass Credentials {\n    /**\n     * Constructs an instance of credentials.\n     *\n     * @param providerName The name of the authentication provider used when authenticating.\n     * @param providerType The type of the authentication provider used when authenticating.\n     * @param payload The data being sent to the service when authenticating.\n     */\n    constructor(providerName, providerType, payload) {\n        this.providerName = providerName;\n        this.providerType = providerType;\n        this.payload = payload;\n    }\n    /**\n     * Creates credentials that logs in using the [Anonymous Provider](https://docs.mongodb.com/realm/authentication/anonymous/).\n     *\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static anonymous() {\n        return new Credentials(\"anon-user\", \"anon-user\", {});\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static userApiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static serverApiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static apiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [Email/Password Provider](https://docs.mongodb.com/realm/authentication/email-password/).\n     * Note: This was formerly known as the \"Username/Password\" provider.\n     *\n     * @param email The end-users email address.\n     * @param password The end-users password.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static emailPassword(email, password) {\n        return new Credentials(\"local-userpass\", \"local-userpass\", {\n            username: email,\n            password,\n        });\n    }\n    /**\n     * Creates credentials that logs in using the [Custom Function Provider](https://docs.mongodb.com/realm/authentication/custom-function/).\n     *\n     * @param payload The custom payload as expected by the server.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static function(payload) {\n        return new Credentials(\"custom-function\", \"custom-function\", payload);\n    }\n    /**\n     * Creates credentials that logs in using the [Custom JWT Provider](https://docs.mongodb.com/realm/authentication/custom-jwt/).\n     *\n     * @param token The JSON Web Token (JWT).\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static jwt(token) {\n        return new Credentials(\"custom-token\", \"custom-token\", {\n            token,\n        });\n    }\n    /**\n     * Creates credentials that logs in using the [Google Provider](https://docs.mongodb.com/realm/authentication/google/).\n     *\n     * @param payload The URL that users should be redirected to, the auth code or id token from Google.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static google(payload) {\n        return new Credentials(\"oauth2-google\", \"oauth2-google\", Credentials.derivePayload(payload));\n    }\n    /**\n     * @param payload The payload string.\n     * @returns A payload object based on the string.\n     */\n    static derivePayload(payload) {\n        if (typeof payload === \"string\") {\n            if (payload.includes(\"://\")) {\n                return this.derivePayload({ redirectUrl: payload });\n            }\n            else if (payload.startsWith(\"4/\")) {\n                return this.derivePayload({ authCode: payload });\n            }\n            else if (payload.startsWith(\"ey\")) {\n                return this.derivePayload({ idToken: payload });\n            }\n            else {\n                throw new Error(`Unexpected payload: ${payload}`);\n            }\n        }\n        else if (Object.keys(payload).length === 1) {\n            if (\"authCode\" in payload || \"redirectUrl\" in payload) {\n                return payload;\n            }\n            else if (\"idToken\" in payload) {\n                return { id_token: payload.idToken };\n            }\n            else {\n                throw new Error(\"Unexpected payload: \" + JSON.stringify(payload));\n            }\n        }\n        else {\n            throw new Error(\"Expected only one property in payload, got \" + JSON.stringify(payload));\n        }\n    }\n    /**\n     * Creates credentials that logs in using the [Facebook Provider](https://docs.mongodb.com/realm/authentication/facebook/).\n     *\n     * @param redirectUrlOrAccessToken The URL that users should be redirected to or the auth code returned from Facebook.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static facebook(redirectUrlOrAccessToken) {\n        return new Credentials(\"oauth2-facebook\", \"oauth2-facebook\", redirectUrlOrAccessToken.includes(\"://\")\n            ? { redirectUrl: redirectUrlOrAccessToken }\n            : { accessToken: redirectUrlOrAccessToken });\n    }\n    /**\n     * Creates credentials that logs in using the [Apple ID Provider](https://docs.mongodb.com/realm/authentication/apple/).\n     *\n     * @param redirectUrlOrIdToken The URL that users should be redirected to or the id_token returned from Apple.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static apple(redirectUrlOrIdToken) {\n        return new Credentials(\"oauth2-apple\", \"oauth2-apple\", redirectUrlOrIdToken.includes(\"://\") ? { redirectUrl: redirectUrlOrIdToken } : { id_token: redirectUrlOrIdToken });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst USER_IDS_STORAGE_KEY = \"userIds\";\nconst DEVICE_ID_STORAGE_KEY = \"deviceId\";\n/**\n * Storage specific to the app.\n */\nclass AppStorage extends PrefixedStorage {\n    /**\n     * @param storage The underlying storage to wrap.\n     * @param appId The id of the app.\n     */\n    constructor(storage, appId) {\n        super(storage, `app(${appId})`);\n    }\n    /**\n     * Reads out the list of user ids from storage.\n     *\n     * @returns A list of user ids.\n     */\n    getUserIds() {\n        const userIdsString = this.get(USER_IDS_STORAGE_KEY);\n        const userIds = userIdsString ? JSON.parse(userIdsString) : [];\n        if (Array.isArray(userIds)) {\n            // Remove any duplicates that might have been added\n            // The Set preserves insertion order\n            return [...new Set(userIds)];\n        }\n        else {\n            throw new Error(\"Expected the user ids to be an array\");\n        }\n    }\n    /**\n     * Sets the list of ids in storage.\n     * Optionally merging with existing ids stored in the storage, by prepending these while voiding duplicates.\n     *\n     * @param userIds The list of ids to store.\n     * @param mergeWithExisting Prepend existing ids to avoid data-races with other apps using this storage.\n     */\n    setUserIds(userIds, mergeWithExisting) {\n        if (mergeWithExisting) {\n            // Add any existing user id to the end of this list, avoiding duplicates\n            const existingIds = this.getUserIds();\n            for (const id of existingIds) {\n                if (userIds.indexOf(id) === -1) {\n                    userIds.push(id);\n                }\n            }\n        }\n        // Store the list of ids\n        this.set(USER_IDS_STORAGE_KEY, JSON.stringify(userIds));\n    }\n    /**\n     * Remove an id from the list of ids.\n     *\n     * @param userId The id of a User to be removed.\n     */\n    removeUserId(userId) {\n        const existingIds = this.getUserIds();\n        const userIds = existingIds.filter((id) => id !== userId);\n        // Store the list of ids\n        this.setUserIds(userIds, false);\n    }\n    /**\n     * @returns id of this device (if any exists)\n     */\n    getDeviceId() {\n        return this.get(DEVICE_ID_STORAGE_KEY);\n    }\n    /**\n     * @param deviceId The id of this device, to send on subsequent authentication requests.\n     */\n    setDeviceId(deviceId) {\n        this.set(DEVICE_ID_STORAGE_KEY, deviceId);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nconst LOWERCASE_LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\nconst CLOSE_CHECK_INTERVAL = 100; // 10 times per second\nconst REDIRECT_HASH_TO_RESULT = {\n    _stitch_client_app_id: \"appId\",\n    _baas_client_app_id: \"appId\",\n    _stitch_ua: \"userAuth\",\n    _baas_ua: \"userAuth\",\n    _stitch_link: \"link\",\n    _baas_link: \"link\",\n    _stitch_error: \"error\",\n    _baas_error: \"error\",\n    _stitch_state: \"state\",\n    _baas_state: \"state\",\n};\n/**\n * A collection of methods helping implement the OAuth2 flow.\n */\nclass OAuth2Helper {\n    /**\n     * @param storage The underlying storage to use when storing and retriving secrets.\n     * @param openWindow An optional function called when a browser window needs to open.\n     */\n    constructor(storage, openWindow = getEnvironment().openWindow) {\n        this.storage = storage.prefix(\"oauth2\");\n        this.openWindow = openWindow;\n    }\n    /**\n     * Parses the query string from the final step of the OAuth flow.\n     *\n     * @param queryString The query string passed through in location.hash.\n     * @returns The result of the OAuth flow.\n     */\n    static parseRedirectLocation(queryString) {\n        const params = decodeQueryString(queryString);\n        const result = {};\n        for (const [p, r] of Object.entries(REDIRECT_HASH_TO_RESULT)) {\n            const value = params[p];\n            if (value) {\n                result[r] = value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Handle the redirect querystring by parsing it and storing it for others to consume.\n     *\n     * @param queryString The query string containing the encoded result from the OAuth provider.\n     * @param storage The underlying storage used to persist the result.\n     */\n    static handleRedirect(queryString, storage = getEnvironment().defaultStorage) {\n        const result = OAuth2Helper.parseRedirectLocation(queryString);\n        const { state, error } = result;\n        if (typeof state === \"string\") {\n            const oauth2Storage = storage.prefix(\"oauth2\");\n            const stateStorage = OAuth2Helper.getStateStorage(oauth2Storage, state);\n            stateStorage.set(\"result\", JSON.stringify(result));\n        }\n        else if (error) {\n            throw new Error(`Failed to handle OAuth 2.0 redirect: ${error}`);\n        }\n        else {\n            throw new Error(\"Failed to handle OAuth 2.0 redirect.\");\n        }\n    }\n    /**\n     * Decodes the authInfo string into its seperate parts.\n     *\n     * @param authInfo An authInfo string returned from the server.\n     * @returns An object containing the separate parts of the authInfo string.\n     */\n    static decodeAuthInfo(authInfo) {\n        const parts = (authInfo || \"\").split(\"$\");\n        if (parts.length === 4) {\n            const [accessToken, refreshToken, userId, deviceId] = parts;\n            return { accessToken, refreshToken, userId, deviceId };\n        }\n        else {\n            throw new Error(\"Failed to decode 'authInfo' into ids and tokens\");\n        }\n    }\n    /**\n     * Get the storage key associated of an secret associated with a state.\n     *\n     * @param storage The root storage used to derive a \"state namespaced\" storage.\n     * @param state The random state.\n     * @returns The storage associated with a particular state.\n     */\n    static getStateStorage(storage, state) {\n        return storage.prefix(`state(${state})`);\n    }\n    /**\n     * Open a window and wait for the redirect to be handled.\n     *\n     * @param url The URL to open.\n     * @param state The state which will be used to listen for storage updates.\n     * @returns The result passed through the redirect.\n     */\n    openWindowAndWaitForRedirect(url, state) {\n        const stateStorage = OAuth2Helper.getStateStorage(this.storage, state);\n        // Return a promise that resolves when the  gets known\n        return new Promise((resolve, reject) => {\n            let redirectWindow = null;\n            // We're declaring the interval now to enable referencing before its initialized\n            let windowClosedInterval; // eslint-disable-line prefer-const\n            const handleStorageUpdate = () => {\n                // Trying to get the secret from storage\n                const result = stateStorage.get(\"result\");\n                if (result) {\n                    const parsedResult = JSON.parse(result);\n                    // The secret got updated!\n                    stateStorage.removeListener(handleStorageUpdate);\n                    // Clear the storage to prevent others from reading this\n                    stateStorage.clear();\n                    // Try closing the newly created window\n                    try {\n                        if (redirectWindow) {\n                            // Stop checking if the window closed\n                            clearInterval(windowClosedInterval);\n                            redirectWindow.close();\n                        }\n                    }\n                    catch (err) {\n                        console.warn(`Failed closing redirect window: ${err}`);\n                    }\n                    finally {\n                        resolve(parsedResult);\n                    }\n                }\n            };\n            // Add a listener to the state storage, awaiting an update to the secret\n            stateStorage.addListener(handleStorageUpdate);\n            // Open up a window\n            redirectWindow = this.openWindow(url);\n            // Not using a const, because we need the two listeners to reference each other when removing the other.\n            windowClosedInterval = setInterval(() => {\n                // Polling \"closed\" because registering listeners on the window violates cross-origin policies\n                if (!redirectWindow) {\n                    // No need to keep polling for a window that we can't check\n                    clearInterval(windowClosedInterval);\n                }\n                else if (redirectWindow.closed) {\n                    // Stop polling the window state\n                    clearInterval(windowClosedInterval);\n                    // Stop listening for changes to the storage\n                    stateStorage.removeListener(handleStorageUpdate);\n                    // Reject the promise\n                    const err = new Error(\"Window closed\");\n                    reject(err);\n                }\n            }, CLOSE_CHECK_INTERVAL);\n        });\n    }\n    /**\n     * Generate a random state string.\n     *\n     * @returns The random state string.\n     */\n    generateState() {\n        return generateRandomString(12, LOWERCASE_LETTERS);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst REDIRECT_LOCATION_HEADER = \"x-baas-location\";\n/**\n * Handles authentication and linking of users.\n */\nclass Authenticator {\n    /**\n     * @param fetcher The fetcher used to fetch responses from the server.\n     * @param storage The storage used when completing OAuth 2.0 flows (should not be scoped to a specific app).\n     * @param getDeviceInformation Called to get device information to be sent to the server.\n     */\n    constructor(fetcher, storage, getDeviceInformation) {\n        this.fetcher = fetcher;\n        this.oauth2 = new OAuth2Helper(storage);\n        this.getDeviceInformation = getDeviceInformation;\n    }\n    /**\n     * @param credentials Credentials to use when logging in.\n     * @param linkingUser A user requesting to link.\n     * @returns A promise resolving to the response from the server.\n     */\n    async authenticate(credentials, linkingUser) {\n        const deviceInformation = this.getDeviceInformation();\n        const isLinking = typeof linkingUser === \"object\";\n        if (credentials.providerType.startsWith(\"oauth2\") && typeof credentials.payload.redirectUrl === \"string\") {\n            // Initiate the OAuth2 flow by generating a state and fetch a redirect URL\n            const state = this.oauth2.generateState();\n            const url = await this.getLogInUrl(credentials, isLinking, {\n                state,\n                redirect: credentials.payload.redirectUrl,\n                // Ensure redirects are communicated in a header different from \"Location\" and status remains 200 OK\n                providerRedirectHeader: isLinking ? true : undefined,\n                // Add the device information, only if we're not linking - since that request won't have a body of its own.\n                device: !isLinking ? deviceInformation.encode() : undefined,\n            });\n            // If we're linking, we need to send the users access token in the request\n            if (isLinking) {\n                const response = await this.fetcher.fetch({\n                    method: \"GET\",\n                    url,\n                    tokenType: isLinking ? \"access\" : \"none\",\n                    user: linkingUser,\n                    // The response will set a cookie that we need to tell the browser to store\n                    mode: \"cors\",\n                    credentials: \"include\",\n                });\n                // If a response header contains a redirect URL: Open a window and wait for the redirect to be handled\n                const redirectUrl = response.headers.get(REDIRECT_LOCATION_HEADER);\n                if (redirectUrl) {\n                    return this.openWindowAndWaitForAuthResponse(redirectUrl, state);\n                }\n                else {\n                    throw new Error(`Missing ${REDIRECT_LOCATION_HEADER} header`);\n                }\n            }\n            else {\n                // Otherwise we can open a window and let the server redirect the user right away\n                // This gives lower latency (as we don't need the client to receive and execute the redirect in code)\n                // This also has less dependency on cookies and doesn't sent any tokens.\n                return this.openWindowAndWaitForAuthResponse(url, state);\n            }\n        }\n        else {\n            const logInUrl = await this.getLogInUrl(credentials, isLinking);\n            const response = await this.fetcher.fetchJSON({\n                method: \"POST\",\n                url: logInUrl,\n                body: {\n                    ...credentials.payload,\n                    options: {\n                        device: deviceInformation.toJSON(),\n                    },\n                },\n                tokenType: isLinking ? \"access\" : \"none\",\n                user: linkingUser,\n            });\n            // Spread out values from the response and ensure they're valid\n            const { user_id: userId, access_token: accessToken, refresh_token: refreshToken = null, device_id: deviceId, } = response;\n            if (typeof userId !== \"string\") {\n                throw new Error(\"Expected a user id in the response\");\n            }\n            if (typeof accessToken !== \"string\") {\n                throw new Error(\"Expected an access token in the response\");\n            }\n            if (typeof refreshToken !== \"string\" && refreshToken !== null) {\n                throw new Error(\"Expected refresh token to be a string or null\");\n            }\n            if (typeof deviceId !== \"string\") {\n                throw new Error(\"Expected device id to be a string\");\n            }\n            return { userId, accessToken, refreshToken, deviceId };\n        }\n    }\n    /**\n     * @param credentials Credentials to use when logging in.\n     * @param link Should the request link with the current user?\n     * @param extraQueryParams Any extra parameters to include in the query string\n     * @returns A promise resolving to the url to be used when logging in.\n     */\n    async getLogInUrl(credentials, link = false, extraQueryParams = {}) {\n        // See https://github.com/mongodb/stitch-js-sdk/blob/310f0bd5af80f818cdfbc3caf1ae29ffa8e9c7cf/packages/core/sdk/src/auth/internal/CoreStitchAuth.ts#L746-L780\n        const appRoute = this.fetcher.appRoute;\n        const loginRoute = appRoute.authProvider(credentials.providerName).login();\n        const qs = encodeQueryString({\n            link: link ? \"true\" : undefined,\n            ...extraQueryParams,\n        });\n        const locationUrl = await this.fetcher.locationUrl;\n        return locationUrl + loginRoute.path + qs;\n    }\n    async openWindowAndWaitForAuthResponse(redirectUrl, state) {\n        const redirectResult = await this.oauth2.openWindowAndWaitForRedirect(redirectUrl, state);\n        // Decode the auth info (id, tokens, etc.) from the result of the redirect\n        return OAuth2Helper.decodeAuthInfo(redirectResult.userAuth);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Determine if the shape of an error response is specific to each service or widely used.\n/**\n * An error produced while communicating with the MongoDB Realm server.\n */\nclass MongoDBRealmError extends Error {\n    constructor(method, url, statusCode, statusText, error, errorCode, link) {\n        const summary = statusText ? `status ${statusCode} ${statusText}` : `status ${statusCode}`;\n        if (typeof error === \"string\") {\n            super(`Request failed (${method} ${url}): ${error} (${summary})`);\n        }\n        else {\n            super(`Request failed (${method} ${url}): (${summary})`);\n        }\n        this.method = method;\n        this.url = url;\n        this.statusText = statusText;\n        this.statusCode = statusCode;\n        this.error = error;\n        this.errorCode = errorCode;\n        this.link = link;\n    }\n    /**\n     * Constructs and returns an error from a request and a response.\n     * Note: The caller must throw this error themselves.\n     *\n     * @param request The request sent to the server.\n     * @param response A raw response, as returned from the server.\n     * @returns An error from a request and a response.\n     */\n    static async fromRequestAndResponse(request, response) {\n        var _a;\n        const { url, method } = request;\n        const { status, statusText } = response;\n        if ((_a = response.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.startsWith(\"application/json\")) {\n            const body = await response.json();\n            if (typeof body === \"object\" && body) {\n                const { error, error_code: errorCode, link } = body;\n                return new MongoDBRealmError(method, url, status, statusText, typeof error === \"string\" ? error : undefined, typeof errorCode === \"string\" ? errorCode : undefined, typeof link === \"string\" ? link : undefined);\n            }\n        }\n        return new MongoDBRealmError(method, url, status, statusText);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * @param body A possible resonse body.\n * @returns An async iterator.\n */\nfunction asyncIteratorFromResponseBody(body) {\n    if (typeof body !== \"object\" || body === null) {\n        throw new Error(\"Expected a non-null object\");\n    }\n    else if (Symbol.asyncIterator in body) {\n        return body;\n    }\n    else if (\"getReader\" in body) {\n        const stream = body;\n        return {\n            [Symbol.asyncIterator]() {\n                const reader = stream.getReader();\n                return {\n                    next() {\n                        return reader.read();\n                    },\n                    async return() {\n                        await reader.cancel();\n                        return { done: true, value: null };\n                    },\n                };\n            },\n        };\n    }\n    else {\n        throw new Error(\"Expected an AsyncIterable or a ReadableStream\");\n    }\n}\n/**\n * Wraps a NetworkTransport from the \"realm-network-transport\" package.\n * Extracts error messages and throws `MongoDBRealmError` objects upon failures.\n * Injects access or refresh tokens for a current or specific user.\n * Refreshes access tokens if requests fails due to a 401 error.\n * Optionally parses response as JSON before returning it.\n * Fetches and exposes an app's location url.\n */\nclass Fetcher {\n    /**\n     * @param config A configuration of the fetcher.\n     * @param config.appId The application id.\n     * @param config.transport The transport used when fetching.\n     * @param config.userContext An object used to determine the requesting user.\n     * @param config.locationUrlContext An object used to determine the location / base URL.\n     */\n    constructor({ appId, transport, userContext, locationUrlContext }) {\n        this.appId = appId;\n        this.transport = transport;\n        this.userContext = userContext;\n        this.locationUrlContext = locationUrlContext;\n    }\n    /**\n     * @param user An optional user to generate the header for.\n     * @param tokenType The type of token (access or refresh).\n     * @returns An object containing the user's token as \"Authorization\" header or undefined if no user is given.\n     */\n    static buildAuthorizationHeader(user, tokenType) {\n        if (!user || tokenType === \"none\") {\n            return {};\n        }\n        else if (tokenType === \"access\") {\n            return { Authorization: `Bearer ${user.accessToken}` };\n        }\n        else if (tokenType === \"refresh\") {\n            return { Authorization: `Bearer ${user.refreshToken}` };\n        }\n        else {\n            throw new Error(`Unexpected token type (${tokenType})`);\n        }\n    }\n    /**\n     * @param body The body string or object passed from a request.\n     * @returns An object optionally specifying the \"Content-Type\" header.\n     */\n    static buildBody(body) {\n        if (!body) {\n            return;\n        }\n        else if (typeof body === \"object\" && body !== null) {\n            return JSON.stringify(serialize(body));\n        }\n        else if (typeof body === \"string\") {\n            return body;\n        }\n        else {\n            console.log(\"body is\", body);\n            throw new Error(\"Unexpected type of body\");\n        }\n    }\n    /**\n     * @param body The body string or object passed from a request.\n     * @returns An object optionally specifying the \"Content-Type\" header.\n     */\n    static buildJsonHeader(body) {\n        if (body && body.length > 0) {\n            return { \"Content-Type\": \"application/json\" };\n        }\n        else {\n            return {};\n        }\n    }\n    clone(config) {\n        return new Fetcher({\n            appId: this.appId,\n            transport: this.transport,\n            userContext: this.userContext,\n            locationUrlContext: this.locationUrlContext,\n            ...config,\n        });\n    }\n    /**\n     * Fetch a network resource as an authenticated user.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns The response from the server.\n     */\n    async fetch(request) {\n        const { path, url, tokenType = \"access\", user = this.userContext.currentUser, ...restOfRequest } = request;\n        if (typeof path === \"string\" && typeof url === \"string\") {\n            throw new Error(\"Use of 'url' and 'path' mutually exclusive\");\n        }\n        else if (typeof path === \"string\") {\n            // Derive the URL\n            const url = (await this.locationUrlContext.locationUrl) + path;\n            return this.fetch({ ...request, path: undefined, url });\n        }\n        else if (typeof url === \"string\") {\n            const response = await this.transport.fetch({\n                ...restOfRequest,\n                url,\n                headers: {\n                    ...Fetcher.buildAuthorizationHeader(user, tokenType),\n                    ...request.headers,\n                },\n            });\n            if (response.ok) {\n                return response;\n            }\n            else if (user && response.status === 401 && tokenType === \"access\") {\n                // If the access token has expired, it would help refreshing it\n                await user.refreshAccessToken();\n                // Retry with the specific user, since the currentUser might have changed.\n                return this.fetch({ ...request, user });\n            }\n            else {\n                if (user && response.status === 401 && tokenType === \"refresh\") {\n                    // A 401 error while using the refresh token indicates the token has an issue.\n                    // Reset the tokens to prevent a lock.\n                    user.accessToken = null;\n                    user.refreshToken = null;\n                }\n                // Throw an error with a message extracted from the body\n                throw await MongoDBRealmError.fromRequestAndResponse(request, response);\n            }\n        }\n        else {\n            throw new Error(\"Expected either 'url' or 'path'\");\n        }\n    }\n    /**\n     * Fetch a network resource as an authenticated user and parse the result as extended JSON.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns The response from the server, parsed as extended JSON.\n     */\n    async fetchJSON(request) {\n        const { body } = request;\n        const serializedBody = Fetcher.buildBody(body);\n        const contentTypeHeaders = Fetcher.buildJsonHeader(serializedBody);\n        const response = await this.fetch({\n            ...request,\n            body: serializedBody,\n            headers: {\n                Accept: \"application/json\",\n                ...contentTypeHeaders,\n                ...request.headers,\n            },\n        });\n        const contentType = response.headers.get(\"content-type\");\n        if (contentType === null || contentType === void 0 ? void 0 : contentType.startsWith(\"application/json\")) {\n            const responseBody = await response.json();\n            return deserialize(responseBody);\n        }\n        else if (contentType === null) {\n            return null;\n        }\n        else {\n            throw new Error(`Expected JSON response, got \"${contentType}\"`);\n        }\n    }\n    /**\n     * Fetch an \"event-stream\" resource as an authenticated user.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns An async iterator over the response body.\n     */\n    async fetchStream(request) {\n        const { body } = await this.fetch({\n            ...request,\n            headers: {\n                Accept: \"text/event-stream\",\n                ...request.headers,\n            },\n        });\n        return asyncIteratorFromResponseBody(body);\n    }\n    /**\n     * @returns The path of the app route.\n     */\n    get appRoute() {\n        return routes.api().app(this.appId);\n    }\n    /**\n     * @returns A promise of the location URL of the app.\n     */\n    get locationUrl() {\n        return this.locationUrlContext.locationUrl;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * The key in a storage on which the device id is stored.\n */\nconst DEVICE_ID_STORAGE_KEY$1 = \"deviceId\";\nvar DeviceFields;\n(function (DeviceFields) {\n    DeviceFields[\"DEVICE_ID\"] = \"deviceId\";\n    DeviceFields[\"APP_ID\"] = \"appId\";\n    DeviceFields[\"APP_VERSION\"] = \"appVersion\";\n    DeviceFields[\"PLATFORM\"] = \"platform\";\n    DeviceFields[\"PLATFORM_VERSION\"] = \"platformVersion\";\n    DeviceFields[\"SDK_VERSION\"] = \"sdkVersion\";\n})(DeviceFields || (DeviceFields = {}));\n/**\n * Information describing the device, app and SDK.\n */\nclass DeviceInformation {\n    /**\n     * @param params Construct the device information from these parameters.\n     * @param params.appId A user-defined application id.\n     * @param params.appVersion A user-defined application version.\n     * @param params.deviceId An unique id for the end-users device.\n     */\n    constructor({ appId, appVersion, deviceId }) {\n        /**\n         * The version of the Realm Web SDK (constant provided by Rollup).\n         */\n        this.sdkVersion = \"1.6.0\";\n        const environment = getEnvironment();\n        this.platform = environment.platform;\n        this.platformVersion = environment.platformVersion;\n        this.appId = appId;\n        this.appVersion = appVersion;\n        this.deviceId = deviceId;\n    }\n    /**\n     * @returns An base64 URI encoded representation of the device information.\n     */\n    encode() {\n        const obj = removeKeysWithUndefinedValues(this);\n        return gBase64.encode(JSON.stringify(obj));\n    }\n    /**\n     * @returns The defaults\n     */\n    toJSON() {\n        return removeKeysWithUndefinedValues(this);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Default base url to prefix all requests if no baseUrl is specified in the configuration.\n */\nconst DEFAULT_BASE_URL = \"https://stitch.mongodb.com\";\n/**\n * MongoDB Realm App\n */\nclass App {\n    /**\n     * Construct a Realm App, either from the Realm App id visible from the MongoDB Realm UI or a configuration.\n     *\n     * @param idOrConfiguration The Realm App id or a configuration to use for this app.\n     */\n    constructor(idOrConfiguration) {\n        /**\n         * An array of active and logged-out users.\n         * Elements in the beginning of the array is considered more recent than the later elements.\n         */\n        this.users = [];\n        /**\n         * A promise resolving to the App's location url.\n         */\n        this._locationUrl = null;\n        // If the argument is a string, convert it to a simple configuration object.\n        const configuration = typeof idOrConfiguration === \"string\" ? { id: idOrConfiguration } : idOrConfiguration;\n        // Initialize properties from the configuration\n        if (typeof configuration === \"object\" && typeof configuration.id === \"string\") {\n            this.id = configuration.id;\n        }\n        else {\n            throw new Error(\"Missing a MongoDB Realm app-id\");\n        }\n        this.baseUrl = configuration.baseUrl || DEFAULT_BASE_URL;\n        if (configuration.skipLocationRequest) {\n            // Use the base url directly, instead of requesting a location URL from the server\n            this._locationUrl = Promise.resolve(this.baseUrl);\n        }\n        this.localApp = configuration.app;\n        const { storage, transport = new DefaultNetworkTransport() } = configuration;\n        // Construct a fetcher wrapping the network transport\n        this.fetcher = new Fetcher({\n            appId: this.id,\n            userContext: this,\n            locationUrlContext: this,\n            transport,\n        });\n        // Construct the auth providers\n        this.emailPasswordAuth = new EmailPasswordAuth(this.fetcher);\n        // Construct the storage\n        const baseStorage = storage || getEnvironment().defaultStorage;\n        this.storage = new AppStorage(baseStorage, this.id);\n        this.authenticator = new Authenticator(this.fetcher, baseStorage, () => this.deviceInformation);\n        // Hydrate the app state from storage\n        try {\n            this.hydrate();\n        }\n        catch (err) {\n            // The storage was corrupted\n            this.storage.clear();\n            // A failed hydration shouldn't throw and break the app experience\n            // Since this is \"just\" persisted state that unfortunately got corrupted or partially lost\n            console.warn(\"Realm app hydration failed:\", err.message);\n        }\n    }\n    /**\n     * Get or create a singleton Realm App from an id.\n     * Calling this function multiple times with the same id will return the same instance.\n     *\n     * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n     * @returns The Realm App instance.\n     */\n    static getApp(id) {\n        if (id in App.appCache) {\n            return App.appCache[id];\n        }\n        else {\n            const instance = new App(id);\n            App.appCache[id] = instance;\n            return instance;\n        }\n    }\n    /**\n     * Switch user.\n     *\n     * @param nextUser The user or id of the user to switch to.\n     */\n    switchUser(nextUser) {\n        const index = this.users.findIndex((u) => u === nextUser);\n        if (index === -1) {\n            throw new Error(\"The user was never logged into this app\");\n        }\n        // Remove the user from the stack\n        const [user] = this.users.splice(index, 1);\n        // Insert the user in the beginning of the stack\n        this.users.unshift(user);\n    }\n    /**\n     * Log in a user.\n     *\n     * @param credentials Credentials to use when logging in.\n     * @param fetchProfile Should the users profile be fetched? (default: true)\n     * @returns A promise resolving to the newly logged in user.\n     */\n    async logIn(credentials, fetchProfile = true) {\n        const response = await this.authenticator.authenticate(credentials);\n        const user = this.createOrUpdateUser(response, credentials.providerType);\n        // Let's ensure this will be the current user, in case the user object was reused.\n        this.switchUser(user);\n        // If neeeded, fetch and set the profile on the user\n        if (fetchProfile) {\n            await user.refreshProfile();\n        }\n        // Persist the user id in the storage,\n        // merging to avoid overriding logins from other apps using the same underlying storage\n        this.storage.setUserIds(this.users.map((u) => u.id), true);\n        // Read out and store the device id from the server\n        const deviceId = response.deviceId;\n        if (deviceId && deviceId !== \"000000000000000000000000\") {\n            this.storage.set(DEVICE_ID_STORAGE_KEY$1, deviceId);\n        }\n        // Return the user\n        return user;\n    }\n    /**\n     * @inheritdoc\n     */\n    async removeUser(user) {\n        // Remove the user from the list of users\n        const index = this.users.findIndex((u) => u === user);\n        if (index === -1) {\n            throw new Error(\"The user was never logged into this app\");\n        }\n        this.users.splice(index, 1);\n        // Log out the user - this removes access and refresh tokens from storage\n        await user.logOut();\n        // Remove the users profile from storage\n        this.storage.remove(`user(${user.id}):profile`);\n        // Remove the user from the storage\n        this.storage.removeUserId(user.id);\n    }\n    /**\n     * The currently active user (or null if no active users exists).\n     *\n     * @returns the currently active user or null.\n     */\n    get currentUser() {\n        const activeUsers = this.users.filter((user) => user.state === UserState.Active);\n        if (activeUsers.length === 0) {\n            return null;\n        }\n        else {\n            // Current user is the top of the stack\n            return activeUsers[0];\n        }\n    }\n    /**\n     * All active and logged-out users:\n     *  - First in the list are active users (ordered by most recent call to switchUser or login)\n     *  - Followed by logged out users (also ordered by most recent call to switchUser or login).\n     *\n     * @returns An array of users active or loggedout users (current user being the first).\n     */\n    get allUsers() {\n        // Returning a freezed copy of the list of users to prevent outside changes\n        return Object.fromEntries(this.users.map((user) => [user.id, user]));\n    }\n    /**\n     * @returns A promise of the app URL, with the app location resolved.\n     */\n    get locationUrl() {\n        if (!this._locationUrl) {\n            const path = routes.api().app(this.id).location().path;\n            this._locationUrl = this.fetcher\n                .fetchJSON({\n                method: \"GET\",\n                url: this.baseUrl + path,\n                tokenType: \"none\",\n            })\n                .then((body) => {\n                if (typeof body !== \"object\") {\n                    throw new Error(\"Expected response body be an object\");\n                }\n                else {\n                    return body;\n                }\n            })\n                .then(({ hostname }) => {\n                if (typeof hostname !== \"string\") {\n                    throw new Error(\"Expected response to contain a 'hostname'\");\n                }\n                else {\n                    return hostname;\n                }\n            })\n                .catch((err) => {\n                // Reset the location to allow another request to fetch again.\n                this._locationUrl = null;\n                throw err;\n            });\n        }\n        return this._locationUrl;\n    }\n    /**\n     * @returns Information about the current device, sent to the server when authenticating.\n     */\n    get deviceInformation() {\n        const deviceIdStr = this.storage.getDeviceId();\n        const deviceId = typeof deviceIdStr === \"string\" && deviceIdStr !== \"000000000000000000000000\"\n            ? new ObjectId(deviceIdStr)\n            : undefined;\n        return new DeviceInformation({\n            appId: this.localApp ? this.localApp.name : undefined,\n            appVersion: this.localApp ? this.localApp.version : undefined,\n            deviceId,\n        });\n    }\n    /**\n     * Create (and store) a new user or update an existing user's access and refresh tokens.\n     * This helps de-duplicating users in the list of users known to the app.\n     *\n     * @param response A response from the Authenticator.\n     * @param providerType The type of the authentication provider used.\n     * @returns A new or an existing user.\n     */\n    createOrUpdateUser(response, providerType) {\n        const existingUser = this.users.find((u) => u.id === response.userId);\n        if (existingUser) {\n            // Update the users access and refresh tokens\n            existingUser.accessToken = response.accessToken;\n            existingUser.refreshToken = response.refreshToken;\n            return existingUser;\n        }\n        else {\n            // Create and store a new user\n            if (!response.refreshToken) {\n                throw new Error(\"No refresh token in response from server\");\n            }\n            const user = new User({\n                app: this,\n                id: response.userId,\n                accessToken: response.accessToken,\n                refreshToken: response.refreshToken,\n                providerType,\n            });\n            this.users.unshift(user);\n            return user;\n        }\n    }\n    /**\n     * Restores the state of the app (active and logged-out users) from the storage\n     */\n    hydrate() {\n        const userIds = this.storage.getUserIds();\n        this.users = userIds.map((id) => new User({ app: this, id }));\n    }\n}\n/**\n * A map of app instances returned from calling getApp.\n */\nApp.appCache = {};\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nApp.Credentials = Credentials;\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Get or create a singleton Realm App from an id.\n * Calling this function multiple times with the same id will return the same instance.\n *\n * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n * @returns The Realm App instance.\n */\nfunction getApp(id) {\n    return App.getApp(id);\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * In-memory storage that will not be persisted.\n */\nclass LocalStorage {\n    /**\n     * Constructs a LocalStorage using the global window.\n     */\n    constructor() {\n        if (typeof globalThis.localStorage === \"object\") {\n            this.global = globalThis;\n        }\n        else {\n            throw new Error(\"Cannot use LocalStorage without a global localStorage object\");\n        }\n    }\n    /** @inheritdoc */\n    get(key) {\n        return this.global.localStorage.getItem(key);\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        return this.global.localStorage.setItem(key, value);\n    }\n    /** @inheritdoc */\n    remove(key) {\n        return this.global.localStorage.removeItem(key);\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix) {\n        const keys = [];\n        // Iterate all keys to find the once have a matching prefix.\n        for (let i = 0; i < this.global.localStorage.length; i++) {\n            const key = this.global.localStorage.key(i);\n            if (key && (!prefix || key.startsWith(prefix))) {\n                keys.push(key);\n            }\n        }\n        // Remove the items in a seperate loop to avoid updating while iterating.\n        for (const key of keys) {\n            this.global.localStorage.removeItem(key);\n        }\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        return this.global.addEventListener(\"storage\", listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        return this.global.removeEventListener(\"storage\", listener);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst browser = detect();\nconst DefaultStorage = \"localStorage\" in globalThis ? LocalStorage : MemoryStorage;\n/**\n * Attempt to use the browser to open a window\n *\n * @param url The url to open a window to.\n * @returns Then newly create window.\n */\nfunction openWindow(url) {\n    if (typeof globalThis.open === \"function\") {\n        return globalThis.open(url);\n    }\n    else {\n        console.log(`Please open ${url}`);\n        return null;\n    }\n}\nconst environment$1 = {\n    defaultStorage: new DefaultStorage().prefix(\"realm-web\"),\n    openWindow,\n    platform: (browser === null || browser === void 0 ? void 0 : browser.name) || \"web\",\n    platformVersion: (browser === null || browser === void 0 ? void 0 : browser.version) || \"0.0.0\",\n    TextDecoder,\n};\nsetEnvironment(environment$1);\n/**\n * Handle an OAuth 2.0 redirect.\n *\n * @param location An optional location to use (defaults to the windows current location).\n * @param storage Optional storage used to save any results from the location.\n */\nfunction handleAuthRedirect(location = globalThis.location, storage = environment$1.defaultStorage) {\n    try {\n        const queryString = location.hash.substr(1); // Strip the initial # from the hash\n        OAuth2Helper.handleRedirect(queryString, storage);\n    }\n    catch (err) {\n        // Ensure calling this never throws: It should not interrupt a users flow.\n        console.warn(err);\n    }\n}\n\nexport { App, Credentials, DEFAULT_BASE_URL, LocalStorage, MongoDBRealmError, User, UserState, UserType$1 as UserType, getApp, getEnvironment, handleAuthRedirect, setEnvironment };\n","<script>\n\timport Letter from './Letter.svelte';\n\timport Wordle from './wordle';\n\timport * as Realm from \"realm-web\";\n\t\n\tconst w = new Wordle();\n\tconst app = new Realm.App({ id: 'wordle-gvqgy' });\n\tconst credentials = Realm.Credentials.anonymous();\n\n\tlet words = [];\n\tlet nextDisabled = true;\n\n\tfunction colorChanged(position, color) {\n\t\twords[words.length - 1][position].color = Wordle.COLOR[color];\n\t\tnextDisabled = !nextEnabled();\n\t}\n\n\tfunction nextEnabled() {\n\t\treturn words[words.length - 1].filter(l => l.color === undefined).length === 0 &&\n\t\t\twords[words.length - 1].filter(l => l.color === Wordle.COLOR.correct).length < 5\n\t}\n\n\tasync function getNextWord() {\n\t\tif(words.length > 0) {\n\t\t\tw.pushRow(words[words.length - 1]);\n\t\t}\n\t\tif(!app.currentUser) {\n\t\t\tawait app.logIn(credentials);\n\t\t}\n\t\tconst agg = w.agg();\n\t\tconst mongodb = app.currentUser.mongoClient('mongodb-atlas');\n\t\tconst dictionary = mongodb.db('wordle_solver').collection('dictionary');\n\t\tconst [{word}] = await dictionary.aggregate(agg);\n\t\twords = [...words, word.split('').map(letter => ({letter}))];\n\t\treturn words;\n\t}\n</script>\n\n<svelte:head>\n\t\n\t<style>\n\t\tbody {\n\t\t\tbackground-color: #121213;\n\t\t}\n\t</style>\n</svelte:head>\n\n<main>\n\t{#await getNextWord()}\n\t\t<p class=\"loader\">Setting things up...</p>\n\t{:then _} \n\t\t{#each words as word, i}\n\t\t\t<div class=\"entry\">\n\t\t\t\t<div class=\"word\">\n\t\t\t\t\t{#each word.map(({letter}) => letter) as l, position}\n\t\t\t\t\t\t<Letter letter=\"{l}\" color=\"\" frozen={i < words.length - 1} on:colorchange={(event) => colorChanged(position, event.detail.color)}></Letter>\n\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t\t<button class=\"next\" on:click={getNextWord} disabled={nextDisabled}>Next Word</button>\n\t\t\t</div>\n\t\t{/each}\n\t{/await}\n</main>\n\n<style>\n\t.loader {\n\t\tmargin-top: 10px;\n\t\tdisplay: flex;\n\t\talign-items: flex-end;\n\t\tjustify-content: center;\n\t\tcolor: #d7dadc;\n\t\tfont-weight: 600;\n\t\tfont-size: 22px;\n\t}\n\t.entry {\n\t\tmargin-top: 10px;\n\t\tdisplay: flex;\n\t\talign-items: flex-end;\n\t\tjustify-content: center;\n\t}\n\t.word {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\t.next {\n\t\tfont-family: 'Clear Sans', 'Helvetica Neue', Arial, sans-serif;\n\t\tbackground-color: transparent;\n\t\tcolor: #d7dadc;\n\t\ttext-transform: uppercase;\n\t\tborder: 2px solid #d7dadc;\n\t\tfont-size: 14px;\n\t\tfont-weight: 600;\n\t\tline-height: 20px;\n\t\tpadding: 2px 4px;\n\t\tmargin: 0 0 0 5px;\n\t\tvisibility: hidden;\n\t\tborder-radius: 10px;\n\t\tcursor: pointer;\n\t}\n\t.entry:last-child .next {\n\t\tvisibility: visible;\n\t}\n\t.next:disabled {\n\t\topacity: 0.5;\n\t\tcursor: default;\n\t}\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_style","key","important","style","removeProperty","setProperty","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","$$","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","wholeText","color","letter","frozen","dispatch","setColor","theColor","Wordle","static","absent","present","correct","undefined","regex","$search","query","path","allowAnalyzedField","$sample","size","constructor","schema","agg","BASE_AGG","regexes","in","out","and","col","row","COLOR","join","AGG_WITH_REGEX","pushRow","sequence","byteLength_1","b64","lens","getLens","validLen","placeHoldersLen","toByteArray_1","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray_1","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","Uint8Array","code","start","end","num","output","module","base64Js","byteLength","toByteArray","fromByteArray","ieee754","buffer","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","Infinity","Math","pow","rt","abs","isNaN","floor","log","LN2","buffer$1","exports","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","string","encoding","isEncoding","actual","write","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","babelHelpers","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","isArray","fromObject","toPrimitive","assertSize","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","buffer_1","_extendStatics","__proto__","hasOwnProperty","__extends","__","BSONError","_super","message","_this","configurable","BSONTypeError","checkForMath","potentialGlobal","getGlobal","globalThis","window","self","global","Function","insecureRandomBytes","g","insecureWarning","navigator","product","warn","result","random","randomBytes","target_1","crypto","msCrypto","getRandomValues","requiredRandomBytes","require","detectRandomBytes","isUint8Array","isObjectLike","candidate","deprecate","warned","args","_i","ensureBuffer","potentialBuffer","VALIDATION_REGEX","uuidValidateString","test","uuidHexStringToBuffer","hexString","sanitizedHexString","bufferToUuidHexString","includeDashes","kId$1","UUID","input","id","generate","__id","cacheHexString","toHexString","uuidHexString","otherId","_a","toBinary","Binary","SUBTYPE_UUID","isValid","createFromHexString","for","subType","sub_type","BSON_BINARY_SUBTYPE_DEFAULT","BUFFER_SIZE","position","put","byteValue","decodedByte","asRaw","format","toExtendedJSON","base64String","legacy","$binary","$type","base64","toUUID","fromExtendedJSON","doc","$uuid","JSON","stringify","SUBTYPE_DEFAULT","SUBTYPE_FUNCTION","SUBTYPE_BYTE_ARRAY","SUBTYPE_UUID_OLD","SUBTYPE_MD5","SUBTYPE_ENCRYPTED","SUBTYPE_COLUMN","SUBTYPE_USER_DEFINED","Code","scope","$code","$scope","codeJson","DBRef","collection","oid","db","fields","shift","assign","$ref","$id","$db","namespace","wasm","WebAssembly","Instance","Module","TWO_PWR_32_DBL","TWO_PWR_16_DBL","TWO_PWR_64_DBL","TWO_PWR_63_DBL","INT_CACHE","UINT_CACHE","Long","low","high","unsigned","fromBigInt","writable","fromBits","lowBits","highBits","fromInt","cachedObj","cache","fromNumber","UZERO","ZERO","MAX_UNSIGNED_VALUE","MIN_VALUE","MAX_VALUE","neg","radix","substring","radixToPower","power","fromBytes","le","fromBytesLE","fromBytesBE","isLong","fromValue","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","other","eq","thisNeg","isNegative","otherNeg","comp","divide","divisor","isZero","div_u","div_s","get_high","approx","rem","toUnsigned","gt","shru","UONE","ONE","NEG_ONE","shr","div","shl","gte","toNumber","log2","ceil","delta","approxRes","approxRem","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","greaterThan","greaterThanOrEqual","ge","isEven","isOdd","isPositive","lessThan","lt","lessThanOrEqual","lte","modulo","rem_u","rem_s","mod","multiply","multiplier","TWO_PWR_24","b00","negate","not","notEquals","neq","ne","or","shiftLeft","numBits","toInt","shiftRight","shiftRightUnsigned","shr_u","subtract","subtrahend","toBigInt","BigInt","toBytes","toBytesLE","toBytesBE","toSigned","radixLong","rem1","remDiv","digits","xor","eqz","relaxed","$numberLong","PARSE_STRING_REGEXP","PARSE_INF_REGEXP","PARSE_NAN_REGEXP","EXPONENT_MAX","EXPONENT_MIN","NAN_BUFFER","reverse","INF_NEGATIVE_BUFFER","INF_POSITIVE_BUFFER","EXPONENT_REGEX","isDigit","divideu128","DIVISOR","_rem","quotient","invalidErr","Decimal128","representation","biasedExponent","sawRadix","foundNonZero","significantDigits","nDigitsRead","nDigits","radixPosition","firstNonZero","nDigitsStored","digitsInsert","firstDigit","lastDigit","exponent","significandHigh","significandLow","stringMatch","match","infMatch","nanMatch","unsignedNumber","expSign","expNumber","endOfString","roundDigit","roundBit","dIdx","left","right","uhleft","uhright","significand","leftHigh","leftLow","rightHigh","rightLow","productHigh","productMid","productMid2","productLow","multiply64x2","dec","biased_exponent","significand_digits","significand_msb","k","is_zero","significand128","midl","midh","combination","least_digits","scientific_exponent","radix_position","$numberDecimal","Double","is","sign","$numberDouble","toFixed","isInteger","toExponential","toUpperCase","doubleValue","parseFloat","Int32","$numberInt","MaxKey","$maxKey","MinKey","$minKey","checkForHexRegExp","RegExp","PROCESS_UNIQUE","kId","ObjectId","inputId","workingId","getInc","time","Date","now","inc","getTimestamp","timestamp","setTime","createPk","createFromTime","$oid","BSONRegExp","pattern","sort","parseOptions","$regex","$options","$regularExpression","_bsontype","BSONSymbol","$symbol","Timestamp","t","$timestamp","optRadix","BSON_INT32_MAX$1","BSON_INT32_MIN$1","BSON_INT64_MAX$1","BSON_INT64_MIN$1","keysToCodecs","deserializeValue","$undefined","startsWith","$date","date","parse","isDBRefLike","$dbPointer","v","dollarKeys","valid_1","getISOString","isoStr","toISOString","getUTCMilliseconds","serializeValue","seenObjects","findIndex","entry","propertyName","leadingPart","prop","alreadySeen","circularPart","current","leadingSpace","repeat","dashes","serializeArray","dateNum","getTime","inRange","int64Range","isRegExp","flags","source","bsontype","_doc","Reflect","isBSONType","outDoc","mapper","BSON_TYPE_MAPPINGS","serializeDocument","EJSON","low_","high_","unsigned_","ObjectID","finalOptions","strict","replacer","serialize","deserialize","ejson","_keys","_values","entries","next","done","values","JS_INT_MAX","JS_INT_MIN","__spreadArray","to","pack","ar","BrowserInfo","version","os","NodeInfo","process","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOT_OS_REGEX","userAgentRules","operatingSystemRules","parseUserAgent","ua","matchedRule","reduce","matched","browser","uaMatch","exec","matchUserAgent","versionParts","count","ii","createVersionParts","detectOS","searchBotMatch","DefaultNetworkTransport","fetch","AbortController","fetchWithCallbacks","request","async","response","decodedBody","responseHeaders","headers","statusCode","status","body","onSuccess","catch","onError","timeoutMs","url","signal","cancelTimeout","createTimeoutSignal","extraFetchOptions","controller","timeout","setTimeout","abort","clearTimeout","DEFAULT_HEADERS","bind","_hasatob","atob","_hasbtoa","btoa","_hasBuffer","_TD","TextDecoder","_TE","TextEncoder","b64chs","b64tab","tab","b64re","_fromCC","_U8Afrom","it","_mkUriSafe","m0","_tidyB64","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","_btoa","_fromUint8Array","u8a","strs","cb_utob","cc","re_utob","utob","u","_encode","encode","urlsafe","re_btou","cb_btou","cccc","btou","atobPolyfill","u24","r1","r2","charAt","_atob","_toUint8Array","_decode","decode","_unURI","gBase64","SERIALIZATION_OPTIONS","UserType","DataKey","DATA_MAPPING","NAME","EMAIL","PICTURE","FIRST_NAME","LAST_NAME","GENDER","BIRTHDAY","MIN_AGE","MAX_AGE","UserProfile","Normal","identities","identity","provider_type","providerType","mappedData","fromEntries","PrefixedStorage","storage","keyPart","PART_SEPARATOR","remove","prefix","addListener","listener","removeListener","ACCESS_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","PROFILE_STORAGE_KEY","PROVIDER_TYPE_STORAGE_KEY","UserStorage","userId","super","accessToken","refreshToken","profile","removeKeysWithUndefinedValues","encodeQueryString","params","prefixed","cleanedParams","encodeURIComponent","RESERVED_NAMES","getOwnPropertyNames","cleanArgsAndSerialize","cleaned","cleanArgs","FunctionsFactory","fetcher","config","serviceName","argsTransformation","factory","Proxy","receiver","callFunction","service","appRoute","fetchJSON","method","functionsCall","callFunctionStreaming","qs","baas_request","fetchStream","isDevelopmentMode","handleDeprecatedPositionalArgs","methodName","argNames","hasRestArgs","restArgsText","deprecatedItem","suggestedReplacement","argsObject","prev","argName","restArgs","state","__DEV__","EmailPasswordAuth","providerName","userDetails","emailPasswordAuth","register","tokenDetails","confirm","emailDetails","confirmSend","confirmCall","resetDetails","reset","resetSend","resetCall","routes","api","app","appId","location","authProvider","login","auth","apiKeys","enable","disable","session","ApiKeyAuth","tokenType","keyId","fetchAll","environment","getEnvironment","WatchError","WatchStreamState","WatchStream","_state","NEED_DATA","_error","_textDecoder","_buffer","_bufferOffset","_eventType","_dataBuffer","feedBuffer","assertState","stream","advanceBufferState","feedLine","line","endsWith","feedSse","eventType","colon","field","sse","firstPercentIndex","percentIndex","encoded","HAVE_ERROR","error_code","errorCode","_nextEvent","HAVE_EVENT","nextEvent","nextNewlineIndex","MongoDBCollection","databaseName","collectionName","functions","find","database","project","projection","findOne","findOneAndUpdate","upsert","returnNewDocument","findOneAndReplace","replacement","findOneAndDelete","aggregate","pipeline","insertOne","insertMany","documents","deleteOne","deleteMany","updateOne","arrayFilters","updateMany","ids","iterator","watchStream","chunk","createCollection","createDatabase","UserState","UserType$1","User","parameters","_accessToken","_refreshToken","_profile","clone","userContext","currentUser","token","allUsers","LoggedOut","Active","Removed","isLoggedIn","customData","decodeAccessToken","userData","deviceId","payload","credentials","authenticator","authenticate","details","refreshProfile","access_token","refreshAccessToken","mongoClient","createService","encodedPayload","decodedPayload","parsedPayload","exp","expires","iat","issuedAt","subject","user_data","Credentials","email","password","username","derivePayload","redirectUrl","authCode","idToken","id_token","redirectUrlOrAccessToken","redirectUrlOrIdToken","USER_IDS_STORAGE_KEY","DEVICE_ID_STORAGE_KEY","AppStorage","getUserIds","userIdsString","userIds","setUserIds","mergeWithExisting","existingIds","removeUserId","getDeviceId","setDeviceId","REDIRECT_HASH_TO_RESULT","_stitch_client_app_id","_baas_client_app_id","_stitch_ua","_baas_ua","_stitch_link","_baas_link","_stitch_error","_baas_error","_stitch_state","_baas_state","OAuth2Helper","openWindow","queryString","cleanStr","kvp","decodeURIComponent","decodeQueryString","defaultStorage","parseRedirectLocation","oauth2Storage","getStateStorage","authInfo","openWindowAndWaitForRedirect","stateStorage","reject","windowClosedInterval","redirectWindow","handleStorageUpdate","parsedResult","clearInterval","close","err","setInterval","closed","generateState","generateRandomString","REDIRECT_LOCATION_HEADER","Authenticator","getDeviceInformation","oauth2","linkingUser","deviceInformation","isLinking","getLogInUrl","redirect","providerRedirectHeader","device","user","mode","openWindowAndWaitForAuthResponse","logInUrl","user_id","refresh_token","device_id","link","extraQueryParams","loginRoute","locationUrl","redirectResult","decodeAuthInfo","userAuth","MongoDBRealmError","statusText","summary","json","Fetcher","transport","locationUrlContext","Authorization","restOfRequest","buildAuthorizationHeader","ok","fromRequestAndResponse","serializedBody","buildBody","contentTypeHeaders","buildJsonHeader","Accept","contentType","asyncIterator","reader","getReader","cancel","asyncIteratorFromResponseBody","DeviceFields","DeviceInformation","appVersion","sdkVersion","platformVersion","App","idOrConfiguration","users","_locationUrl","configuration","baseUrl","skipLocationRequest","localApp","baseStorage","appCache","switchUser","nextUser","unshift","fetchProfile","createOrUpdateUser","logOut","activeUsers","hostname","deviceIdStr","existingUser","userAgent","DefaultStorage","localStorage","getItem","setItem","removeItem","listeners","fireListeners","environment$1","open","promise","info","resolved","child_ctx","needs_flush","blocks","mount","hasCatch","pending","w","Realm.App","Realm.Credentials","anonymous","words","nextDisabled","colorChanged","logIn","dictionary","word"],"mappings":"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IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,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"}